{"file_contents":{"README.md":{"content":"# Pistac - پلتفرم آموزشی پیستاک\n\nپلتفرم آموزشی پیستاک برای آموزش کشاورزی با پشتیبانی کامل از زبان فارسی (RTL).\n\n## ویژگی‌ها\n\n- 📚 دوره‌های آموزشی\n- 📄 کتابخانه اسناد  \n- 📰 مجله‌های تخصصی\n- 🎥 ویدیوهای آموزشی\n- 🛠️ کارگاه‌های عملی\n- 👤 مدیریت کاربران و پروفایل\n- 📱 طراحی واکنش‌گرا برای موبایل\n- 🔐 سیستم احراز هویت کامل\n\n## تکنولوژی‌ها\n\n### Frontend\n- React + TypeScript\n- Tailwind CSS\n- Radix UI Components  \n- TanStack Query\n- Wouter Router\n- Lucide Icons\n\n### Backend  \n- Node.js + Express\n- TypeScript\n- Drizzle ORM\n- PostgreSQL\n- Passport.js Authentication\n\n## نصب و راه‌اندازی\n\n### پیش‌نیازها\n- Node.js 18+\n- PostgreSQL\n- npm یا yarn\n\n### مراحل نصب\n\n1. کلون کردن پروژه:\n\\`\\`\\`bash\ngit clone <repository-url>\ncd pistac\n\\`\\`\\`\n\n2. نصب dependencies:\n\\`\\`\\`bash\nnpm install\n\\`\\`\\`\n\n3. تنظیم متغیرهای محیطی:\n\\`\\`\\`bash\n# ایجاد فایل .env\nDATABASE_URL=postgresql://username:password@localhost:5432/pistac\n\\`\\`\\`\n\n4. اجرای migrations:\n\\`\\`\\`bash\nnpm run db:push\n\\`\\`\\`\n\n5. اجرای پروژه:\n\\`\\`\\`bash\n# Development\nnpm run dev\n\n# Production\nnpm run build\nnpm start\n\\`\\`\\`\n\n## Deploy در Render\n\n### مراحل deploy:\n\n1. پوش کردن کد به GitHub\n2. ایجاد PostgreSQL database در Render\n3. ایجاد Web Service در Render با تنظیمات زیر:\n   - **Build Command**: \\`npm ci && npm run build && npm run db:push\\`\n   - **Start Command**: \\`npm start\\`\n   - **Environment Variables**:\n     - \\`NODE_ENV=production\\`\n     - \\`DATABASE_URL=<render-postgres-url>\\`\n\n### متغیرهای محیطی مورد نیاز\n\n- \\`DATABASE_URL\\`: رشته اتصال به PostgreSQL\n- \\`NODE_ENV\\`: محیط اجرا (development/production)\n- \\`PORT\\`: پورت سرور (خودکار در Render)\n\n## ساختار پروژه\n\n\\`\\`\\`\n├── client/           # React frontend\n│   ├── src/\n│   │   ├── components/\n│   │   ├── pages/\n│   │   └── hooks/\n├── server/           # Express backend  \n│   ├── routes.ts\n│   ├── db.ts\n│   └── storage.ts\n├── shared/           # Shared types & schemas\n│   └── schema.ts\n├── public/           # Static assets\n└── dist/             # Production build\n\\`\\`\\`\n\n## API Endpoints\n\n### Auth\n- \\`POST /api/auth/login\\` - ورود کاربر\n- \\`POST /api/auth/register\\` - ثبت‌نام کاربر  \n- \\`GET /api/auth/user\\` - اطلاعات کاربر جاری\n- \\`POST /api/auth/logout\\` - خروج کاربر\n\n### Content\n- \\`GET /api/courses\\` - لیست دوره‌ها\n- \\`GET /api/projects\\` - لیست پروژه‌ها\n- \\`GET /api/documents\\` - لیست اسناد\n- \\`GET /api/magazines\\` - لیست مجله‌ها\n- \\`GET /api/workshops\\` - لیست کارگاه‌ها\n- \\`GET /api/webinars\\` - لیست وبینارها\n\n### Admin\n- \\`POST /api/admin/*\\` - مدیریت محتوا (فقط ادمین)\n\n## Admin Panel\n\nکاربر پیش‌فرض ادمین:\n- Username: \\`admin\\`\n- Password: \\`730895015\\`\n\n## لایسنس\n\nMIT License","size_bytes":3331},"build.sh":{"content":"#!/bin/bash\n\n# Install dependencies\nnpm ci\n\n# Build frontend\nnpm run build\n\n# Run database migrations\nnpm run db:push","size_bytes":117},"capacitor.config.ts":{"content":"\nimport { CapacitorConfig } from '@capacitor/cli';\n\nconst config: CapacitorConfig = {\n  appId: 'com.pistac.app',\n  appName: 'پیستاط',\n  webDir: 'dist/public',\n  server: {\n    androidScheme: 'https'\n  },\n  plugins: {\n    SplashScreen: {\n      launchShowDuration: 2000,\n      backgroundColor: \"#4ade80\",\n      showSpinner: false\n    }\n  }\n};\n\nexport default config;\n","size_bytes":370},"drizzle.config.ts":{"content":"\nimport { defineConfig } from \"drizzle-kit\";\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"sqlite\",\n  dbCredentials: {\n    url: \"pistac.db\",\n  },\n});\n","size_bytes":202},"pistach-server.js":{"content":"#!/usr/bin/env node\n\nconst http = require('http');\nconst url = require('url');\n\nconst PORT = process.env.PORT || 3001;\n\nconst htmlContent = `<!DOCTYPE html>\n<html lang=\"fa\" dir=\"rtl\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>پیستاط - مرکز آموزشی کشاورزی</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n        body { \n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \n            direction: rtl; \n            margin: 0; \n            padding: 0; \n            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n        }\n        .card-hover:hover { \n            transform: translateY(-4px); \n            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1); \n            transition: all 0.3s ease;\n        }\n        .spinner { \n            animation: spin 1s linear infinite; \n        }\n        @keyframes spin { \n            from { transform: rotate(0deg); } \n            to { transform: rotate(360deg); } \n        }\n        .gradient-bg {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        }\n        .glass-effect {\n            background: rgba(255, 255, 255, 0.25);\n            backdrop-filter: blur(10px);\n            border: 1px solid rgba(255, 255, 255, 0.18);\n        }\n        .line-clamp-2 {\n            display: -webkit-box;\n            -webkit-line-clamp: 2;\n            -webkit-box-orient: vertical;\n            overflow: hidden;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"app\">\n        <!-- Header -->\n        <div class=\"gradient-bg p-8 text-center text-white\">\n            <h1 class=\"text-5xl font-bold mb-3\">🌱 پیستاط</h1>\n            <p class=\"text-xl mb-2 opacity-90\">مرکز آموزشی تخصصی کشاورزی مدرن</p>\n            <p class=\"opacity-75\">یادگیری • پیشرفت • موفقیت</p>\n        </div>\n\n        <div class=\"container mx-auto px-4 py-8\">\n            <!-- Stats Cards -->\n            <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n                <div class=\"bg-gradient-to-br from-blue-500 to-blue-600 p-6 rounded-2xl text-white text-center card-hover\">\n                    <div class=\"text-3xl font-bold mb-1\" id=\"courses-count\">-</div>\n                    <div class=\"text-sm opacity-90\">دوره فعال</div>\n                </div>\n                <div class=\"bg-gradient-to-br from-green-500 to-green-600 p-6 rounded-2xl text-white text-center card-hover\">\n                    <div class=\"text-3xl font-bold mb-1\" id=\"projects-count\">-</div>\n                    <div class=\"text-sm opacity-90\">پروژه</div>\n                </div>\n                <div class=\"bg-gradient-to-br from-purple-500 to-purple-600 p-6 rounded-2xl text-white text-center card-hover\">\n                    <div class=\"text-3xl font-bold mb-1\" id=\"documents-count\">-</div>\n                    <div class=\"text-sm opacity-90\">مقاله</div>\n                </div>\n                <div class=\"bg-gradient-to-br from-orange-500 to-orange-600 p-6 rounded-2xl text-white text-center card-hover\">\n                    <div class=\"text-3xl font-bold mb-1\">87%</div>\n                    <div class=\"text-sm opacity-90\">پیشرفت</div>\n                </div>\n            </div>\n\n            <!-- Featured Course -->\n            <div class=\"bg-gradient-to-br from-green-500 via-emerald-500 to-teal-600 rounded-2xl p-8 text-white mb-8 card-hover\">\n                <h2 class=\"text-2xl font-bold mb-3\">🎯 دوره پیشنهادی این هفته</h2>\n                <h3 class=\"text-xl font-semibold mb-2\">کشاورزی هوشمند با IoT</h3>\n                <p class=\"mb-6 opacity-90\">یادگیری فناوری‌های نوین اینترنت اشیا در کشاورزی مدرن و پیشرفته</p>\n                <button class=\"bg-white text-green-600 px-6 py-3 rounded-xl font-semibold hover:shadow-lg transition-all\">\n                    شروع یادگیری رایگان\n                </button>\n            </div>\n\n            <!-- Loading State -->\n            <div id=\"loading-state\" class=\"text-center py-8\">\n                <div class=\"spinner w-8 h-8 border-4 border-green-500 border-t-transparent rounded-full mx-auto mb-4\"></div>\n                <p class=\"text-gray-600\">در حال بارگیری محتوا از سرور...</p>\n            </div>\n\n            <!-- Content Sections -->\n            <div id=\"content-sections\" class=\"space-y-8\" style=\"display: none;\">\n                <!-- Digital Library -->\n                <div class=\"bg-white/80 backdrop-blur rounded-2xl p-6 shadow-xl\">\n                    <h2 class=\"text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\n                        <span class=\"text-2xl\">📖</span>کتابخانه دیجیتال کشاورزی\n                    </h2>\n                    <div id=\"documents-grid\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                        <!-- Documents will be loaded here -->\n                    </div>\n                </div>\n\n                <!-- Recent Activities -->\n                <div class=\"bg-white/80 backdrop-blur rounded-2xl shadow-xl p-6\">\n                    <h2 class=\"text-xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\n                        <span class=\"text-2xl\">📊</span>فعالیت‌های اخیر\n                    </h2>\n                    <div class=\"space-y-4\">\n                        <div class=\"flex items-center gap-4 p-4 bg-blue-50 rounded-xl card-hover\">\n                            <div class=\"w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center\">\n                                <span class=\"text-white text-lg\">📚</span>\n                            </div>\n                            <div class=\"flex-1\">\n                                <p class=\"font-medium text-gray-800\">مطالعه جدیدترین مقالات کشاورزی</p>\n                                <p class=\"text-sm text-gray-500\">دسترسی فوری • محتوای به‌روز</p>\n                            </div>\n                        </div>\n                        <div class=\"flex items-center gap-4 p-4 bg-green-50 rounded-xl card-hover\">\n                            <div class=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center\">\n                                <span class=\"text-white text-lg\">🚀</span>\n                            </div>\n                            <div class=\"flex-1\">\n                                <p class=\"font-medium text-gray-800\">شروع پروژه‌های عملی جدید</p>\n                                <p class=\"text-sm text-gray-500\">آماده برای شروع • پروژه‌های متنوع</p>\n                            </div>\n                        </div>\n                        <div class=\"flex items-center gap-4 p-4 bg-purple-50 rounded-xl card-hover\">\n                            <div class=\"w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center\">\n                                <span class=\"text-white text-lg\">🎓</span>\n                            </div>\n                            <div class=\"flex-1\">\n                                <p class=\"font-medium text-gray-800\">دوره‌های تخصصی در حال برگزاری</p>\n                                <p class=\"text-sm text-gray-500\">یادگیری پیشرفته • مدرک معتبر</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Bottom Navigation -->\n        <div class=\"fixed bottom-0 left-0 right-0 glass-effect shadow-2xl\">\n            <div class=\"flex justify-around py-3\">\n                <button onclick=\"setActiveTab('home')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">🏠</span>\n                    <span class=\"text-xs font-medium\">خانه</span>\n                </button>\n                <button onclick=\"setActiveTab('courses')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">📚</span>\n                    <span class=\"text-xs font-medium\">دوره‌ها</span>\n                </button>\n                <button onclick=\"setActiveTab('projects')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">🚀</span>\n                    <span class=\"text-xs font-medium\">پروژه‌ها</span>\n                </button>\n                <button onclick=\"setActiveTab('library')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">📖</span>\n                    <span class=\"text-xs font-medium\">کتابخانه</span>\n                </button>\n                <button onclick=\"setActiveTab('profile')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">👤</span>\n                    <span class=\"text-xs font-medium\">پروفایل</span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        let currentTab = 'home';\n\n        function setActiveTab(tab) {\n            currentTab = tab;\n            // Update navigation styles\n            document.querySelectorAll('.nav-btn').forEach(btn => {\n                btn.className = 'nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors';\n            });\n            event.target.closest('.nav-btn').className = 'nav-btn flex flex-col items-center py-2 px-4 text-green-600 transition-colors';\n            \n            // Load different content based on tab\n            if (tab !== 'home') {\n                const names = {\n                    'courses': 'دوره‌ها', \n                    'projects': 'پروژه‌ها', \n                    'library': 'کتابخانه', \n                    'profile': 'پروفایل'\n                };\n                document.getElementById('content-sections').innerHTML = \n                    \\`<div class=\"text-center py-20 text-gray-600 bg-white/80 backdrop-blur rounded-2xl\">\n                        <h2 class=\"text-2xl font-bold mb-4\">صفحه \\${names[tab] || tab}</h2>\n                        <p class=\"text-gray-500\">محتوای این بخش به زودی اضافه خواهد شد</p>\n                        <p class=\"text-sm text-gray-400 mt-2\">برای بازگشت به خانه روی دکمه خانه کلیک کنید</p>\n                    </div>\\`;\n            } else {\n                loadHomeContent();\n            }\n        }\n\n        async function loadData() {\n            try {\n                console.log('🔄 شروع بارگیری داده‌ها از API...');\n                \n                // Try to fetch data from the main server\n                const baseUrl = window.location.protocol + '//' + window.location.hostname + ':5000';\n                const [coursesResponse, projectsResponse, documentsResponse] = await Promise.all([\n                    fetch(\\`\\${baseUrl}/api/courses\\`).catch(() => ({ ok: false })),\n                    fetch(\\`\\${baseUrl}/api/projects\\`).catch(() => ({ ok: false })),\n                    fetch(\\`\\${baseUrl}/api/documents\\`).catch(() => ({ ok: false }))\n                ]);\n\n                const courses = coursesResponse.ok ? await coursesResponse.json() : [];\n                const projects = projectsResponse.ok ? await projectsResponse.json() : [];\n                const documents = documentsResponse.ok ? await documentsResponse.json() : [];\n\n                console.log(\\`✅ داده‌ها بارگیری شد: \\${courses.length} دوره، \\${projects.length} پروژه، \\${documents.length} مقاله\\`);\n\n                // Update counters\n                document.getElementById('courses-count').textContent = courses.length || '0';\n                document.getElementById('projects-count').textContent = projects.length || '0';\n                document.getElementById('documents-count').textContent = documents.length || '0';\n\n                // Load documents\n                const documentsGrid = document.getElementById('documents-grid');\n                if (documents.length > 0) {\n                    documentsGrid.innerHTML = documents.slice(0, 6).map(doc => \\`\n                        <div class=\"bg-white rounded-xl shadow-lg p-4 card-hover transition-all duration-300\">\n                            <h3 class=\"font-bold text-gray-800 mb-2 text-sm\">\\${doc.title}</h3>\n                            <p class=\"text-gray-600 text-xs mb-3 line-clamp-2\">\\${doc.excerpt || doc.content || 'محتوای مفیدی برای یادگیری کشاورزی'}</p>\n                            <div class=\"flex justify-between items-center\">\n                                <span class=\"text-xs text-gray-500\">\\${doc.author || 'متخصص کشاورزی'}</span>\n                                <button class=\"bg-purple-500 text-white px-3 py-1 rounded text-xs hover:bg-purple-600 transition-colors\">\n                                    مشاهده\n                                </button>\n                            </div>\n                        </div>\n                    \\`).join('');\n                } else {\n                    documentsGrid.innerHTML = \\`\n                        <div class=\"col-span-full text-center py-8 text-gray-500\">\n                            <p class=\"text-lg mb-2\">📚</p>\n                            <p>هیچ مقاله‌ای یافت نشد</p>\n                            <p class=\"text-sm mt-2\">لطفا بعدا تلاش کنید</p>\n                        </div>\n                    \\`;\n                }\n\n                // Hide loading state and show content\n                document.getElementById('loading-state').style.display = 'none';\n                document.getElementById('content-sections').style.display = 'block';\n\n            } catch (error) {\n                console.warn('⚠️ خطا در بارگیری داده‌ها:', error);\n                document.getElementById('loading-state').innerHTML = \n                    '<p class=\"text-orange-500\">خطا در اتصال به سرور داده</p>';\n                \n                // Show error state after 2 seconds\n                setTimeout(() => {\n                    document.getElementById('courses-count').textContent = '0';\n                    document.getElementById('projects-count').textContent = '0';\n                    document.getElementById('documents-count').textContent = '0';\n                    document.getElementById('loading-state').style.display = 'none';\n                    document.getElementById('content-sections').style.display = 'block';\n                    \n                    // Show connection error\n                    document.getElementById('documents-grid').innerHTML = \\`\n                        <div class=\"col-span-full text-center py-8 text-gray-500\">\n                            <p class=\"text-lg mb-2\">⚠️</p>\n                            <p class=\"font-medium\">خطا در اتصال به سرور</p>\n                            <p class=\"text-sm mt-2\">لطفا اتصال اینترنت خود را بررسی کنید</p>\n                        </div>\n                    \\`;\n                }, 2000);\n            }\n        }\n\n        function loadHomeContent() {\n            document.getElementById('content-sections').style.display = 'block';\n        }\n\n        // Initialize the application\n        document.addEventListener('DOMContentLoaded', function() {\n            console.log('🌱 پیستاط - پلتفرم آموزشی کشاورزی بارگذاری شد');\n            console.log('📍 در حال اجرا روی پورت ' + window.location.port);\n            loadData();\n        });\n\n        // Add some interactivity\n        document.addEventListener('click', function(e) {\n            if (e.target.textContent === 'شروع یادگیری رایگان') {\n                alert('به زودی این قابلیت فعال خواهد شد!');\n            }\n            if (e.target.textContent === 'مشاهده') {\n                alert('صفحه مشاهده مقاله به زودی اضافه خواهد شد');\n            }\n        });\n    </script>\n    \n    <!-- Spacer for bottom navigation -->\n    <div style=\"height: 80px;\"></div>\n</body>\n</html>`;\n\nconst server = http.createServer((req, res) => {\n    const parsedUrl = url.parse(req.url, true);\n    \n    // Handle CORS\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n    \n    if (req.method === 'OPTIONS') {\n        res.writeHead(200);\n        res.end();\n        return;\n    }\n    \n    if (parsedUrl.pathname === '/' || parsedUrl.pathname === '/index.html') {\n        res.writeHead(200, {\n            'Content-Type': 'text/html; charset=utf-8',\n            'Cache-Control': 'no-cache, no-store, must-revalidate',\n            'Pragma': 'no-cache',\n            'Expires': '0'\n        });\n        res.end(htmlContent);\n    } else {\n        res.writeHead(404, { 'Content-Type': 'text/plain; charset=utf-8' });\n        res.end('صفحه یافت نشد - Page Not Found');\n    }\n});\n\nserver.listen(PORT, '0.0.0.0', () => {\n    console.log(`🌱 پیستاط Standalone Server running at:`);\n    console.log(`   Local:   http://localhost:${PORT}`);\n    console.log(`   Network: http://0.0.0.0:${PORT}`);\n    console.log(`📱 برای مشاهده پلتفرم به آدرس بالا مراجعه کنید`);\n});\n\n// Handle graceful shutdown\nprocess.on('SIGINT', () => {\n    console.log('\\n🛑 سرور پیستاط بسته شد');\n    server.close(() => {\n        process.exit(0);\n    });\n});\n\nprocess.on('SIGTERM', () => {\n    console.log('\\n🛑 سرور پیستاط بسته شد');\n    server.close(() => {\n        process.exit(0);\n    });\n});","size_bytes":18409},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"render.yaml":{"content":"services:\n  - type: web\n    name: pistach-app\n    env: node\n    plan: free\n    buildCommand: npm ci && npm run build\n    startCommand: npm start\n    envVars:\n      - key: NODE_ENV\n        value: production\n      - key: DATABASE_URL\n        fromDatabase:\n          name: pistach-db\n          property: connectionString\n\ndatabases:\n  - name: pistach-db\n    databaseName: pistach\n    user: pistach_user\n    plan: free","size_bytes":414},"replit.md":{"content":"# Replit.md - Pistac Educational Platform\n\n## Overview\n\nPistac is a modern educational platform built for agricultural learning, featuring a full-stack architecture with React frontend, Express.js backend, and PostgreSQL database. The platform provides courses, projects, documents, magazines, and workshops with a focus on Persian (RTL) language support.\n\n## System Architecture\n\nThe application follows a monorepo structure with clear separation of concerns:\n\n- **Frontend**: React with TypeScript, Vite for bundling\n- **Backend**: Express.js with TypeScript \n- **Database**: PostgreSQL with Drizzle ORM\n- **UI Components**: Radix UI with Tailwind CSS (shadcn/ui style)\n- **State Management**: TanStack Query for server state\n- **Routing**: Wouter for client-side routing\n\n## Key Components\n\n### Frontend Architecture\n- **Client Directory**: Contains React application with TypeScript\n- **Routing**: Uses Wouter for lightweight client-side routing\n- **UI Library**: Custom implementation using Radix UI primitives with Tailwind styling\n- **State Management**: TanStack Query handles server state and caching\n- **Styling**: Tailwind CSS with RTL support for Persian language\n- **PWA Support**: Service worker and manifest for mobile app experience\n\n### Backend Architecture\n- **Server Directory**: Express.js application with TypeScript\n- **API Routes**: RESTful API endpoints under `/api` prefix\n- **Database Access**: Drizzle ORM for type-safe database operations\n- **Authentication**: Replit Auth integration for user management\n- **Session Management**: PostgreSQL-based session storage\n\n### Database Schema\nThe database uses PostgreSQL with the following main entities:\n- **Users**: User accounts with roles (admin, user, premium)\n- **Courses**: Educational courses with progress tracking\n- **Modules**: Course modules and lessons\n- **Projects**: Project-based learning content\n- **Documents**: PDF and text documents\n- **Magazines**: Educational magazine issues\n- **Articles**: Magazine articles and blog posts\n- **Workshops**: Workshop content and materials\n- **Media Content**: Video and audio files\n- **Slides**: Homepage slider content\n\n## Data Flow\n\n1. **Client Requests**: React components make API calls using TanStack Query\n2. **API Layer**: Express.js routes handle requests and validate data using Zod schemas\n3. **Database Layer**: Drizzle ORM executes type-safe database queries\n4. **Response**: JSON data flows back through the API to React components\n5. **State Management**: TanStack Query caches responses and manages loading states\n\n## External Dependencies\n\n### Frontend Dependencies\n- **React**: Core frontend framework\n- **Radix UI**: Accessible UI component primitives\n- **TanStack Query**: Server state management\n- **Tailwind CSS**: Utility-first CSS framework\n- **Wouter**: Lightweight routing library\n- **Lucide React**: Modern icon library\n\n### Backend Dependencies\n- **Express.js**: Web application framework\n- **Drizzle ORM**: Type-safe SQL toolkit\n- **Zod**: TypeScript-first schema validation\n- **Passport**: Authentication middleware\n- **PostgreSQL**: Primary database system\n- **Neon Database**: Serverless PostgreSQL hosting\n\n### Development Dependencies\n- **Vite**: Build tool and development server\n- **TypeScript**: Type safety and development experience\n- **ESBuild**: Fast JavaScript bundler for production\n\n## Deployment Strategy\n\nThe application supports multiple deployment strategies:\n\n### Vercel Deployment\n- **API Routes**: Serverless functions in `/api` directory\n- **Static Assets**: Client build output served from CDN\n- **Database**: Neon PostgreSQL for production\n- **Environment Variables**: Managed through Vercel dashboard\n\n### Replit Deployment\n- **Development**: Hot reload with Vite dev server\n- **Production**: Node.js server with built client assets\n- **Database**: PostgreSQL connection via DATABASE_URL\n- **Authentication**: Integrated Replit Auth system\n\n### Local Development\n- **Database**: Local PostgreSQL or Neon development database\n- **Frontend**: Vite dev server with hot module replacement\n- **Backend**: tsx for TypeScript execution in development\n- **Migration**: Drizzle Kit for database schema management\n\n## Changelog\n\n```\nChangelog:\n- June 29, 2025. Initial setup\n- June 29, 2025. Applied new color theme from reference design:\n  * Light green background for hero slider\n  * Purple, orange, and green colored circles for quick access\n  * Monochromatic gray icons throughout the interface\n  * Added \"دسترسی سریع\" section at bottom with colored icons\n  * Updated CSS variables for consistent color palette\n- July 1, 2025. Implemented complete file upload system:\n  * Added multer package for real file uploads\n  * Created /api/upload endpoint supporting images and PDFs (10MB limit)\n  * Files stored in public/uploads with unique naming\n  * Static file serving from /uploads route\n  * WordPress-like media library interface\n  * Fixed slide form to accept relative URLs from media library\n  * Added helper button to quickly access media library from slide form\n- July 7, 2025. Enhanced file upload system for demo content:\n  * Added demo-uploader.html for easy file upload interface\n  * Created direct upload guide for copying files to public/uploads\n  * Prepared sample demo files (logo, slides, webinar posters)\n  * Fixed cache invalidation issues with staleTime: 0 configuration\n  * Added refetchQueries to all mutations for immediate UI updates\n- July 9, 2025. Updated bottom navigation menu:\n  * Simplified navigation to 4 main items: خانه، علاقه‌مندی‌ها، پروفایل، دسته‌بندی\n  * Added expandable categories menu with: کارگاه آموزشی، وبینار آموزشی، فصلنامه رویش سبز، آرشیو پیستاط\n  * Improved user experience with clear category navigation\n  * Added FavoritesPage import and routing\n- July 12, 2025. Completed migration from Replit Agent to standard Replit environment:\n  * Successfully migrated codebase with proper database setup\n  * Added PostgreSQL database with all required tables\n  * Fixed routing and workflow configuration \n  * Added \"درباره ما\" (About Us) button to bottom navigation after categories\n  * Application now running cleanly on Replit with admin user: admin/730895015\n- July 12, 2025. Migration to Replit and navigation enhancement:\n  * Successfully migrated project from Replit Agent to standard Replit environment\n  * Set up PostgreSQL database with proper migrations\n  * Added \"درباره ما\" (About Us) navigation item to bottom menu after categories\n  * All systems now running properly with secure client/server separation\n```\n\n## User Preferences\n\n```\nPreferred communication style: Simple, everyday language.\n```","size_bytes":6738},"standalone-pistach.js":{"content":"const express = require('express');\nconst path = require('path');\n\nconst app = express();\nconst PORT = 3001;\n\n// Enable CORS\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  next();\n});\n\n// Serve the Pistach platform\napp.get('/', (req, res) => {\n  const htmlContent = `<!DOCTYPE html>\n<html lang=\"fa\" dir=\"rtl\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>پیستاط - مرکز آموزشی کشاورزی</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n        body { \n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \n            direction: rtl; \n            margin: 0; \n            padding: 0; \n            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n        }\n        .card-hover:hover { \n            transform: translateY(-4px); \n            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1); \n            transition: all 0.3s ease;\n        }\n        .spinner { \n            animation: spin 1s linear infinite; \n        }\n        @keyframes spin { \n            from { transform: rotate(0deg); } \n            to { transform: rotate(360deg); } \n        }\n        .gradient-bg {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        }\n        .glass-effect {\n            background: rgba(255, 255, 255, 0.25);\n            backdrop-filter: blur(10px);\n            border: 1px solid rgba(255, 255, 255, 0.18);\n        }\n    </style>\n</head>\n<body>\n    <div id=\"app\">\n        <!-- Header -->\n        <div class=\"gradient-bg p-8 text-center text-white\">\n            <h1 class=\"text-5xl font-bold mb-3\">🌱 پیستاط</h1>\n            <p class=\"text-xl mb-2 opacity-90\">مرکز آموزشی تخصصی کشاورزی مدرن</p>\n            <p class=\"opacity-75\">یادگیری • پیشرفت • موفقیت</p>\n        </div>\n\n        <div class=\"container mx-auto px-4 py-8\">\n            <!-- Stats Cards -->\n            <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n                <div class=\"bg-gradient-to-br from-blue-500 to-blue-600 p-6 rounded-2xl text-white text-center card-hover\">\n                    <div class=\"text-3xl font-bold mb-1\" id=\"courses-count\">8</div>\n                    <div class=\"text-sm opacity-90\">دوره فعال</div>\n                </div>\n                <div class=\"bg-gradient-to-br from-green-500 to-green-600 p-6 rounded-2xl text-white text-center card-hover\">\n                    <div class=\"text-3xl font-bold mb-1\" id=\"projects-count\">12</div>\n                    <div class=\"text-sm opacity-90\">پروژه</div>\n                </div>\n                <div class=\"bg-gradient-to-br from-purple-500 to-purple-600 p-6 rounded-2xl text-white text-center card-hover\">\n                    <div class=\"text-3xl font-bold mb-1\" id=\"documents-count\">25</div>\n                    <div class=\"text-sm opacity-90\">مقاله</div>\n                </div>\n                <div class=\"bg-gradient-to-br from-orange-500 to-orange-600 p-6 rounded-2xl text-white text-center card-hover\">\n                    <div class=\"text-3xl font-bold mb-1\">87%</div>\n                    <div class=\"text-sm opacity-90\">پیشرفت</div>\n                </div>\n            </div>\n\n            <!-- Featured Course -->\n            <div class=\"bg-gradient-to-br from-green-500 via-emerald-500 to-teal-600 rounded-2xl p-8 text-white mb-8 card-hover\">\n                <h2 class=\"text-2xl font-bold mb-3\">🎯 دوره پیشنهادی این هفته</h2>\n                <h3 class=\"text-xl font-semibold mb-2\">کشاورزی هوشمند با IoT</h3>\n                <p class=\"mb-6 opacity-90\">یادگیری فناوری‌های نوین اینترنت اشیا در کشاورزی مدرن و پیشرفته</p>\n                <button class=\"bg-white text-green-600 px-6 py-3 rounded-xl font-semibold hover:shadow-lg transition-all\">\n                    شروع یادگیری رایگان\n                </button>\n            </div>\n\n            <!-- Loading State -->\n            <div id=\"loading-state\" class=\"text-center py-8\">\n                <div class=\"spinner w-8 h-8 border-4 border-green-500 border-t-transparent rounded-full mx-auto mb-4\"></div>\n                <p class=\"text-gray-600\">در حال بارگیری محتوا از سرور...</p>\n            </div>\n\n            <!-- Content Sections -->\n            <div id=\"content-sections\" class=\"space-y-8\" style=\"display: none;\">\n                <!-- Digital Library -->\n                <div class=\"bg-white/80 backdrop-blur rounded-2xl p-6 shadow-xl\">\n                    <h2 class=\"text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\n                        <span class=\"text-2xl\">📖</span>کتابخانه دیجیتال کشاورزی\n                    </h2>\n                    <div id=\"documents-grid\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                        <!-- Documents will be loaded here -->\n                    </div>\n                </div>\n\n                <!-- Recent Activities -->\n                <div class=\"bg-white/80 backdrop-blur rounded-2xl shadow-xl p-6\">\n                    <h2 class=\"text-xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\n                        <span class=\"text-2xl\">📊</span>فعالیت‌های اخیر\n                    </h2>\n                    <div class=\"space-y-4\">\n                        <div class=\"flex items-center gap-4 p-4 bg-blue-50 rounded-xl card-hover\">\n                            <div class=\"w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center\">\n                                <span class=\"text-white text-lg\">📚</span>\n                            </div>\n                            <div class=\"flex-1\">\n                                <p class=\"font-medium text-gray-800\">مطالعه جدیدترین مقالات کشاورزی</p>\n                                <p class=\"text-sm text-gray-500\">دسترسی فوری • محتوای به‌روز</p>\n                            </div>\n                        </div>\n                        <div class=\"flex items-center gap-4 p-4 bg-green-50 rounded-xl card-hover\">\n                            <div class=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center\">\n                                <span class=\"text-white text-lg\">🚀</span>\n                            </div>\n                            <div class=\"flex-1\">\n                                <p class=\"font-medium text-gray-800\">شروع پروژه‌های عملی جدید</p>\n                                <p class=\"text-sm text-gray-500\">آماده برای شروع • پروژه‌های متنوع</p>\n                            </div>\n                        </div>\n                        <div class=\"flex items-center gap-4 p-4 bg-purple-50 rounded-xl card-hover\">\n                            <div class=\"w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center\">\n                                <span class=\"text-white text-lg\">🎓</span>\n                            </div>\n                            <div class=\"flex-1\">\n                                <p class=\"font-medium text-gray-800\">دوره‌های تخصصی در حال برگزاری</p>\n                                <p class=\"text-sm text-gray-500\">یادگیری پیشرفته • مدرک معتبر</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Bottom Navigation -->\n        <div class=\"fixed bottom-0 left-0 right-0 glass-effect shadow-2xl\">\n            <div class=\"flex justify-around py-3\">\n                <button onclick=\"setActiveTab('home')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">🏠</span>\n                    <span class=\"text-xs font-medium\">خانه</span>\n                </button>\n                <button onclick=\"setActiveTab('courses')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">📚</span>\n                    <span class=\"text-xs font-medium\">دوره‌ها</span>\n                </button>\n                <button onclick=\"setActiveTab('projects')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">🚀</span>\n                    <span class=\"text-xs font-medium\">پروژه‌ها</span>\n                </button>\n                <button onclick=\"setActiveTab('library')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">📖</span>\n                    <span class=\"text-xs font-medium\">کتابخانه</span>\n                </button>\n                <button onclick=\"setActiveTab('profile')\" class=\"nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors\">\n                    <span class=\"text-xl mb-1\">👤</span>\n                    <span class=\"text-xs font-medium\">پروفایل</span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        let currentTab = 'home';\n\n        function setActiveTab(tab) {\n            currentTab = tab;\n            // Update navigation styles\n            document.querySelectorAll('.nav-btn').forEach(btn => {\n                btn.className = 'nav-btn flex flex-col items-center py-2 px-4 text-gray-400 hover:text-green-600 transition-colors';\n            });\n            event.target.closest('.nav-btn').className = 'nav-btn flex flex-col items-center py-2 px-4 text-green-600 transition-colors';\n            \n            // Load different content based on tab\n            if (tab !== 'home') {\n                const names = {\n                    'courses': 'دوره‌ها', \n                    'projects': 'پروژه‌ها', \n                    'library': 'کتابخانه', \n                    'profile': 'پروفایل'\n                };\n                document.getElementById('content-sections').innerHTML = \n                    \\`<div class=\"text-center py-20 text-gray-600 bg-white/80 backdrop-blur rounded-2xl\">\n                        <h2 class=\"text-2xl font-bold mb-4\">صفحه \\${names[tab] || tab}</h2>\n                        <p class=\"text-gray-500\">محتوای این بخش به زودی اضافه خواهد شد</p>\n                    </div>\\`;\n            } else {\n                loadHomeContent();\n            }\n        }\n\n        async function loadData() {\n            try {\n                console.log('🔄 شروع بارگیری داده‌ها از API...');\n                \n                // Try to fetch data from the main server\n                const baseUrl = 'http://localhost:5000';\n                const [coursesResponse, projectsResponse, documentsResponse] = await Promise.all([\n                    fetch(\\`\\${baseUrl}/api/courses\\`).catch(() => ({ ok: false })),\n                    fetch(\\`\\${baseUrl}/api/projects\\`).catch(() => ({ ok: false })),\n                    fetch(\\`\\${baseUrl}/api/documents\\`).catch(() => ({ ok: false }))\n                ]);\n\n                const courses = coursesResponse.ok ? await coursesResponse.json() : [];\n                const projects = projectsResponse.ok ? await projectsResponse.json() : [];\n                const documents = documentsResponse.ok ? await documentsResponse.json() : [];\n\n                console.log(\\`✅ داده‌ها بارگیری شد: \\${courses.length} دوره، \\${projects.length} پروژه، \\${documents.length} مقاله\\`);\n\n                // Update counters\n                document.getElementById('courses-count').textContent = courses.length || '8';\n                document.getElementById('projects-count').textContent = projects.length || '12';\n                document.getElementById('documents-count').textContent = documents.length || '25';\n\n                // Load documents\n                const documentsGrid = document.getElementById('documents-grid');\n                if (documents.length > 0) {\n                    documentsGrid.innerHTML = documents.slice(0, 6).map(doc => \\`\n                        <div class=\"bg-white rounded-xl shadow-lg p-4 card-hover transition-all duration-300\">\n                            <h3 class=\"font-bold text-gray-800 mb-2 text-sm\">\\${doc.title}</h3>\n                            <p class=\"text-gray-600 text-xs mb-3 line-clamp-2\">\\${doc.excerpt || doc.content || 'محتوای مفیدی برای یادگیری کشاورزی'}</p>\n                            <div class=\"flex justify-between items-center\">\n                                <span class=\"text-xs text-gray-500\">\\${doc.author || 'متخصص کشاورزی'}</span>\n                                <button class=\"bg-purple-500 text-white px-3 py-1 rounded text-xs hover:bg-purple-600 transition-colors\">\n                                    مشاهده\n                                </button>\n                            </div>\n                        </div>\n                    \\`).join('');\n                } else {\n                    documentsGrid.innerHTML = \\`\n                        <div class=\"col-span-full text-center py-8 text-gray-500\">\n                            <p class=\"text-lg mb-2\">📚</p>\n                            <p>مقالات در حال بارگیری...</p>\n                        </div>\n                    \\`;\n                }\n\n                // Hide loading state and show content\n                document.getElementById('loading-state').style.display = 'none';\n                document.getElementById('content-sections').style.display = 'block';\n\n            } catch (error) {\n                console.warn('⚠️ خطا در بارگیری داده‌ها:', error);\n                document.getElementById('loading-state').innerHTML = \n                    '<p class=\"text-orange-500\">در حال تلاش مجدد برای اتصال...</p>';\n                \n                // Fallback with sample data after 3 seconds\n                setTimeout(() => {\n                    document.getElementById('courses-count').textContent = '8';\n                    document.getElementById('projects-count').textContent = '12';\n                    document.getElementById('documents-count').textContent = '25';\n                    document.getElementById('loading-state').style.display = 'none';\n                    document.getElementById('content-sections').style.display = 'block';\n                    \n                    // Load sample documents\n                    document.getElementById('documents-grid').innerHTML = \\`\n                        <div class=\"bg-white rounded-xl shadow-lg p-4 card-hover\">\n                            <h3 class=\"font-bold text-gray-800 mb-2 text-sm\">راهنمای کشت گندم</h3>\n                            <p class=\"text-gray-600 text-xs mb-3\">روش‌های مدرن کشت و برداشت گندم</p>\n                            <div class=\"flex justify-between items-center\">\n                                <span class=\"text-xs text-gray-500\">متخصص کشاورزی</span>\n                                <button class=\"bg-purple-500 text-white px-3 py-1 rounded text-xs\">مشاهده</button>\n                            </div>\n                        </div>\n                        <div class=\"bg-white rounded-xl shadow-lg p-4 card-hover\">\n                            <h3 class=\"font-bold text-gray-800 mb-2 text-sm\">تکنولوژی آبیاری هوشمند</h3>\n                            <p class=\"text-gray-600 text-xs mb-3\">سیستم‌های نوین آبیاری خودکار</p>\n                            <div class=\"flex justify-between items-center\">\n                                <span class=\"text-xs text-gray-500\">مهندس کشاورزی</span>\n                                <button class=\"bg-purple-500 text-white px-3 py-1 rounded text-xs\">مشاهده</button>\n                            </div>\n                        </div>\n                        <div class=\"bg-white rounded-xl shadow-lg p-4 card-hover\">\n                            <h3 class=\"font-bold text-gray-800 mb-2 text-sm\">کشت گلخانه‌ای</h3>\n                            <p class=\"text-gray-600 text-xs mb-3\">روش‌های پیشرفته کشت در گلخانه</p>\n                            <div class=\"flex justify-between items-center\">\n                                <span class=\"text-xs text-gray-500\">کارشناس گلخانه</span>\n                                <button class=\"bg-purple-500 text-white px-3 py-1 rounded text-xs\">مشاهده</button>\n                            </div>\n                        </div>\n                    \\`;\n                }, 3000);\n            }\n        }\n\n        function loadHomeContent() {\n            document.getElementById('content-sections').style.display = 'block';\n        }\n\n        // Initialize the application\n        document.addEventListener('DOMContentLoaded', function() {\n            console.log('🌱 پیستاط - پلتفرم آموزشی کشاورزی بارگذاری شد');\n            console.log('📍 سرور مستقل روی پورت 3001');\n            loadData();\n        });\n    </script>\n    \n    <!-- Spacer for bottom navigation -->\n    <div style=\"height: 80px;\"></div>\n</body>\n</html>`;\n\n  res.writeHead(200, {\n    'Content-Type': 'text/html; charset=utf-8',\n    'Cache-Control': 'no-cache, no-store, must-revalidate',\n    'Pragma': 'no-cache',\n    'Expires': '0'\n  });\n  res.end(htmlContent);\n});\n\napp.listen(PORT, '0.0.0.0', () => {\n  console.log(`🌱 پیستاط Standalone Server running at http://localhost:${PORT}`);\n  console.log(`📱 برای مشاهده پلتفرم به آدرس بالا مراجعه کنید`);\n});","size_bytes":18312},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"upload-guide.md":{"content":"# راهنمای آپلود مستقیم فایل‌ها\n\n## روش 1: کپی مستقیم در Replit\n1. در فایل منیجر Replit، به پوشه `public/uploads` بروید\n2. فایل‌هایتان را drag & drop کنید\n3. آدرس فایل: `/uploads/نام-فایل.jpg`\n\n## روش 2: از طریق Terminal\n```bash\n# فایل را از کامپیوتر به Replit آپلود کنید\n# سپس این دستور را اجرا کنید:\ncp فایل-شما.jpg public/uploads/\n```\n\n## روش 3: استفاده از فایل‌های آماده\nفایل‌های نمونه موجود:\n- `/uploads/logo.png` - لوگو سایت\n- `/uploads/demo-slide1.png` - اسلاید شماره 1\n- `/uploads/demo-slide2.png` - اسلاید شماره 2\n- `/uploads/demo-webinar.png` - پوستر وبینار\n\n## نحوه استفاده در سایت:\n\n### برای اسلایدها (در پنل مدیریت):\n1. تب \"مدیریت اسلایدها\" را باز کنید\n2. در فیلد \"آدرس تصویر\" وارد کنید: `/uploads/demo-slide1.png`\n3. ذخیره کنید\n\n### برای وبینارها:\n1. تب \"وبینارهای آموزشی\" را باز کنید\n2. در فیلد \"آدرس پوستر\" وارد کنید: `/uploads/demo-webinar.png`\n3. ذخیره کنید\n\n### برای کارگاه‌ها:\n1. تب \"کارگاه‌ها\" را باز کنید\n2. در فیلد \"آدرس تصویر\" وارد کنید: `/uploads/demo-slide2.png`\n3. ذخیره کنید\n\n## نکات مهم:\n- فایل‌ها باید در فرمت JPG, PNG یا GIF باشند\n- حداکثر سایز: 10MB\n- نام فایل فقط حروف انگلیسی، اعداد و خط تیره\n- آدرس همیشه با `/uploads/` شروع می‌شود\n\n## مثال کاربردی:\nاگر فایل شما `my-image.png` نام دارد:\n- آدرس در سایت: `/uploads/my-image.png`\n- برای اسلاید جدید: این آدرس را در فیلد \"آدرس تصویر\" وارد کنید","size_bytes":1986},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"api/index.ts":{"content":"import type { VercelRequest, VercelResponse } from '@vercel/node';\nimport express from 'express';\nimport { registerRoutes } from '../server/routes';\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\nlet isInitialized = false;\n\nexport default async function handler(req: VercelRequest, res: VercelResponse) {\n  if (!isInitialized) {\n    try {\n      await registerRoutes(app);\n      isInitialized = true;\n    } catch (error) {\n      console.error('Failed to initialize routes:', error);\n      return res.status(500).json({ error: 'Server initialization failed' });\n    }\n  }\n  \n  app(req as any, res as any);\n}","size_bytes":658},"server/auth.ts":{"content":"import bcrypt from 'bcryptjs';\nimport { Request, Response, NextFunction } from 'express';\nimport { db } from './db';\nimport { users } from '@shared/schema';\nimport { eq } from 'drizzle-orm';\n\nexport interface AuthRequest extends Request {\n  user?: {\n    id: number;\n    username: string;\n    role: string;\n    name?: string;\n    email?: string;\n  };\n}\n\nexport async function hashPassword(password: string): Promise<string> {\n  const saltRounds = 10;\n  return bcrypt.hash(password, saltRounds);\n}\n\nexport async function comparePassword(password: string, hash: string): Promise<boolean> {\n  return bcrypt.compare(password, hash);\n}\n\nexport async function authenticateUser(username: string, password: string) {\n  try {\n    const [user] = await db\n      .select()\n      .from(users)\n      .where(eq(users.username, username))\n      .limit(1);\n\n    if (!user) {\n      return null;\n    }\n\n    const isValidPassword = await comparePassword(password, user.password);\n    if (!isValidPassword) {\n      return null;\n    }\n\n    // Return user without password\n    const { password: _, ...userWithoutPassword } = user;\n    return userWithoutPassword;\n  } catch (error) {\n    console.error('Authentication error:', error);\n    return null;\n  }\n}\n\nexport function requireAuth(req: AuthRequest, res: Response, next: NextFunction) {\n  if (!req.session?.user) {\n    return res.status(401).json({ error: 'Authentication required' });\n  }\n  req.user = req.session.user;\n  next();\n}\n\nexport function requireAdmin(req: AuthRequest, res: Response, next: NextFunction) {\n  if (!req.session?.user) {\n    return res.status(401).json({ error: 'Authentication required' });\n  }\n  if (req.session.user.role !== 'admin') {\n    return res.status(403).json({ error: 'Admin access required' });\n  }\n  req.user = req.session.user;\n  next();\n}\n\ndeclare module 'express-session' {\n  interface SessionData {\n    user?: {\n      id: number;\n      username: string;\n      role: string;\n      name?: string;\n      email?: string;\n    };\n  }\n}","size_bytes":2002},"server/db.ts":{"content":"import { drizzle } from 'drizzle-orm/better-sqlite3';\nimport Database from 'better-sqlite3';\nimport * as schema from \"@shared/schema\";\n\n// Use SQLite for local development\nconst sqlite = new Database('pistac.db');\nexport const db = drizzle(sqlite, { schema });","size_bytes":260},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // Serve the app on PORT environment variable (for Render) or fallback to 5000 (for Replit)\n  // this serves both the API and the client.\n  const port = process.env.PORT || 5000;\n  server.listen(port, \"0.0.0.0\", () => {\n    log(`🚀 Server running on http://0.0.0.0:${port}`);\n    log(`🎯 Admin panel: http://0.0.0.0:${port}/admin-simple`);\n  });\n})();\n","size_bytes":1830},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  // Give admin role to specific user (your Replit username)\n  const isAdmin = claims[\"sub\"] === \"YOUR_REPLIT_USER_ID\"; // This will be updated with your actual user ID\n  \n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n    role: isAdmin ? \"admin\" : \"user\",\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};\n\nexport const isAdmin: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n  \n  if (!req.isAuthenticated()) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const userId = user.claims.sub;\n  const dbUser = await storage.getUser(userId);\n  \n  if (!dbUser || dbUser.role !== \"admin\") {\n    return res.status(403).json({ message: \"Admin access required\" });\n  }\n\n  next();\n};","size_bytes":4850},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport express from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { ZodError } from \"zod\";\nimport { fromZodError } from \"zod-validation-error\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport multer from \"multer\";\nimport { fileURLToPath } from \"url\";\nimport { dirname } from \"path\";\nimport session from \"express-session\";\nimport { authenticateUser, requireAuth, requireAdmin, hashPassword, AuthRequest } from \"./auth\";\nimport { seedDatabase } from \"./seed\";\nimport { \n  insertCourseSchema,\n  insertModuleSchema, \n  insertProjectSchema, \n  insertDocumentSchema,\n  insertDocumentCategorySchema,\n  insertDocumentTagSchema,\n  insertMediaContentSchema,\n  insertMagazineSchema,\n  insertQuickAccessItemSchema,\n  insertArticleSchema,\n  insertArticleContentSchema,\n  insertWorkshopSchema,\n  insertWebinarSchema,\n  insertWebinarSectionSchema,\n  insertSlideSchema,\n  insertWorkshopRegistrationSchema,\n  insertEducationalVideoSchema,\n  insertAboutUsSchema,\n  insertSubsidiaryCompanySchema,\n  insertContactUsSchema,\n  insertUserSchema\n} from \"@shared/schema\";\n\n// Configure multer for file uploads\nconst uploadsDir = path.join(process.cwd(), 'public', 'uploads');\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true });\n}\n\nconst upload = multer({\n  storage: multer.diskStorage({\n    destination: function (req, file, cb) {\n      cb(null, uploadsDir);\n    },\n    filename: function (req, file, cb) {\n      const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n      const extension = path.extname(file.originalname);\n      const baseName = path.basename(file.originalname, extension);\n      cb(null, baseName + '-' + uniqueSuffix + extension);\n    }\n  }),\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB limit\n  },\n  fileFilter: function (req, file, cb) {\n    const allowedTypes = /jpeg|jpg|png|gif|svg|pdf/;\n    const extname = allowedTypes.test(path.extname(file.originalname).toLowerCase());\n    const mimetype = allowedTypes.test(file.mimetype);\n\n    if (mimetype && extname) {\n      return cb(null, true);\n    } else {\n      cb(new Error('فقط فایل‌های تصویری و PDF مجاز هستند'));\n    }\n  }\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Health check\n  app.get(\"/api/health\", (req, res) => {\n    res.json({ status: \"ok\", timestamp: new Date().toISOString() });\n  });\n\n  // Test route for admin panel\n  app.get(\"/api/test\", (req, res) => {\n    res.json({ message: \"API is working!\", timestamp: new Date().toISOString() });\n  });\n\n  // Get all projects\n  app.get(\"/api/projects\", async (req, res) => {\n    try {\n      const allProjects = await storage.getProjects()\n      res.json(allProjects);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch projects\" });\n    }\n  });\n\n  // Get all categories\n  app.get(\"/api/categories\", async (req, res) => {\n    try {\n      const categories = await storage.getDocumentCategories()\n      res.json(categories);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch categories\" });\n    }\n  });\n\n  // Get all users for admin\n  app.get(\"/api/users\", async (req, res) => {\n    try {\n      const users = await storage.getUsers();\n      res.json(users);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch users\" });\n    }\n  });\n  // Initialize database with admin user\n  await seedDatabase();\n\n  // Session configuration\n  app.use(session({\n    secret: process.env.SESSION_SECRET || 'your-secret-key-here',\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      secure: process.env.NODE_ENV === 'production',\n      httpOnly: true,\n      maxAge: 1000 * 60 * 60 * 24 * 7 // 7 days\n    }\n  }));\n\n  // Authentication routes\n  app.post('/api/login', async (req, res) => {\n    try {\n      const { username, password } = req.body;\n\n      if (!username || !password) {\n        return res.status(400).json({ error: 'نام کاربری و رمز عبور الزامی است' });\n      }\n\n      const user = await authenticateUser(username, password);\n      if (!user) {\n        return res.status(401).json({ error: 'نام کاربری یا رمز عبور اشتباه است' });\n      }\n\n      // Store user in session\n      req.session.user = {\n        id: user.id,\n        username: user.username,\n        role: user.role || 'user',\n        name: user.name || '',\n        email: user.email || ''\n      };\n\n      res.json({ \n        message: 'ورود موفقیت‌آمیز',\n        user: req.session.user\n      });\n    } catch (error) {\n      console.error('Login error:', error);\n      res.status(500).json({ error: 'خطا در سیستم احراز هویت' });\n    }\n  });\n\n  app.post('/api/logout', (req, res) => {\n    req.session.destroy((err) => {\n      if (err) {\n        return res.status(500).json({ error: 'خطا در خروج از سیستم' });\n      }\n      res.clearCookie('connect.sid');\n      res.json({ message: 'خروج موفقیت‌آمیز' });\n    });\n  });\n\n  app.post('/api/register', async (req, res) => {\n    try {\n      const { username, password, name, email } = req.body;\n\n      if (!username || !password || !name || !email) {\n        return res.status(400).json({ error: 'تمام فیلدها الزامی هستند' });\n      }\n\n      // Check if username already exists\n      const existingUser = await storage.getUserByUsername(username);\n      if (existingUser) {\n        return res.status(409).json({ error: 'نام کاربری قبلاً استفاده شده است' });\n      }\n\n      // Check if email already exists\n      const existingEmail = await storage.getUserByEmail(email);\n      if (existingEmail) {\n        return res.status(409).json({ error: 'ایمیل قبلاً استفاده شده است' });\n      }\n\n      // Hash password\n      const hashedPassword = await hashPassword(password);\n\n      // Create user\n      const user = await storage.createUser({\n        username,\n        password: hashedPassword,\n        name,\n        email,\n        role: 'user'\n      });\n\n      // Store user in session\n      req.session.user = {\n        id: user.id,\n        username: user.username,\n        role: user.role || 'user',\n        name: user.name || '',\n        email: user.email || ''\n      };\n\n      res.json({ \n        message: 'ثبت‌نام موفقیت‌آمیز',\n        user: req.session.user\n      });\n    } catch (error) {\n      console.error('Register error:', error);\n      res.status(500).json({ error: 'خطا در ثبت‌نام' });\n    }\n  });\n\n  app.get('/api/auth/user', (req, res) => {\n    if (req.session?.user) {\n      res.json(req.session.user);\n    } else {\n      res.status(401).json({ error: 'کاربر وارد نشده' });\n    }\n  });\n\n  // API routes with /api prefix\n\n  // File Upload API\n  app.post(\"/api/upload\", upload.array('files', 10), async (req, res) => {\n    try {\n      if (!req.files || req.files.length === 0) {\n        return res.status(400).json({ message: \"هیچ فایلی انتخاب نشده\" });\n      }\n\n      const files = (req.files as Express.Multer.File[]).map(file => ({\n        id: Date.now() + Math.random(),\n        name: file.originalname,\n        filename: file.filename,\n        url: `/uploads/${file.filename}`,\n        type: file.mimetype.startsWith('image/') ? 'image' : 'document',\n        size: `${(file.size / 1024).toFixed(0)} KB`,\n        uploadedAt: new Date().toISOString()\n      }));\n\n      return res.status(201).json({\n        message: \"فایل‌ها با موفقیت آپلود شدند\",\n        files\n      });\n    } catch (error) {\n      console.error('Upload error:', error);\n      return res.status(500).json({ message: \"خطا در آپلود فایل\" });\n    }\n  });\n\n  // Serve uploaded files\n  app.use('/uploads', express.static(path.join(process.cwd(), 'public', 'uploads')));\n\n  // Users API\n  app.get(\"/api/user/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid user ID\" });\n    }\n\n    const user = await storage.getUser(id);\n\n    if (!user) {\n      return res.status(404).json({ message: \"User not found\" });\n    }\n\n    return res.json(user);\n  });\n\n  app.post(\"/api/users\", async (req, res) => {\n    try {\n      const user = await storage.createUser(req.body);\n      return res.status(201).json(user);\n    } catch (error) {\n      return res.status(500).json({ message: \"خطا در ایجاد کاربر\" });\n    }\n  });\n\n  // Admin login API\n  app.post(\"/api/admin/login\", async (req, res) => {\n    const { username, password } = req.body;\n\n    if (!username || !password) {\n      return res.status(400).json({ message: \"نام کاربری و رمز عبور الزامی است\" });\n    }\n\n    const user = await storage.getUserByUsername(username);\n\n    if (!user || user.password !== password || user.role !== \"admin\") {\n      return res.status(401).json({ message: \"نام کاربری یا رمز عبور اشتباه است\" });\n    }\n\n    return res.json({ \n      message: \"ورود موفقیت‌آمیز\", \n      user: { \n        id: user.id, \n        username: user.username, \n        name: user.name, \n        role: user.role \n      } \n    });\n  });\n\n  // Courses API\n  app.get(\"/api/courses\", async (req, res) => {\n    const courses = await storage.getCourses();\n    res.json(courses);\n  });\n\n  app.get(\"/api/courses/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid course ID\" });\n    }\n\n    const course = await storage.getCourse(id);\n\n    if (!course) {\n      return res.status(404).json({ message: \"Course not found\" });\n    }\n\n    return res.json(course);\n  });\n\n  app.patch(\"/api/courses/:id/progress\", async (req, res) => {\n    const id = parseInt(req.params.id);\n    const { progress } = req.body;\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid course ID\" });\n    }\n\n    if (typeof progress !== 'number' || progress < 0 || progress > 100) {\n      return res.status(400).json({ message: \"Invalid progress value\" });\n    }\n\n    const updatedCourse = await storage.updateCourseProgress(id, progress);\n\n    if (!updatedCourse) {\n      return res.status(404).json({ message: \"Course not found\" });\n    }\n\n    return res.json(updatedCourse);\n  });\n\n  app.post(\"/api/courses\", async (req, res) => {\n    try {\n      const courseData = insertCourseSchema.parse(req.body);\n      const course = await storage.createCourse(courseData);\n      return res.status(201).json(course);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد دوره\" });\n    }\n  });\n\n  // Modules API\n  app.get(\"/api/modules/course/:courseId\", async (req, res) => {\n    const courseId = parseInt(req.params.courseId);\n\n    if (isNaN(courseId)) {\n      return res.status(400).json({ message: \"Invalid course ID\" });\n    }\n\n    const modules = await storage.getModulesByCourseId(courseId);\n    return res.json(modules);\n  });\n\n  app.get(\"/api/modules/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid module ID\" });\n    }\n\n    const module = await storage.getModule(id);\n\n    if (!module) {\n      return res.status(404).json({ message: \"Module not found\" });\n    }\n\n    return res.json(module);\n  });\n\n  app.post(\"/api/modules\", async (req, res) => {\n    try {\n      const moduleData = insertModuleSchema.parse(req.body);\n      const module = await storage.createModule(moduleData);\n      return res.status(201).json(module);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد ماژول\" });\n    }\n  });\n\n  // Projects API\n  app.get(\"/api/projects\", async (req, res) => {\n    const projects = await storage.getProjects();\n    res.json(projects);\n  });\n\n  app.get(\"/api/projects/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid project ID\" });\n    }\n\n    const project = await storage.getProject(id);\n\n    if (!project) {\n      return res.status(404).json({ message: \"Project not found\" });\n    }\n\n    return res.json(project);\n  });\n\n  app.post(\"/api/projects\", async (req, res) => {\n    try {\n      const projectData = insertProjectSchema.parse(req.body);\n      const project = await storage.createProject(projectData);\n      return res.status(201).json(project);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد پروژه\" });\n    }\n  });\n\n  // Documents API\n  app.get(\"/api/documents\", async (req, res) => {\n    const documents = await storage.getDocuments();\n    res.json(documents);\n  });\n\n  app.get(\"/api/documents/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid document ID\" });\n    }\n\n    const document = await storage.getDocument(id);\n\n    if (!document) {\n      return res.status(404).json({ message: \"Document not found\" });\n    }\n\n    return res.json(document);\n  });\n\n  app.post(\"/api/documents\", async (req, res) => {\n    try {\n      const documentData = insertDocumentSchema.parse(req.body);\n      const document = await storage.createDocument(documentData);\n      return res.status(201).json(document);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد سند\" });\n    }\n  });\n\n  app.put(\"/api/documents/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: \"Invalid document ID\" });\n      }\n\n      const documentData = req.body;\n      const document = await storage.updateDocument(id, documentData);\n\n      if (!document) {\n        return res.status(404).json({ message: \"Document not found\" });\n      }\n\n      return res.json(document);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در بروزرسانی سند\" });\n    }\n  });\n\n  app.delete(\"/api/documents/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: \"Invalid document ID\" });\n      }\n\n      const success = await storage.deleteDocument(id);\n\n      if (!success) {\n        return res.status(404).json({ message: \"Document not found\" });\n      }\n\n      return res.status(204).send();\n    } catch (error) {\n      return res.status(500).json({ message: \"خطا در حذف سند\" });\n    }\n  });\n\n  // Media Content API\n  app.get(\"/api/media/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid media content ID\" });\n    }\n\n    const mediaContent = await storage.getMediaContent(id);\n\n    if (!mediaContent) {\n      return res.status(404).json({ message: \"Media content not found\" });\n    }\n\n    return res.json(mediaContent);\n  });\n\n  app.post(\"/api/media\", async (req, res) => {\n    try {\n      const mediaData = insertMediaContentSchema.parse(req.body);\n      const mediaContent = await storage.createMediaContent(mediaData);\n      return res.status(201).json(mediaContent);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد محتوای رسانه‌ای\" });\n    }\n  });\n\n  // Magazines API\n  app.get(\"/api/magazines\", async (req, res) => {\n    const magazines = await storage.getMagazines();\n    res.json(magazines);\n  });\n\n  app.get(\"/api/magazines/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid magazine ID\" });\n    }\n\n    const magazine = await storage.getMagazine(id);\n\n    if (!magazine) {\n      return res.status(404).json({ message: \"Magazine not found\" });\n    }\n\n    return res.json(magazine);\n  });\n\n  app.post(\"/api/magazines\", async (req, res) => {\n    try {\n      const magazineData = insertMagazineSchema.parse(req.body);\n      const magazine = await storage.createMagazine(magazineData);\n      return res.status(201).json(magazine);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد مجله\" });\n    }\n  });\n\n  app.put(\"/api/magazines/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid magazine ID\" });\n    }\n\n    try {\n      const magazineData = insertMagazineSchema.partial().parse(req.body);\n      const updatedMagazine = await storage.updateMagazine(id, magazineData);\n\n      if (!updatedMagazine) {\n        return res.status(404).json({ message: \"Magazine not found\" });\n      }\n\n      return res.json(updatedMagazine);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی مجله\" });\n    }\n  });\n\n  app.delete(\"/api/magazines/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid magazine ID\" });\n    }\n\n    const deleted = await storage.deleteMagazine(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Magazine not found\" });\n    }\n\n    return res.json({ message: \"Magazine deleted successfully\" });\n  });\n\n  // Articles API\n  app.get(\"/api/articles\", async (req, res) => {\n    const articles = await storage.getArticles();\n    res.json(articles);\n  });\n\n  app.get(\"/api/articles/magazine/:magazineId\", async (req, res) => {\n    const magazineId = parseInt(req.params.magazineId);\n\n    if (isNaN(magazineId)) {\n      return res.status(400).json({ message: \"Invalid magazine ID\" });\n    }\n\n    const articles = await storage.getArticlesByMagazineId(magazineId);\n    return res.json(articles);\n  });\n\n  app.get(\"/api/articles/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid article ID\" });\n    }\n\n    const article = await storage.getArticle(id);\n\n    if (!article) {\n      return res.status(404).json({ message: \"Article not found\" });\n    }\n\n    return res.json(article);\n  });\n\n  app.post(\"/api/articles\", async (req, res) => {\n    try {\n      const articleData = insertArticleSchema.parse(req.body);\n      const article = await storage.createArticle(articleData);\n      return res.status(201).json(article);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد مقاله\" });\n    }\n  });\n\n  app.put(\"/api/articles/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid article ID\" });\n    }\n\n    try {\n      const articleData = insertArticleSchema.partial().parse(req.body);\n      const updatedArticle = await storage.updateArticle(id, articleData);\n\n      if (!updatedArticle) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n\n      return res.json(updatedArticle);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی مقاله\" });\n    }\n  });\n\n  app.delete(\"/api/articles/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid article ID\" });\n    }\n\n    const deleted = await storage.deleteArticle(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Article not found\" });\n    }\n\n    return res.json({ message: \"Article deleted successfully\" });\n  });\n\n  // Workshops API\n  app.get(\"/api/workshops\", async (req, res) => {\n    const workshops = await storage.getWorkshops();\n    res.json(workshops);\n  });\n\n  app.get(\"/api/workshops/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid workshop ID\" });\n    }\n\n    const workshop = await storage.getWorkshop(id);\n\n    if (!workshop) {\n      return res.status(404).json({ message: \"Workshop not found\" });\n    }\n\n    return res.json(workshop);\n  });\n\n  app.post(\"/api/workshops\", async (req, res) => {\n    try {\n      const workshopData = insertWorkshopSchema.parse(req.body);\n      const workshop = await storage.createWorkshop(workshopData);\n      return res.status(201).json(workshop);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد کارگاه\" });\n    }\n  });\n\n  app.put(\"/api/workshops/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid workshop ID\" });\n    }\n\n    try {\n      const workshopData = insertWorkshopSchema.partial().parse(req.body);\n      const updatedWorkshop = await storage.updateWorkshop(id, workshopData);\n\n      if (!updatedWorkshop) {\n        return res.status(404).json({ message: \"Workshop not found\" });\n      }\n\n      return res.json(updatedWorkshop);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی کارگاه\" });\n    }\n  });\n\n  app.delete(\"/api/workshops/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid workshop ID\" });\n    }\n\n    const deleted = await storage.deleteWorkshop(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Workshop not found\" });\n    }\n\n    return res.json({ message: \"Workshop deleted successfully\" });\n  });\n\n  // Workshop Registration API\n  app.get(\"/api/workshops/:id/registrations\", async (req, res) => {\n    const workshopId = parseInt(req.params.id);\n\n    if (isNaN(workshopId)) {\n      return res.status(400).json({ message: \"Invalid workshop ID\" });\n    }\n\n    const registrations = await storage.getWorkshopRegistrationsByWorkshopId(workshopId);\n    res.json(registrations);\n  });\n\n  app.post(\"/api/workshops/:id/register\", async (req, res) => {\n    const workshopId = parseInt(req.params.id);\n\n    if (isNaN(workshopId)) {\n      return res.status(400).json({ message: \"Invalid workshop ID\" });\n    }\n\n    // Check if workshop exists and registration is open\n    const workshop = await storage.getWorkshop(workshopId);\n    if (!workshop) {\n      return res.status(404).json({ message: \"Workshop not found\" });\n    }\n\n    if (!workshop.registrationOpen) {\n      return res.status(400).json({ message: \"Registration is closed for this workshop\" });\n    }\n\n    try {\n      const registrationData = {\n        workshopId,\n        userEmail: req.body.userEmail,\n        userName: req.body.userName,\n        userPhone: req.body.userPhone,\n        notes: req.body.notes\n      };\n\n      const registration = await storage.createWorkshopRegistration(registrationData);\n      return res.status(201).json(registration);\n    } catch (error) {\n      return res.status(500).json({ message: \"خطا در ثبت‌نام کارگاه\" });\n    }\n  });\n\n  // Get all workshop registrations\n  app.get(\"/api/workshop-registrations\", async (req, res) => {\n    try {\n      const registrations = await storage.getWorkshopRegistrations();\n      res.json(registrations);\n    } catch (error) {\n      console.error(\"Error fetching workshop registrations:\", error);\n      res.status(500).json({ message: \"خطا در دریافت ثبت‌نام‌های کارگاه\" });\n    }\n  });\n\n  // Delete workshop registration\n  app.delete(\"/api/workshop-registrations/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid registration ID\" });\n    }\n\n    try {\n      const deleted = await storage.deleteWorkshopRegistration(id);\n      if (!deleted) {\n        return res.status(404).json({ message: \"Registration not found\" });\n      }\n      res.json({ message: \"Registration deleted successfully\" });\n    } catch (error) {\n      console.error(\"Error deleting workshop registration:\", error);\n      res.status(500).json({ message: \"خطا در حذف ثبت‌نام\" });\n    }\n  });\n\n  // Webinars API\n  app.get(\"/api/webinars\", async (req, res) => {\n    const webinars = await storage.getWebinars();\n    res.json(webinars);\n  });\n\n  app.get(\"/api/webinars/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid webinar ID\" });\n    }\n\n    const webinar = await storage.getWebinar(id);\n\n    if (!webinar) {\n      return res.status(404).json({ message: \"Webinar not found\" });\n    }\n\n    res.json(webinar);\n  });\n\n  app.post(\"/api/webinars\", async (req, res) => {\n    try {\n      const webinarData = insertWebinarSchema.parse(req.body);\n      const newWebinar = await storage.createWebinar(webinarData);\n      res.status(201).json(newWebinar);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد وبینار\" });\n    }\n  });\n\n  app.put(\"/api/webinars/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid webinar ID\" });\n    }\n\n    try {\n      const webinarData = insertWebinarSchema.partial().parse(req.body);\n      const updatedWebinar = await storage.updateWebinar(id, webinarData);\n\n      if (!updatedWebinar) {\n        return res.status(404).json({ message: \"Webinar not found\" });\n      }\n\n      return res.json(updatedWebinar);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی وبینار\" });\n    }\n  });\n\n  app.delete(\"/api/webinars/:id\", async (req, res) => {    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid webinar ID\" });\n    }\n\n    const deleted = await storage.deleteWebinar(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Webinar not found\" });\n    }\n\n    return res.json({ message: \"Webinar deleted successfully\" });\n  });\n\n  // Webinar sections API\n  app.get(\"/api/webinars/:id/sections\", async (req, res) => {\n    const webinarId = parseInt(req.params.id);\n\n    if (isNaN(webinarId)) {\n      return res.status(400).json({ message: \"Invalid webinar ID\" });\n    }\n\n    const sections = await storage.getWebinarSections(webinarId);\n    res.json(sections);\n  });\n\n  app.post(\"/api/webinars/:id/sections\", async (req, res) => {\n    const webinarId = parseInt(req.params.id);\n\n    if (isNaN(webinarId)) {\n      return res.status(400).json({ message: \"Invalid webinar ID\" });\n    }\n\n    try {\n      const sectionData = insertWebinarSectionSchema.parse({\n        ...req.body,\n        webinarId\n      });\n      const newSection = await storage.createWebinarSection(sectionData);\n      res.status(201).json(newSection);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد بخش وبینار\" });\n    }\n  });\n\n  // Update webinar section\n  app.put(\"/api/webinars/:webinarId/sections/:id\", async (req, res) => {\n    const webinarId = parseInt(req.params.webinarId);\n    const sectionId = parseInt(req.params.id);\n\n    if (isNaN(webinarId) || isNaN(sectionId)) {\n      return res.status(400).json({ message: \"Invalid webinar or section ID\" });\n    }\n\n    try {\n      const sectionData = insertWebinarSectionSchema.partial().parse({\n        ...req.body,\n        webinarId\n      });\n      const updatedSection = await storage.updateWebinarSection(sectionId, sectionData);\n\n      if (!updatedSection) {\n        return res.status(404).json({ message: \"Section not found\" });\n      }\n\n      res.json(updatedSection);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ویرایش بخش وبینار\" });\n    }\n  });\n\n  // Delete webinar section\n  app.delete(\"/api/webinars/:webinarId/sections/:id\", async (req, res) => {\n    const webinarId = parseInt(req.params.webinarId);\n    const sectionId = parseInt(req.params.id);\n\n    if (isNaN(webinarId) || isNaN(sectionId)) {\n      return res.status(400).json({ message: \"Invalid webinar or section ID\" });\n    }\n\n    try {\n      const deleted = await storage.deleteWebinarSection(sectionId);\n\n      if (!deleted) {\n        return res.status(404).json({ message: \"Section not found\" });\n      }\n\n      res.json({ message: \"بخش با موفقیت حذف شد\" });\n    } catch (error) {\n      return res.status(500).json({ message: \"خطا در حذف بخش وبینار\" });\n    }\n  });\n\n  // Slides API\n  app.get(\"/api/slides\", async (req, res) => {\n    const slides = await storage.getSlides();\n    res.json(slides);\n  });\n\n  app.get(\"/api/slides/active\", async (req, res) => {\n    const slides = await storage.getActiveSlides();\n    res.json(slides);\n  });\n\n  app.get(\"/api/slides/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid slide ID\" });\n    }\n\n    const slide = await storage.getSlide(id);\n\n    if (!slide) {\n      return res.status(404).json({ message: \"Slide not found\" });\n    }\n\n    return res.json(slide);\n  });\n\n  app.post(\"/api/slides\", async (req, res) => {\n    try {\n      const slideData = insertSlideSchema.parse(req.body);\n      const slide = await storage.createSlide(slideData);\n      return res.status(201).json(slide);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد اسلاید\" });\n    }\n  });\n\n  app.put(\"/api/slides/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid slide ID\" });\n    }\n\n    try {\n      const slideData = insertSlideSchema.partial().parse(req.body);\n      const updatedSlide = await storage.updateSlide(id, slideData);\n\n      if (!updatedSlide) {\n        return res.status(404).json({ message: \"Slide not found\" });\n      }\n\n      return res.json(updatedSlide);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی اسلاید\" });\n    }\n  });\n\n  app.delete(\"/api/slides/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid slide ID\" });\n    }\n\n    const deleted = await storage.deleteSlide(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Slide not found\" });\n    }\n\n    return res.json({ message: \"Slide deleted successfully\" });\n  });\n\n  // Quick Access Items API\n  app.get(\"/api/quick-access\", async (req, res) => {\n    const items = await storage.getQuickAccessItems();\n    res.json(items);\n  });\n\n  app.post(\"/api/quick-access\", async (req, res) => {\n    try {\n      const itemData = insertQuickAccessItemSchema.parse(req.body);\n      const item = await storage.createQuickAccessItem(itemData);\n      return res.status(201).json(item);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد آیتم دسترسی سریع\" });\n    }\n  });\n\n  app.put(\"/api/quick-access/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid item ID\" });\n    }\n\n    try {\n      const itemData = insertQuickAccessItemSchema.parse(req.body);\n      const item = await storage.updateQuickAccessItem(id, itemData);\n\n      if (!item) {\n        return res.status(404).json({ message: \"Item not found\" });\n      }\n\n      return res.json(item);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی آیتم دسترسی سریع\" });\n    }\n  });\n\n  app.delete(\"/api/quick-access/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid item ID\" });\n    }\n\n    const deleted = await storage.deleteQuickAccessItem(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Item not found\" });\n    }\n\n    return res.json({ message: \"Quick access item deleted successfully\" });\n  });\n\n  // Protection Control Endpoints\n  app.patch(\"/api/courses/:id/protection\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid course ID\" });\n    }\n\n    try {\n      const updatedCourse = await storage.updateCourseProtection(id, req.body);\n\n      if (!updatedCourse) {\n        return res.status(404).json({ message: \"Course not found\" });\n      }\n\n      return res.json(updatedCourse);\n    } catch (error) {\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی تنظیمات حفاظت\" });\n    }\n  });\n\n  app.patch(\"/api/projects/:id/protection\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid project ID\" });\n    }\n\n    try {\n      const updatedProject = await storage.updateProjectProtection(id, req.body);\n\n      if (!updatedProject) {\n        return res.status(404).json({ message: \"Project not found\" });\n      }\n\n      return res.json(updatedProject);\n    } catch (error) {\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی تنظیمات حفاظت\" });\n    }\n  });\n\n  app.patch(\"/api/documents/:id/protection\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid document ID\" });\n    }\n\n    try {\n      const updatedDocument = await storage.updateDocumentProtection(id, req.body);\n\n      if (!updatedDocument) {\n        return res.status(404).json({ message: \"Document not found\" });\n      }\n\n      return res.json(updatedDocument);\n    } catch (error) {\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی تنظیمات حفاظت\" });\n    }\n  });\n\n  app.patch(\"/api/magazines/:id/protection\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid magazine ID\" });\n    }\n\n    try {\n      const updatedMagazine = await storage.updateMagazineProtection(id, req.body);\n\n      if (!updatedMagazine) {\n        return res.status(404).json({ message: \"Magazine not found\" });\n      }\n\n      return res.json(updatedMagazine);\n    } catch (error) {\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی تنظیمات حفاظت\" });\n    }\n  });\n\n  // Workshop Registrations API\n  app.get(\"/api/workshop-registrations\", async (req, res) => {\n    const registrations = await storage.getWorkshopRegistrations();\n    res.json(registrations);\n  });\n\n  app.get(\"/api/workshop-registrations/workshop/:workshopId\", async (req, res) => {\n    const workshopId = parseInt(req.params.workshopId);\n\n    if (isNaN(workshopId)) {\n      return res.status(400).json({ message: \"Invalid workshop ID\" });\n    }\n\n    const registrations = await storage.getWorkshopRegistrationsByWorkshopId(workshopId);\n    return res.json(registrations);\n  });\n\n  app.post(\"/api/workshop-registrations\", async (req, res) => {\n    try {\n      const registrationData = insertWorkshopRegistrationSchema.parse(req.body);\n      const registration = await storage.createWorkshopRegistration(registrationData);\n      return res.status(201).json(registration);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ثبت‌نام کارگاه\" });\n    }\n  });\n\n  app.delete(\"/api/workshop-registrations/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid registration ID\" });\n    }\n\n    const deleted = await storage.deleteWorkshopRegistration(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Registration not found\" });\n    }\n\n    return res.json({ message: \"Registration deleted successfully\" });\n  });\n\n  // Educational Videos API\n  app.get(\"/api/educational-videos\", async (req, res) => {\n    const videos = await storage.getEducationalVideos();\n    res.json(videos);\n  });\n\n  app.get(\"/api/educational-videos/active\", async (req, res) => {\n    const videos = await storage.getActiveEducationalVideos();\n    res.json(videos);\n  });\n\n  app.get(\"/api/educational-videos/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid video ID\" });\n    }\n\n    const video = await storage.getEducationalVideo(id);\n\n    if (!video) {\n      return res.status(404).json({ message: \"Video not found\" });\n    }\n\n    return res.json(video);\n  });\n\n  app.post(\"/api/educational-videos\", async (req, res) => {\n    try {\n      const videoData = insertEducationalVideoSchema.parse(req.body);\n      const video = await storage.createEducationalVideo(videoData);\n      return res.status(201).json(video);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد ویدیو\" });\n    }\n  });\n\n  app.put(\"/api/educational-videos/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid video ID\" });\n    }\n\n    try {\n      const videoData = insertEducationalVideoSchema.partial().parse(req.body);\n      const updatedVideo = await storage.updateEducationalVideo(id, videoData);\n\n      if (!updatedVideo) {\n        return res.status(404).json({ message: \"Video not found\" });\n      }\n\n      return res.json(updatedVideo);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی ویدیو\" });\n    }\n  });\n\n  app.delete(\"/api/educational-videos/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid video ID\" });\n    }\n\n    const deleted = await storage.deleteEducationalVideo(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Video not found\" });\n    }\n\n    return res.json({ message: \"Video deleted successfully\" });\n  });\n\n  // About Us API\n  app.get(\"/api/about-us\", async (req, res) => {\n    const aboutUs = await storage.getAboutUs();\n    res.json(aboutUs);\n  });\n\n  app.get(\"/api/about-us/active\", async (req, res) => {\n    const aboutUs = await storage.getActiveAboutUs();\n    res.json(aboutUs);\n  });\n\n  app.get(\"/api/about-us/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid about us ID\" });\n    }\n\n    const aboutUs = await storage.getAboutUsById(id);\n\n    if (!aboutUs) {\n      return res.status(404).json({ message: \"About us not found\" });\n    }\n\n    return res.json(aboutUs);\n  });\n\n  app.post(\"/api/about-us\", async (req, res) => {\n    try {\n      const aboutUsData = insertAboutUsSchema.parse(req.body);\n      const aboutUs = await storage.createAboutUs(aboutUsData);\n      return res.status(201).json(aboutUs);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد صفحه درباره ما\" });\n    }\n  });\n\n  app.put(\"/api/about-us/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid about us ID\" });\n    }\n\n    try {\n      const aboutUsData = insertAboutUsSchema.partial().parse(req.body);\n      const updatedAboutUs = await storage.updateAboutUs(id, aboutUsData);\n\n      if (!updatedAboutUs) {\n        return res.status(404).json({ message: \"About us not found\" });\n      }\n\n      return res.json(updatedAboutUs);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی صفحه درباره ما\" });\n    }\n  });\n\n  app.delete(\"/api/about-us/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid about us ID\" });\n    }\n\n    const deleted = await storage.deleteAboutUs(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"About us not found\" });\n    }\n\n    return res.json({ message: \"About us deleted successfully\" });\n  });\n\n  // Subsidiary Companies API\n  app.get(\"/api/subsidiary-companies\", async (req, res) => {\n    const companies = await storage.getSubsidiaryCompanies();\n    res.json(companies);\n  });\n\n  app.get(\"/api/subsidiary-companies/active\", async (req, res) => {\n    const companies = await storage.getActiveSubsidiaryCompanies();\n    res.json(companies);\n  });\n\n  app.get(\"/api/subsidiary-companies/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid company ID\" });\n    }\n\n    const company = await storage.getSubsidiaryCompanyById(id);\n\n    if (!company) {\n      return res.status(404).json({ message: \"Company not found\" });\n    }\n\n    return res.json(company);\n  });\n\n  app.post(\"/api/subsidiary-companies\", async (req, res) => {\n    try {\n      const companyData = insertSubsidiaryCompanySchema.parse(req.body);\n      const company = await storage.createSubsidiaryCompany(companyData);\n      return res.status(201).json(company);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد شرکت زیرمجموعه\" });\n    }\n  });\n\n  app.put(\"/api/subsidiary-companies/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid company ID\" });\n    }\n\n    try {\n      const companyData = insertSubsidiaryCompanySchema.partial().parse(req.body);\n      const updatedCompany = await storage.updateSubsidiaryCompany(id, companyData);\n\n      if (!updatedCompany) {\n        return res.status(404).json({ message: \"Company not found\" });\n      }\n\n      return res.json(updatedCompany);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی شرکت زیرمجموعه\" });\n    }\n  });\n\n  app.delete(\"/api/subsidiary-companies/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid company ID\" });\n    }\n\n    const deleted = await storage.deleteSubsidiaryCompany(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Company not found\" });\n    }\n\n    return res.json({ message: \"Company deleted successfully\" });\n  });\n\n  // Contact Us API\n  app.get(\"/api/contact-us\", async (req, res) => {\n    const contactUs = await storage.getContactUs();\n    res.json(contactUs);\n  });\n\n  app.get(\"/api/contact-us/active\", async (req, res) => {\n    const contactUs = await storage.getActiveContactUs();\n    res.json(contactUs);\n  });\n\n  app.get(\"/api/contact-us/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid contact us ID\" });\n    }\n\n    const contactUs = await storage.getContactUsById(id);\n\n    if (!contactUs) {\n      return res.status(404).json({ message: \"Contact us not found\" });\n    }\n\n    return res.json(contactUs);\n  });\n\n  app.post(\"/api/contact-us\", async (req, res) => {\n    try {\n      const contactUsData = insertContactUsSchema.parse(req.body);\n      const contactUs = await storage.createContactUs(contactUsData);\n      return res.status(201).json(contactUs);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در ایجاد صفحه تماس با ما\" });\n    }\n  });\n\n  app.put(\"/api/contact-us/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid contact us ID\" });\n    }\n\n    try {\n      const contactUsData = insertContactUsSchema.partial().parse(req.body);\n      const updatedContactUs = await storage.updateContactUs(id, contactUsData);\n\n      if (!updatedContactUs) {\n        return res.status(404).json({ message: \"Contact us not found\" });\n      }\n\n      return res.json(updatedContactUs);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return res.status(400).json({ message: fromZodError(error).toString() });\n      }\n      return res.status(500).json({ message: \"خطا در به‌روزرسانی صفحه تماس با ما\" });\n    }\n  });\n\n  app.delete(\"/api/contact-us/:id\", async (req, res) => {\n    const id = parseInt(req.params.id);\n\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid contact us ID\" });\n    }\n\n    const deleted = await storage.deleteContactUs(id);\n\n    if (!deleted) {\n      return res.status(404).json({ message: \"Contact us not found\" });\n    }\n\n    return res.json({ message: \"Contact us deleted successfully\" });\n  });\n\n  // User Course Access API\n  app.get(\"/api/users/:userId/course-access\", async (req, res) => {\n    const userId = parseInt(req.params.userId);\n\n    if (isNaN(userId)) {\n      return res.status(400).json({ message: \"Invalid user ID\" });\n    }\n\n    try {\n      const userAccess = await storage.getUserCourseAccess(userId);\n      res.json(userAccess);\n    } catch (error) {\n      console.error(\"Error fetching user course access:\", error);\n      res.status(500).json({ message: \"خطا در دریافت دسترسی‌های کاربر\" });\n    }\n  });\n\n  app.post(\"/api/users/:userId/grant-course-access\", async (req, res) => {\n    const userId = parseInt(req.params.userId);\n\n    if (isNaN(userId)) {\n      return res.status(400).json({ message: \"Invalid user ID\" });\n    }\n\n    try {\n      const { courseId, accessType, expiryDate } = req.body;\n      \n      const accessData = {\n        userId,\n        courseId: parseInt(courseId),\n        accessType,\n        expiryDate: expiryDate ? new Date(expiryDate).getTime() : undefined,\n        isActive: true\n      };\n\n      const access = await storage.grantCourseAccess(accessData);\n      res.status(201).json(access);\n    } catch (error) {\n      console.error(\"Error granting course access:\", error);\n      res.status(500).json({ message: \"خطا در اعطای دسترسی دوره\" });\n    }\n  });\n\n  app.delete(\"/api/users/:userId/revoke-course-access/:courseId\", async (req, res) => {\n    const userId = parseInt(req.params.userId);\n    const courseId = parseInt(req.params.courseId);\n\n    if (isNaN(userId) || isNaN(courseId)) {\n      return res.status(400).json({ message: \"Invalid user ID or course ID\" });\n    }\n\n    try {\n      const success = await storage.revokeCourseAccess(userId, courseId);\n      \n      if (!success) {\n        return res.status(404).json({ message: \"Access not found\" });\n      }\n\n      res.json({ message: \"دسترسی با موفقیت لغو شد\" });\n    } catch (error) {\n      console.error(\"Error revoking course access:\", error);\n      res.status(500).json({ message: \"خطا در لغو دسترسی دوره\" });\n    }\n  });\n\n  const server = createServer(app);\n  return server;\n}","size_bytes":50758},"server/seed.ts":{"content":"import { db } from './db';\nimport { users } from '@shared/schema';\nimport { hashPassword } from './auth';\nimport { eq } from 'drizzle-orm';\n\nasync function seedDatabase() {\n  try {\n    console.log('Starting database seeding...');\n    \n    // Check if admin user already exists\n    const existingAdmin = await db\n      .select()\n      .from(users)\n      .where(eq(users.username, 'admin'))\n      .limit(1);\n    \n    if (existingAdmin.length === 0) {\n      // Create admin user\n      const hashedPassword = await hashPassword('730895015');\n      \n      await db.insert(users).values({\n        username: 'admin',\n        password: hashedPassword,\n        name: 'مدیر سیستم',\n        email: 'admin@pistach.com',\n        role: 'admin',\n        membershipType: 'Premium'\n      });\n      \n      console.log('Admin user created successfully');\n      console.log('Username: admin');\n      console.log('Password: 730895015');\n    } else {\n      console.log('Admin user already exists');\n    }\n    \n    console.log('Database seeding completed');\n  } catch (error) {\n    console.error('Error seeding database:', error);\n  }\n}\n\n// Run seeding if called directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  seedDatabase().then(() => process.exit(0));\n}\n\nexport { seedDatabase };","size_bytes":1286},"server/storage-old.ts":{"content":"import { \n  users, type User, type InsertUser,\n  courses, type Course, type InsertCourse,\n  modules, type Module, type InsertModule,\n  projects, type Project, type InsertProject,\n  documents, type Document, type InsertDocument,\n  mediaContent, type MediaContent, type InsertMediaContent,\n  magazines, type Magazine, type InsertMagazine,\n  articles, type Article, type InsertArticle,\n  articleContents, type ArticleContent, type InsertArticleContent,\n  workshops, type Workshop, type InsertWorkshop,\n  workshopContents, type WorkshopContent, type InsertWorkshopContent\n} from \"@shared/schema\";\n\nexport interface IStorage {\n  // User methods\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  upsertUser(user: any): Promise<User>;\n\n  // Course methods\n  getCourses(): Promise<Course[]>;\n  getCourse(id: number): Promise<Course | undefined>;\n  createCourse(course: InsertCourse): Promise<Course>;\n  updateCourseProgress(id: number, progress: number): Promise<Course | undefined>;\n\n  // Module methods\n  getModulesByCourseId(courseId: number): Promise<Module[]>;\n  getModule(id: number): Promise<Module | undefined>;\n  createModule(module: InsertModule): Promise<Module>;\n\n  // Project methods\n  getProjects(): Promise<Project[]>;\n  getProject(id: number): Promise<Project | undefined>;\n  createProject(project: InsertProject): Promise<Project>;\n\n  // Document methods\n  getDocuments(): Promise<Document[]>;\n  getDocument(id: number): Promise<Document | undefined>;\n  createDocument(document: InsertDocument): Promise<Document>;\n\n  // Media content methods\n  getMediaContent(id: number): Promise<MediaContent | undefined>;\n  createMediaContent(content: InsertMediaContent): Promise<MediaContent>;\n\n  // Magazine methods\n  getMagazines(): Promise<Magazine[]>;\n  getMagazine(id: number): Promise<Magazine | undefined>;\n  createMagazine(magazine: InsertMagazine): Promise<Magazine>;\n  updateMagazine(id: number, magazine: Partial<InsertMagazine>): Promise<Magazine | undefined>;\n  deleteMagazine(id: number): Promise<boolean>;\n\n  // Article methods\n  getArticles(): Promise<Article[]>;\n  getArticlesByMagazineId(magazineId: number): Promise<Article[]>;\n  getArticle(id: number): Promise<Article | undefined>;\n  createArticle(article: InsertArticle): Promise<Article>;\n  updateArticle(id: number, article: Partial<InsertArticle>): Promise<Article | undefined>;\n  deleteArticle(id: number): Promise<boolean>;\n\n  // Article content methods\n  getArticleContents(articleId: number): Promise<ArticleContent[]>;\n  createArticleContent(content: InsertArticleContent): Promise<ArticleContent>;\n  updateArticleContent(id: number, content: Partial<InsertArticleContent>): Promise<ArticleContent | undefined>;\n  deleteArticleContent(id: number): Promise<boolean>;\n\n  // Workshop methods\n  getWorkshops(): Promise<Workshop[]>;\n  getWorkshop(id: number): Promise<Workshop | undefined>;\n  createWorkshop(workshop: InsertWorkshop): Promise<Workshop>;\n  updateWorkshop(id: number, workshop: Partial<InsertWorkshop>): Promise<Workshop | undefined>;\n  deleteWorkshop(id: number): Promise<boolean>;\n\n  // Workshop content methods\n  getWorkshopContents(workshopId: number): Promise<WorkshopContent[]>;\n  createWorkshopContent(content: InsertWorkshopContent): Promise<WorkshopContent>;\n  updateWorkshopContent(id: number, content: Partial<InsertWorkshopContent>): Promise<WorkshopContent | undefined>;\n  deleteWorkshopContent(id: number): Promise<boolean>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  private users: Map<number, User>;\n  private courses: Map<number, Course>;\n  private modules: Map<number, Module>;\n  private projects: Map<number, Project>;\n  private documents: Map<number, Document>;\n  private mediaContents: Map<number, MediaContent>;\n  private magazines: Map<number, Magazine>;\n  private articles: Map<number, Article>;\n  private articleContents: Map<number, ArticleContent>;\n  private workshops: Map<number, Workshop>;\n  private workshopContents: Map<number, WorkshopContent>;\n\n  private userId: number;\n  private courseId: number;\n  private moduleId: number;\n  private projectId: number;\n  private documentId: number;\n  private mediaContentId: number;\n  private magazineId: number;\n  private articleId: number;\n  private articleContentId: number;\n  private workshopId: number;\n  private workshopContentId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.courses = new Map();\n    this.modules = new Map();\n    this.projects = new Map();\n    this.documents = new Map();\n    this.mediaContents = new Map();\n    this.magazines = new Map();\n    this.articles = new Map();\n    this.articleContents = new Map();\n    this.workshops = new Map();\n    this.workshopContents = new Map();\n\n    this.userId = 1;\n    this.courseId = 1;\n    this.moduleId = 1;\n    this.projectId = 1;\n    this.documentId = 1;\n    this.mediaContentId = 1;\n    this.magazineId = 1;\n    this.articleId = 1;\n    this.articleContentId = 1;\n    this.workshopId = 1;\n    this.workshopContentId = 1;\n\n    // Initialize with sample data\n    this.initSampleData();\n  }\n\n  private initSampleData() {\n    // Create a default user\n    this.createUser({\n      username: \"john.smith\",\n      password: \"password123\",\n      name: \"John Smith\",\n      progress: 42,\n      membershipType: \"Premium\"\n    });\n\n    // Create sample courses\n    const course1 = this.createCourse({\n      title: \"Web Development Fundamentals\",\n      description: \"Learn the basics of web development including HTML, CSS, and JavaScript.\",\n      thumbnailUrl: \"https://images.unsplash.com/photo-1523580494863-6f3031224c94?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=500\",\n      progress: 68,\n      totalModules: 20,\n      completedModules: 12,\n      category: \"Web Development\",\n      level: \"Beginner\",\n      isNew: false,\n      isPopular: true\n    });\n\n    const course2 = this.createCourse({\n      title: \"UI/UX Design Principles\",\n      description: \"Master the fundamentals of user interface and experience design.\",\n      thumbnailUrl: \"https://images.unsplash.com/photo-1581291518633-83b4ebd1d83e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=500\",\n      progress: 42,\n      totalModules: 15,\n      completedModules: 7,\n      category: \"Design\",\n      level: \"Intermediate\",\n      isNew: false,\n      isPopular: false\n    });\n\n    const course3 = this.createCourse({\n      title: \"Data Science Basics\",\n      description: \"Introduction to data analysis, visualization, and machine learning.\",\n      thumbnailUrl: \"https://pixabay.com/get/g40788b3d6008a7451a455e0226d955dd19f3d3a1ec5683869787b5db7c2cf2e5a21a2e02556c95e24e3502d58ec6ad22b81e203df9bcae8c8dbc971db3dfb9a8_1280.jpg\",\n      progress: 21,\n      totalModules: 18,\n      completedModules: 3,\n      category: \"Data Science\",\n      level: \"Beginner\",\n      isNew: true,\n      isPopular: false\n    });\n\n    // Create sample projects/magazines\n    this.createProject({\n      title: \"Web Portfolio Project\",\n      description: \"Build a responsive portfolio website to showcase your work.\",\n      thumbnailUrl: \"https://images.unsplash.com/photo-1517694712202-14dd9538aa97?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=500\",\n      type: \"project\",\n      dueDate: \"7 days\",\n      contentUrl: \"/projects/web-portfolio\",\n      isLocked: false\n    });\n\n    this.createProject({\n      title: \"Modern Education Trends\",\n      description: \"Explore the latest innovations and methodologies in education.\",\n      thumbnailUrl: \"https://images.unsplash.com/photo-1456513080510-7bf3a84b82f8?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=500\",\n      type: \"magazine\",\n      pages: 26,\n      contentUrl: \"/documents/modern-education-trends\",\n      isLocked: true\n    });\n\n    this.createProject({\n      title: \"Digital Learning\",\n      description: \"A comprehensive guide to effective online learning strategies.\",\n      thumbnailUrl: \"https://images.unsplash.com/photo-1516321318423-f06f85e504b3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=500\",\n      type: \"magazine\",\n      pages: 18,\n      contentUrl: \"/documents/digital-learning\",\n      isLocked: false\n    });\n\n    // Create sample documents\n    this.createDocument({\n      title: \"Web Development Handbook\",\n      fileName: \"Web Development Handbook.pdf\",\n      fileUrl: \"/documents/web-development-handbook.pdf\",\n      fileType: \"pdf\",\n      totalPages: 24,\n      lastUpdated: \"15 May 2023\",\n      allowDownload: true\n    });\n\n    // Create sample media content\n    this.createMediaContent({\n      title: \"Introduction to JavaScript Frameworks\",\n      description: \"Learn about the most popular JavaScript frameworks and their use cases.\",\n      thumbnailUrl: \"\",\n      contentUrl: \"/media/introduction-to-javascript-frameworks.mp4\",\n      duration: \"12:34\",\n      instructorName: \"Prof. Sarah Johnson\",\n      instructorTitle: \"Web Development Instructor\",\n      instructorAvatar: \"https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\"\n    });\n\n    // Create modules for courses\n    this.createModule({\n      courseId: 1,\n      title: \"Introduction to JavaScript Frameworks\",\n      duration: \"12:34\",\n      type: \"video\",\n      contentUrl: \"/media/introduction-to-javascript-frameworks.mp4\",\n      isLocked: false,\n      order: 1\n    });\n\n    this.createModule({\n      courseId: 1,\n      title: \"React Fundamentals\",\n      duration: \"23:45\",\n      type: \"video\",\n      contentUrl: \"/media/react-fundamentals.mp4\",\n      isLocked: true,\n      order: 2\n    });\n\n    this.createModule({\n      courseId: 1,\n      title: \"Vue.js Basics\",\n      duration: \"18:12\",\n      type: \"video\",\n      contentUrl: \"/media/vue-basics.mp4\",\n      isLocked: true,\n      order: 3\n    });\n\n    this.createModule({\n      courseId: 1,\n      title: \"Angular Overview\",\n      duration: \"20:56\",\n      type: \"video\",\n      contentUrl: \"/media/angular-overview.mp4\",\n      isLocked: true,\n      order: 4\n    });\n  }\n\n  // User methods\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.userId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  // Course methods\n  async getCourses(): Promise<Course[]> {\n    return Array.from(this.courses.values());\n  }\n\n  async getCourse(id: number): Promise<Course | undefined> {\n    return this.courses.get(id);\n  }\n\n  async createCourse(insertCourse: InsertCourse): Promise<Course> {\n    const id = this.courseId++;\n    const course: Course = { ...insertCourse, id };\n    this.courses.set(id, course);\n    return course;\n  }\n\n  async updateCourseProgress(id: number, progress: number): Promise<Course | undefined> {\n    const course = this.courses.get(id);\n    if (!course) return undefined;\n\n    const updatedCourse = { ...course, progress };\n    this.courses.set(id, updatedCourse);\n    return updatedCourse;\n  }\n\n  // Module methods\n  async getModulesByCourseId(courseId: number): Promise<Module[]> {\n    return Array.from(this.modules.values())\n      .filter(module => module.courseId === courseId)\n      .sort((a, b) => a.order - b.order);\n  }\n\n  async getModule(id: number): Promise<Module | undefined> {\n    return this.modules.get(id);\n  }\n\n  async createModule(insertModule: InsertModule): Promise<Module> {\n    const id = this.moduleId++;\n    const module: Module = { ...insertModule, id };\n    this.modules.set(id, module);\n    return module;\n  }\n\n  // Project methods\n  async getProjects(): Promise<Project[]> {\n    return Array.from(this.projects.values());\n  }\n\n  async getProject(id: number): Promise<Project | undefined> {\n    return this.projects.get(id);\n  }\n\n  async createProject(insertProject: InsertProject): Promise<Project> {\n    const id = this.projectId++;\n    const project: Project = { ...insertProject, id };\n    this.projects.set(id, project);\n    return project;\n  }\n\n  // Document methods\n  async getDocuments(): Promise<Document[]> {\n    return Array.from(this.documents.values());\n  }\n\n  async getDocument(id: number): Promise<Document | undefined> {\n    return this.documents.get(id);\n  }\n\n  async createDocument(insertDocument: InsertDocument): Promise<Document> {\n    const id = this.documentId++;\n    const document: Document = { ...insertDocument, id };\n    this.documents.set(id, document);\n    return document;\n  }\n\n  // Media content methods\n  async getMediaContent(id: number): Promise<MediaContent | undefined> {\n    return this.mediaContents.get(id);\n  }\n\n  async createMediaContent(insertMediaContent: InsertMediaContent): Promise<MediaContent> {\n    const id = this.mediaContentId++;\n    const mediaContent: MediaContent = { ...insertMediaContent, id };\n    this.mediaContents.set(id, mediaContent);\n    return mediaContent;\n  }\n\n  // Magazine methods\n  async getMagazines(): Promise<Magazine[]> {\n    return Array.from(this.magazines.values());\n  }\n\n  async getMagazine(id: number): Promise<Magazine | undefined> {\n    return this.magazines.get(id);\n  }\n\n  async createMagazine(magazine: InsertMagazine): Promise<Magazine> {\n    const id = this.magazineId++;\n    const newMagazine: Magazine = { \n      ...magazine, \n      id,\n      createdAt: new Date(),\n      updatedAt: new Date() \n    };\n    this.magazines.set(id, newMagazine);\n    return newMagazine;\n  }\n\n  async updateMagazine(id: number, magazine: Partial<InsertMagazine>): Promise<Magazine | undefined> {\n    const existingMagazine = this.magazines.get(id);\n    if (!existingMagazine) return undefined;\n\n    const updatedMagazine: Magazine = { \n      ...existingMagazine, \n      ...magazine,\n      updatedAt: new Date() \n    };\n    this.magazines.set(id, updatedMagazine);\n    return updatedMagazine;\n  }\n\n  async deleteMagazine(id: number): Promise<boolean> {\n    return this.magazines.delete(id);\n  }\n\n  // Article methods\n  async getArticles(): Promise<Article[]> {\n    return Array.from(this.articles.values());\n  }\n\n  async getArticlesByMagazineId(magazineId: number): Promise<Article[]> {\n    return Array.from(this.articles.values())\n      .filter(article => article.magazineId === magazineId)\n      .sort((a, b) => a.order - b.order);\n  }\n\n  async getArticle(id: number): Promise<Article | undefined> {\n    return this.articles.get(id);\n  }\n\n  async createArticle(article: InsertArticle): Promise<Article> {\n    const id = this.articleId++;\n    const newArticle: Article = { \n      ...article, \n      id,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.articles.set(id, newArticle);\n    return newArticle;\n  }\n\n  async updateArticle(id: number, article: Partial<InsertArticle>): Promise<Article | undefined> {\n    const existingArticle = this.articles.get(id);\n    if (!existingArticle) return undefined;\n\n    const updatedArticle: Article = { \n      ...existingArticle, \n      ...article,\n      updatedAt: new Date() \n    };\n    this.articles.set(id, updatedArticle);\n    return updatedArticle;\n  }\n\n  async deleteArticle(id: number): Promise<boolean> {\n    return this.articles.delete(id);\n  }\n\n  // Article content methods\n  async getArticleContents(articleId: number): Promise<ArticleContent[]> {\n    return Array.from(this.articleContents.values())\n      .filter(content => content.articleId === articleId)\n      .sort((a, b) => a.order - b.order);\n  }\n\n  async createArticleContent(content: InsertArticleContent): Promise<ArticleContent> {\n    const id = this.articleContentId++;\n    const newContent: ArticleContent = { \n      ...content, \n      id,\n      createdAt: new Date()\n    };\n    this.articleContents.set(id, newContent);\n    return newContent;\n  }\n\n  async updateArticleContent(id: number, content: Partial<InsertArticleContent>): Promise<ArticleContent | undefined> {\n    const existingContent = this.articleContents.get(id);\n    if (!existingContent) return undefined;\n\n    const updatedContent: ArticleContent = { \n      ...existingContent, \n      ...content,\n      createdAt: existingContent.createdAt\n    };\n    this.articleContents.set(id, updatedContent);\n    return updatedContent;\n  }\n\n  async deleteArticleContent(id: number): Promise<boolean> {\n    return this.articleContents.delete(id);\n  }\n\n  // Workshop methods\n  async getWorkshops(): Promise<Workshop[]> {\n    return Array.from(this.workshops.values());\n  }\n\n  async getWorkshop(id: number): Promise<Workshop | undefined> {\n    return this.workshops.get(id);\n  }\n\n  async createWorkshop(workshop: InsertWorkshop): Promise<Workshop> {\n    const id = this.workshopId++;\n    const newWorkshop: Workshop = { \n      ...workshop, \n      id,\n      createdAt: new Date(),\n      updatedAt: new Date() \n    };\n    this.workshops.set(id, newWorkshop);\n    return newWorkshop;\n  }\n\n  async updateWorkshop(id: number, workshop: Partial<InsertWorkshop>): Promise<Workshop | undefined> {\n    const existingWorkshop = this.workshops.get(id);\n    if (!existingWorkshop) return undefined;\n\n    const updatedWorkshop: Workshop = { \n      ...existingWorkshop, \n      ...workshop,\n      updatedAt: new Date() \n    };\n    this.workshops.set(id, updatedWorkshop);\n    return updatedWorkshop;\n  }\n\n  async deleteWorkshop(id: number): Promise<boolean> {\n    return this.workshops.delete(id);\n  }\n\n  // Workshop content methods\n  async getWorkshopContents(workshopId: number): Promise<WorkshopContent[]> {\n    return Array.from(this.workshopContents.values())\n      .filter(content => content.workshopId === workshopId)\n      .sort((a, b) => a.order - b.order);\n  }\n\n  async createWorkshopContent(content: InsertWorkshopContent): Promise<WorkshopContent> {\n    const id = this.workshopContentId++;\n    const newContent: WorkshopContent = { \n      ...content, \n      id,\n      createdAt: new Date()\n    };\n    this.workshopContents.set(id, newContent);\n    return newContent;\n  }\n\n  async updateWorkshopContent(id: number, content: Partial<InsertWorkshopContent>): Promise<WorkshopContent | undefined> {\n    const existingContent = this.workshopContents.get(id);\n    if (!existingContent) return undefined;\n\n    const updatedContent: WorkshopContent = { \n      ...existingContent, \n      ...content \n    };\n    this.workshopContents.set(id, updatedContent);\n    return updatedContent;\n  }\n\n  async deleteWorkshopContent(id: number): Promise<boolean> {\n    return this.workshopContents.delete(id);\n  }\n}\n\nexport const storage = new DatabaseStorage();","size_bytes":18622},"server/storage.ts":{"content":"import { \n  users, type User, type InsertUser,\n  courses, type Course, type InsertCourse,\n  modules, type Module, type InsertModule,\n  projects, type Project, type InsertProject,\n  documents, type Document, type InsertDocument,\n  documentCategories, type DocumentCategory, type InsertDocumentCategory,\n  documentTags, type DocumentTag, type InsertDocumentTag,\n  documentTagRelations, type DocumentTagRelation, type InsertDocumentTagRelation,\n  mediaContent, type MediaContent, type InsertMediaContent,\n  magazines, type Magazine, type InsertMagazine,\n  articles, type Article, type InsertArticle,\n  articleContents, type ArticleContent, type InsertArticleContent,\n  workshops, type Workshop, type InsertWorkshop,\n  workshopContents, type WorkshopContent, type InsertWorkshopContent,\n  workshopRegistrations, type WorkshopRegistration, type InsertWorkshopRegistration,\n  webinars, type Webinar, type InsertWebinar,\n  webinarSections, type WebinarSection, type InsertWebinarSection,\n  slides, type Slide, type InsertSlide,\n  quickAccessItems, type QuickAccessItem, type InsertQuickAccessItem,\n  userCourseAccess, type UserCourseAccess, type InsertUserCourseAccess,\n  educationalVideos, type EducationalVideo, type InsertEducationalVideo,\n  aboutUs, type AboutUs, type InsertAboutUs,\n  subsidiaryCompanies, type SubsidiaryCompany, type InsertSubsidiaryCompany,\n  contactUs, type ContactUs, type InsertContactUs\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, asc, like, and, sql } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User methods\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  upsertUser(user: any): Promise<User>;\n  getUsers(): Promise<User[]>;\n\n  // Course methods\n  getCourses(): Promise<Course[]>;\n  getCourse(id: number): Promise<Course | undefined>;\n  createCourse(course: InsertCourse): Promise<Course>;\n  updateCourseProgress(id: number, progress: number): Promise<Course | undefined>;\n\n  // Module methods\n  getModulesByCourseId(courseId: number): Promise<Module[]>;\n  getModule(id: number): Promise<Module | undefined>;\n  createModule(module: InsertModule): Promise<Module>;\n\n  // Project methods\n  getProjects(): Promise<Project[]>;\n  getProject(id: number): Promise<Project | undefined>;\n  createProject(project: InsertProject): Promise<Project>;\n\n  // Document Category methods\n  getDocumentCategories(): Promise<DocumentCategory[]>;\n  getDocumentCategory(id: number): Promise<DocumentCategory | undefined>;\n  createDocumentCategory(category: InsertDocumentCategory): Promise<DocumentCategory>;\n  updateDocumentCategory(id: number, category: Partial<InsertDocumentCategory>): Promise<DocumentCategory | undefined>;\n  deleteDocumentCategory(id: number): Promise<boolean>;\n\n  // Document Tag methods\n  getAllDocumentTags(): Promise<DocumentTag[]>;\n  getDocumentTags(): Promise<DocumentTag[]>;\n  getDocumentTag(id: number): Promise<DocumentTag | undefined>;\n  createDocumentTag(tag: InsertDocumentTag): Promise<DocumentTag>;\n  updateDocumentTag(id: number, tag: Partial<InsertDocumentTag>): Promise<DocumentTag | undefined>;\n  deleteDocumentTag(id: number): Promise<boolean>;\n\n  // Document methods\n  getDocuments(): Promise<Document[]>;\n  getDocumentsByCategory(category: string): Promise<Document[]>;\n  getDocumentsByTag(tagId: number): Promise<Document[]>;\n  getFeaturedDocuments(): Promise<Document[]>;\n  searchDocuments(query: string): Promise<Document[]>;\n  getDocument(id: number): Promise<Document | undefined>;\n  getDocumentBySlug(slug: string): Promise<Document | undefined>;\n  createDocument(document: InsertDocument): Promise<Document>;\n  updateDocument(id: number, document: Partial<InsertDocument>): Promise<Document | undefined>;\n  deleteDocument(id: number): Promise<boolean>;\n  incrementDownloadCount(id: number): Promise<void>;\n  incrementViewCount(id: number): Promise<void>;\n\n  // Document Tag Relations\n  addTagToDocument(documentId: number, tagId: number): Promise<DocumentTagRelation>;\n  removeTagFromDocument(documentId: number, tagId: number): Promise<boolean>;\n  getDocumentTagsByDocument(documentId: number): Promise<DocumentTag[]>;\n\n  // Media content methods\n  getMediaContent(id: number): Promise<MediaContent | undefined>;\n  createMediaContent(content: InsertMediaContent): Promise<MediaContent>;\n\n  // Magazine methods\n  getMagazines(): Promise<Magazine[]>;\n  getMagazine(id: number): Promise<Magazine | undefined>;\n  createMagazine(magazine: InsertMagazine): Promise<Magazine>;\n  updateMagazine(id: number, magazine: Partial<InsertMagazine>): Promise<Magazine | undefined>;\n  deleteMagazine(id: number): Promise<boolean>;\n\n  // Article methods\n  getArticles(): Promise<Article[]>;\n  getArticlesByMagazineId(magazineId: number): Promise<Article[]>;\n  getArticle(id: number): Promise<Article | undefined>;\n  createArticle(article: InsertArticle): Promise<Article>;\n  updateArticle(id: number, article: Partial<InsertArticle>): Promise<Article | undefined>;\n  deleteArticle(id: number): Promise<boolean>;\n\n  // Article content methods\n  getArticleContents(articleId: number): Promise<ArticleContent[]>;\n  createArticleContent(content: InsertArticleContent): Promise<ArticleContent>;\n  updateArticleContent(id: number, content: Partial<InsertArticleContent>): Promise<ArticleContent | undefined>;\n  deleteArticleContent(id: number): Promise<boolean>;\n\n  // Workshop methods\n  getWorkshops(): Promise<Workshop[]>;\n  getWorkshop(id: number): Promise<Workshop | undefined>;\n  createWorkshop(workshop: InsertWorkshop): Promise<Workshop>;\n  updateWorkshop(id: number, workshop: Partial<InsertWorkshop>): Promise<Workshop | undefined>;\n  deleteWorkshop(id: number): Promise<boolean>;\n\n  // Workshop content methods\n  getWorkshopContents(workshopId: number): Promise<WorkshopContent[]>;\n  createWorkshopContent(content: InsertWorkshopContent): Promise<WorkshopContent>;\n  updateWorkshopContent(id: number, content: Partial<InsertWorkshopContent>): Promise<WorkshopContent | undefined>;\n  deleteWorkshopContent(id: number): Promise<boolean>;\n\n  // Workshop registration methods\n  getWorkshopRegistrations(): Promise<WorkshopRegistration[]>;\n  getWorkshopRegistrationsByWorkshopId(workshopId: number): Promise<WorkshopRegistration[]>;\n  createWorkshopRegistration(registration: InsertWorkshopRegistration): Promise<WorkshopRegistration>;\n  updateWorkshopRegistration(id: number, registration: Partial<InsertWorkshopRegistration>): Promise<WorkshopRegistration | undefined>;\n  deleteWorkshopRegistration(id: number): Promise<boolean>;\n\n  // Webinar methods\n  getWebinars(): Promise<Webinar[]>;\n  getWebinar(id: number): Promise<Webinar | undefined>;\n  createWebinar(webinar: InsertWebinar): Promise<Webinar>;\n  updateWebinar(id: number, webinar: Partial<InsertWebinar>): Promise<Webinar | undefined>;\n  deleteWebinar(id: number): Promise<boolean>;\n\n  // Webinar section methods\n  getWebinarSections(webinarId: number): Promise<WebinarSection[]>;\n  getWebinarSection(id: number): Promise<WebinarSection | undefined>;\n  createWebinarSection(section: InsertWebinarSection): Promise<WebinarSection>;\n  updateWebinarSection(id: number, section: Partial<InsertWebinarSection>): Promise<WebinarSection | undefined>;\n  deleteWebinarSection(id: number): Promise<boolean>;\n\n  // User course access methods\n  getUserCourseAccess(userId: number): Promise<UserCourseAccess[]>;\n  getCourseAccess(userId: number, courseId: number): Promise<UserCourseAccess | undefined>;\n  grantCourseAccess(access: InsertUserCourseAccess): Promise<UserCourseAccess>;\n  revokeCourseAccess(userId: number, courseId: number): Promise<boolean>;\n\n  // Permission check methods\n  canAccessCourse(userId: number, courseId: number): Promise<boolean>;\n  canDownloadContent(userId: number, courseId: number): Promise<boolean>;\n\n  // Slide methods\n  getSlides(): Promise<Slide[]>;\n  getActiveSlides(): Promise<Slide[]>;\n  getSlide(id: number): Promise<Slide | undefined>;\n  createSlide(slide: InsertSlide): Promise<Slide>;\n  updateSlide(id: number, slide: Partial<InsertSlide>): Promise<Slide | undefined>;\n  deleteSlide(id: number): Promise<boolean>;\n\n  // Quick Access Item methods\n  getQuickAccessItems(): Promise<QuickAccessItem[]>;\n  getActiveQuickAccessItems(): Promise<QuickAccessItem[]>;\n  getQuickAccessItem(id: number): Promise<QuickAccessItem | undefined>;\n  createQuickAccessItem(item: InsertQuickAccessItem): Promise<QuickAccessItem>;\n  updateQuickAccessItem(id: number, item: Partial<InsertQuickAccessItem>): Promise<QuickAccessItem | undefined>;\n  deleteQuickAccessItem(id: number): Promise<boolean>;\n\n  // Educational Video methods\n  getEducationalVideos(): Promise<EducationalVideo[]>;\n  getActiveEducationalVideos(): Promise<EducationalVideo[]>;\n  getEducationalVideo(id: number): Promise<EducationalVideo | undefined>;\n  createEducationalVideo(video: InsertEducationalVideo): Promise<EducationalVideo>;\n  updateEducationalVideo(id: number, video: Partial<InsertEducationalVideo>): Promise<EducationalVideo | undefined>;\n  deleteEducationalVideo(id: number): Promise<boolean>;\n\n  // Protection control methods\n  updateCourseProtection(id: number, protection: any): Promise<Course | undefined>;\n  updateProjectProtection(id: number, protection: any): Promise<Project | undefined>;\n  updateDocumentProtection(id: number, protection: any): Promise<Document | undefined>;\n  updateMagazineProtection(id: number, protection: any): Promise<Magazine | undefined>;\n\n  // About Us methods\n  getAboutUs(): Promise<AboutUs[]>;\n  getActiveAboutUs(): Promise<AboutUs[]>;\n  getAboutUsById(id: number): Promise<AboutUs | undefined>;\n  createAboutUs(aboutUs: InsertAboutUs): Promise<AboutUs>;\n  updateAboutUs(id: number, aboutUs: Partial<InsertAboutUs>): Promise<AboutUs | undefined>;\n  deleteAboutUs(id: number): Promise<boolean>;\n\n  // Subsidiary Companies methods\n  getSubsidiaryCompanies(): Promise<SubsidiaryCompany[]>;\n  getActiveSubsidiaryCompanies(): Promise<SubsidiaryCompany[]>;\n  getSubsidiaryCompanyById(id: number): Promise<SubsidiaryCompany | undefined>;\n  createSubsidiaryCompany(company: InsertSubsidiaryCompany): Promise<SubsidiaryCompany>;\n  updateSubsidiaryCompany(id: number, company: Partial<InsertSubsidiaryCompany>): Promise<SubsidiaryCompany | undefined>;\n  deleteSubsidiaryCompany(id: number): Promise<boolean>;\n\n  // Contact Us methods\n  getContactUs(): Promise<ContactUs[]>;\n  getActiveContactUs(): Promise<ContactUs[]>;\n  getContactUsById(id: number): Promise<ContactUs | undefined>;\n  createContactUs(contactUs: InsertContactUs): Promise<ContactUs>;\n  updateContactUs(id: number, contactUs: Partial<InsertContactUs>): Promise<ContactUs | undefined>;\n  deleteContactUs(id: number): Promise<boolean>;\n}\n\nexport class DatabaseStorage implements IStorage {\n\n  // User methods\n  async getUser(id: number): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async getUsers(): Promise<User[]> {\n    return await db.select().from(users);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(insertUser)\n      .returning();\n    return user;\n  }\n\n  async upsertUser(userData: any): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values({\n        id: userData.id,\n        username: userData.username || `user_${userData.id}`,\n        password: 'temp_password',\n        name: `${userData.firstName || ''} ${userData.lastName || ''}`.trim() || null,\n        role: userData.role || 'user'\n      })\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          name: `${userData.firstName || ''} ${userData.lastName || ''}`.trim() || null,\n          role: userData.role || 'user'\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // Course methods\n  async getCourses(): Promise<Course[]> {\n    return await db.select().from(courses);\n  }\n\n  async getCourse(id: number): Promise<Course | undefined> {\n    const [course] = await db.select().from(courses).where(eq(courses.id, id));\n    return course;\n  }\n\n  async createCourse(insertCourse: InsertCourse): Promise<Course> {\n    const [course] = await db\n      .insert(courses)\n      .values(insertCourse)\n      .returning();\n    return course;\n  }\n\n  async updateCourseProgress(id: number, progress: number): Promise<Course | undefined> {\n    const [course] = await db\n      .update(courses)\n      .set({ progress })\n      .where(eq(courses.id, id))\n      .returning();\n    return course;\n  }\n\n  // Module methods\n  async getModulesByCourseId(courseId: number): Promise<Module[]> {\n    return await db.select().from(modules).where(eq(modules.courseId, courseId));\n  }\n\n  async getModule(id: number): Promise<Module | undefined> {\n    const [module] = await db.select().from(modules).where(eq(modules.id, id));\n    return module;\n  }\n\n  async createModule(insertModule: InsertModule): Promise<Module> {\n    const [module] = await db\n      .insert(modules)\n      .values(insertModule)\n      .returning();\n    return module;\n  }\n\n  // Project methods\n  async getProjects(): Promise<Project[]> {\n    return await db.select().from(projects);\n  }\n\n  async getProject(id: number): Promise<Project | undefined> {\n    const [project] = await db.select().from(projects).where(eq(projects.id, id));\n    return project;\n  }\n\n  async createProject(insertProject: InsertProject): Promise<Project> {\n    const [project] = await db\n      .insert(projects)\n      .values(insertProject)\n      .returning();\n    return project;\n  }\n\n\n\n  // Media content methods\n  async getMediaContent(id: number): Promise<MediaContent | undefined> {\n    const [media] = await db.select().from(mediaContent).where(eq(mediaContent.id, id));\n    return media;\n  }\n\n  async createMediaContent(insertMediaContent: InsertMediaContent): Promise<MediaContent> {\n    const [media] = await db\n      .insert(mediaContent)\n      .values(insertMediaContent)\n      .returning();\n    return media;\n  }\n\n  // Magazine methods\n  async getMagazines(): Promise<Magazine[]> {\n    return await db.select().from(magazines);\n  }\n\n  async getMagazine(id: number): Promise<Magazine | undefined> {\n    const [magazine] = await db.select().from(magazines).where(eq(magazines.id, id));\n    return magazine;\n  }\n\n  async createMagazine(magazine: InsertMagazine): Promise<Magazine> {\n    const [newMagazine] = await db\n      .insert(magazines)\n      .values({\n        ...magazine,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newMagazine;\n  }\n\n  async updateMagazine(id: number, magazine: Partial<InsertMagazine>): Promise<Magazine | undefined> {\n    const [updatedMagazine] = await db\n      .update(magazines)\n      .set({\n        ...magazine,\n        updatedAt: new Date()\n      })\n      .where(eq(magazines.id, id))\n      .returning();\n    return updatedMagazine;\n  }\n\n  async deleteMagazine(id: number): Promise<boolean> {\n    const result = await db.delete(magazines).where(eq(magazines.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Article methods\n  async getArticles(): Promise<Article[]> {\n    return await db.select().from(articles);\n  }\n\n  async getArticlesByMagazineId(magazineId: number): Promise<Article[]> {\n    return await db.select().from(articles).where(eq(articles.magazineId, magazineId));\n  }\n\n  async getArticle(id: number): Promise<Article | undefined> {\n    const [article] = await db.select().from(articles).where(eq(articles.id, id));\n    return article;\n  }\n\n  async createArticle(article: InsertArticle): Promise<Article> {\n    const [newArticle] = await db\n      .insert(articles)\n      .values({\n        ...article,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newArticle;\n  }\n\n  async updateArticle(id: number, article: Partial<InsertArticle>): Promise<Article | undefined> {\n    const [updatedArticle] = await db\n      .update(articles)\n      .set({\n        ...article,\n        updatedAt: new Date()\n      })\n      .where(eq(articles.id, id))\n      .returning();\n    return updatedArticle;\n  }\n\n  async deleteArticle(id: number): Promise<boolean> {\n    const result = await db.delete(articles).where(eq(articles.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Article content methods\n  async getArticleContents(articleId: number): Promise<ArticleContent[]> {\n    return await db.select().from(articleContents).where(eq(articleContents.articleId, articleId));\n  }\n\n  async createArticleContent(content: InsertArticleContent): Promise<ArticleContent> {\n    const [newContent] = await db\n      .insert(articleContents)\n      .values({\n        ...content,\n        createdAt: new Date()\n      })\n      .returning();\n    return newContent;\n  }\n\n  async updateArticleContent(id: number, content: Partial<InsertArticleContent>): Promise<ArticleContent | undefined> {\n    const [updatedContent] = await db\n      .update(articleContents)\n      .set(content)\n      .where(eq(articleContents.id, id))\n      .returning();\n    return updatedContent;\n  }\n\n  async deleteArticleContent(id: number): Promise<boolean> {\n    const result = await db.delete(articleContents).where(eq(articleContents.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Workshop methods\n  async getWorkshops(): Promise<Workshop[]> {\n    return await db.select().from(workshops);\n  }\n\n  async getWorkshop(id: number): Promise<Workshop | undefined> {\n    const [workshop] = await db.select().from(workshops).where(eq(workshops.id, id));\n    return workshop;\n  }\n\n  async createWorkshop(workshop: InsertWorkshop): Promise<Workshop> {\n    const [newWorkshop] = await db\n      .insert(workshops)\n      .values({\n        ...workshop,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newWorkshop;\n  }\n\n  async updateWorkshop(id: number, workshop: Partial<InsertWorkshop>): Promise<Workshop | undefined> {\n    const [updatedWorkshop] = await db\n      .update(workshops)\n      .set({\n        ...workshop,\n        updatedAt: new Date()\n      })\n      .where(eq(workshops.id, id))\n      .returning();\n    return updatedWorkshop;\n  }\n\n  async deleteWorkshop(id: number): Promise<boolean> {\n    const result = await db.delete(workshops).where(eq(workshops.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Workshop content methods\n  async getWorkshopContents(workshopId: number): Promise<WorkshopContent[]> {\n    return await db.select().from(workshopContents).where(eq(workshopContents.workshopId, workshopId));\n  }\n\n  async createWorkshopContent(content: InsertWorkshopContent): Promise<WorkshopContent> {\n    const [newContent] = await db\n      .insert(workshopContents)\n      .values({\n        ...content,\n        createdAt: new Date()\n      })\n      .returning();\n    return newContent;\n  }\n\n  async updateWorkshopContent(id: number, content: Partial<InsertWorkshopContent>): Promise<WorkshopContent | undefined> {\n    const [updatedContent] = await db\n      .update(workshopContents)\n      .set(content)\n      .where(eq(workshopContents.id, id))\n      .returning();\n    return updatedContent;\n  }\n\n  async deleteWorkshopContent(id: number): Promise<boolean> {\n    const result = await db.delete(workshopContents).where(eq(workshopContents.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Slide methods\n  async getSlides(): Promise<Slide[]> {\n    return await db.select().from(slides).orderBy(asc(slides.order));\n  }\n\n  async getActiveSlides(): Promise<Slide[]> {\n    return await db.select().from(slides).where(eq(slides.isActive, true)).orderBy(asc(slides.order));\n  }\n\n  async getSlide(id: number): Promise<Slide | undefined> {\n    const [slide] = await db.select().from(slides).where(eq(slides.id, id));\n    return slide;\n  }\n\n  async createSlide(slide: InsertSlide): Promise<Slide> {\n    const [newSlide] = await db\n      .insert(slides)\n      .values({\n        ...slide,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newSlide;\n  }\n\n  async updateSlide(id: number, slide: Partial<InsertSlide>): Promise<Slide | undefined> {\n    const [updatedSlide] = await db\n      .update(slides)\n      .set({\n        ...slide,\n        updatedAt: new Date()\n      })\n      .where(eq(slides.id, id))\n      .returning();\n    return updatedSlide;\n  }\n\n  async deleteSlide(id: number): Promise<boolean> {\n    const result = await db.delete(slides).where(eq(slides.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Quick Access Item methods\n  async getQuickAccessItems(): Promise<QuickAccessItem[]> {\n    return await db.select().from(quickAccessItems).orderBy(asc(quickAccessItems.order));\n  }\n\n  async getActiveQuickAccessItems(): Promise<QuickAccessItem[]> {\n    return await db.select().from(quickAccessItems)\n      .where(eq(quickAccessItems.isActive, true))\n      .orderBy(asc(quickAccessItems.order));\n  }\n\n  async getQuickAccessItem(id: number): Promise<QuickAccessItem | undefined> {\n    const [item] = await db.select().from(quickAccessItems).where(eq(quickAccessItems.id, id));\n    return item;\n  }\n\n  async createQuickAccessItem(item: InsertQuickAccessItem): Promise<QuickAccessItem> {\n    const [newItem] = await db\n      .insert(quickAccessItems)\n      .values({\n        ...item,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newItem;\n  }\n\n  async updateQuickAccessItem(id: number, item: Partial<InsertQuickAccessItem>): Promise<QuickAccessItem | undefined> {\n    const [updatedItem] = await db\n      .update(quickAccessItems)\n      .set({\n        ...item,\n        updatedAt: new Date()\n      })\n      .where(eq(quickAccessItems.id, id))\n      .returning();\n    return updatedItem;\n  }\n\n  async deleteQuickAccessItem(id: number): Promise<boolean> {\n    const result = await db.delete(quickAccessItems).where(eq(quickAccessItems.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Document Category methods\n  async getDocumentCategories(): Promise<DocumentCategory[]> {\n    return await db.select().from(documentCategories).where(eq(documentCategories.isActive, true)).orderBy(asc(documentCategories.order));\n  }\n\n  async getDocumentCategory(id: number): Promise<DocumentCategory | undefined> {\n    const [category] = await db.select().from(documentCategories).where(eq(documentCategories.id, id));\n    return category;\n  }\n\n  async createDocumentCategory(category: InsertDocumentCategory): Promise<DocumentCategory> {\n    const [newCategory] = await db\n      .insert(documentCategories)\n      .values({\n        ...category,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newCategory;\n  }\n\n  async updateDocumentCategory(id: number, category: Partial<InsertDocumentCategory>): Promise<DocumentCategory | undefined> {\n    const [updatedCategory] = await db\n      .update(documentCategories)\n      .set({\n        ...category,\n        updatedAt: new Date()\n      })\n      .where(eq(documentCategories.id, id))\n      .returning();\n    return updatedCategory;\n  }\n\n  async deleteDocumentCategory(id: number): Promise<boolean> {\n    const result = await db.delete(documentCategories).where(eq(documentCategories.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Document Tag methods\n  async getAllDocumentTags(): Promise<DocumentTag[]> {\n    return await db.select().from(documentTags);\n  }\n\n  async getDocumentTag(id: number): Promise<DocumentTag | undefined> {\n    const [tag] = await db.select().from(documentTags).where(eq(documentTags.id, id));\n    return tag;\n  }\n\n  async createDocumentTag(tag: InsertDocumentTag): Promise<DocumentTag> {\n    const [newTag] = await db\n      .insert(documentTags)\n      .values({\n        ...tag,\n        createdAt: new Date()\n      })\n      .returning();\n    return newTag;\n  }\n\n  async updateDocumentTag(id: number, tag: Partial<InsertDocumentTag>): Promise<DocumentTag | undefined> {\n    const [updatedTag] = await db\n      .update(documentTags)\n      .set(tag)\n      .where(eq(documentTags.id, id))\n      .returning();\n    return updatedTag;\n  }\n\n  async deleteDocumentTag(id: number): Promise<boolean> {\n    const result = await db.delete(documentTags).where(eq(documentTags.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  async getDocumentTags(): Promise<DocumentTag[]> {\n    return await db.select().from(documentTags).orderBy(asc(documentTags.name));\n  }\n\n  // Document methods\n  async getDocuments(): Promise<Document[]> {\n    return await db.select().from(documents).orderBy(asc(documents.createdAt));\n  }\n\n  async getDocumentsByCategory(category: string): Promise<Document[]> {\n    return await db.select().from(documents).where(eq(documents.category, category));\n  }\n\n  async getDocumentsByTag(tagId: number): Promise<Document[]> {\n    const results = await db\n      .select({ document: documents })\n      .from(documents)\n      .innerJoin(documentTagRelations, eq(documents.id, documentTagRelations.documentId))\n      .where(eq(documentTagRelations.tagId, tagId));\n    return results.map(r => r.document);\n  }\n\n  async getFeaturedDocuments(): Promise<Document[]> {\n    return await db.select().from(documents).where(eq(documents.isSticky, true));\n  }\n\n  async searchDocuments(query: string): Promise<Document[]> {\n    return await db.select().from(documents).where(\n      // Simple text search - در production از full-text search استفاده کنید\n      eq(documents.title, query)\n    );\n  }\n\n  async getDocument(id: number): Promise<Document | undefined> {\n    const [document] = await db.select().from(documents).where(eq(documents.id, id));\n    return document;\n  }\n\n  async getDocumentBySlug(slug: string): Promise<Document | undefined> {\n    const [document] = await db.select().from(documents).where(eq(documents.slug, slug));\n    return document;\n  }\n\n  async createDocument(document: InsertDocument): Promise<Document> {\n    const [newDocument] = await db\n      .insert(documents)\n      .values({\n        ...document,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        publishedAt: new Date()\n      })\n      .returning();\n    return newDocument;\n  }\n\n  async updateDocument(id: number, document: Partial<InsertDocument>): Promise<Document | undefined> {\n    const [updatedDocument] = await db\n      .update(documents)\n      .set({\n        ...document,\n        updatedAt: new Date()\n      })\n      .where(eq(documents.id, id))\n      .returning();\n    return updatedDocument;\n  }\n\n  async deleteDocument(id: number): Promise<boolean> {\n    const result = await db.delete(documents).where(eq(documents.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  async incrementDownloadCount(id: number): Promise<void> {\n    await db\n      .update(documents)\n      .set({\n        downloadCount: sql`${documents.downloadCount} + 1`\n      })\n      .where(eq(documents.id, id));\n  }\n\n  async incrementViewCount(id: number): Promise<void> {\n    await db\n      .update(documents)\n      .set({\n        viewCount: sql`${documents.viewCount} + 1`\n      })\n      .where(eq(documents.id, id));\n  }\n\n  // Document Tag Relations\n  async addTagToDocument(documentId: number, tagId: number): Promise<DocumentTagRelation> {\n    const [relation] = await db\n      .insert(documentTagRelations)\n      .values({\n        documentId,\n        tagId,\n        createdAt: new Date()\n      })\n      .returning();\n    return relation;\n  }\n\n  async removeTagFromDocument(documentId: number, tagId: number): Promise<boolean> {\n    const result = await db\n      .delete(documentTagRelations)\n      .where(\n        eq(documentTagRelations.documentId, documentId) && eq(documentTagRelations.tagId, tagId)\n      );\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  async getDocumentTagsByDocument(documentId: number): Promise<DocumentTag[]> {\n    const results = await db\n      .select({ tag: documentTags })\n      .from(documentTags)\n      .innerJoin(documentTagRelations, eq(documentTags.id, documentTagRelations.tagId))\n      .where(eq(documentTagRelations.documentId, documentId));\n    return results.map(r => r.tag);\n  }\n\n  // User course access methods\n  async getUserCourseAccess(userId: number): Promise<UserCourseAccess[]> {\n    return await db.select().from(userCourseAccess).where(eq(userCourseAccess.userId, userId));\n  }\n\n  async getCourseAccess(userId: number, courseId: number): Promise<UserCourseAccess | undefined> {\n    const [access] = await db\n      .select()\n      .from(userCourseAccess)\n      .where(\n        and(\n          eq(userCourseAccess.userId, userId),\n          eq(userCourseAccess.courseId, courseId),\n          eq(userCourseAccess.isActive, true)\n        )\n      );\n    return access;\n  }\n\n  async grantCourseAccess(access: InsertUserCourseAccess): Promise<UserCourseAccess> {\n    const [newAccess] = await db\n      .insert(userCourseAccess)\n      .values(access)\n      .returning();\n    return newAccess;\n  }\n\n  async revokeCourseAccess(userId: number, courseId: number): Promise<boolean> {\n    const result = await db\n      .update(userCourseAccess)\n      .set({ isActive: false })\n      .where(\n        and(\n          eq(userCourseAccess.userId, userId),\n          eq(userCourseAccess.courseId, courseId)\n        )\n      );\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  async canAccessCourse(userId: number, courseId: number): Promise<boolean> {\n    const user = await this.getUser(userId);\n    const course = await this.getCourse(courseId);\n\n    if (!user || !course) return false;\n\n    // Admin can access everything\n    if (user.role === 'admin') return true;\n\n    // Free courses are accessible to everyone\n    if (course.accessLevel === 'free') return true;\n\n    // Check user subscription status\n    if (course.accessLevel === 'premium' && (user.subscriptionStatus === 'premium' || user.subscriptionStatus === 'vip')) {\n      return true;\n    }\n\n    if (course.accessLevel === 'vip' && user.subscriptionStatus === 'vip') {\n      return true;\n    }\n\n    // Check specific course access\n    const access = await this.getCourseAccess(userId, courseId);\n    return access ? (access.isActive ?? false) : false;\n  }\n\n  async canDownloadContent(userId: number, courseId: number): Promise<boolean> {\n    const user = await this.getUser(userId);\n    if (!user) return false;\n\n    // Admin can download everything\n    if (user.role === 'admin') return true;\n\n    // Check if user has access to the course first\n    const hasAccess = await this.canAccessCourse(userId, courseId);\n    if (!hasAccess) return false;\n\n    // Premium and VIP users can download\n    return user.subscriptionStatus === 'premium' || user.subscriptionStatus === 'vip';\n  }\n\n  // Webinar methods\n  async getWebinars(): Promise<Webinar[]> {\n    return await db.select().from(webinars).orderBy(asc(webinars.createdAt));\n  }\n\n  async getWebinar(id: number): Promise<Webinar | undefined> {\n    const [webinar] = await db.select().from(webinars).where(eq(webinars.id, id));\n    return webinar;\n  }\n\n  async createWebinar(webinar: InsertWebinar): Promise<Webinar> {\n    const [newWebinar] = await db.insert(webinars).values(webinar).returning();\n    return newWebinar;\n  }\n\n  async updateWebinar(id: number, webinar: Partial<InsertWebinar>): Promise<Webinar | undefined> {\n    const [updatedWebinar] = await db\n      .update(webinars)\n      .set({ ...webinar, updatedAt: new Date() })\n      .where(eq(webinars.id, id))\n      .returning();\n    return updatedWebinar;\n  }\n\n  async deleteWebinar(id: number): Promise<boolean> {\n    const result = await db.delete(webinars).where(eq(webinars.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Webinar section methods\n  async getWebinarSections(webinarId: number): Promise<WebinarSection[]> {\n    return await db.select().from(webinarSections)\n      .where(eq(webinarSections.webinarId, webinarId))\n      .orderBy(asc(webinarSections.order));\n  }\n\n  async getWebinarSection(id: number): Promise<WebinarSection | undefined> {\n    const [section] = await db.select().from(webinarSections).where(eq(webinarSections.id, id));\n    return section;\n  }\n\n  async createWebinarSection(section: InsertWebinarSection): Promise<WebinarSection> {\n    const [newSection] = await db.insert(webinarSections).values(section).returning();\n    return newSection;\n  }\n\n  async updateWebinarSection(id: number, section: Partial<InsertWebinarSection>): Promise<WebinarSection | undefined> {\n    const [updatedSection] = await db\n      .update(webinarSections)\n      .set({ ...section, updatedAt: new Date() })\n      .where(eq(webinarSections.id, id))\n      .returning();\n    return updatedSection;\n  }\n\n  async deleteWebinarSection(id: number): Promise<boolean> {\n    const result = await db.delete(webinarSections).where(eq(webinarSections.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Protection control methods\n  async updateCourseProtection(id: number, protection: any): Promise<Course | undefined> {\n    const [updatedCourse] = await db\n      .update(courses)\n      .set(protection)\n      .where(eq(courses.id, id))\n      .returning();\n    return updatedCourse;\n  }\n\n  async updateProjectProtection(id: number, protection: any): Promise<Project | undefined> {\n    const [updatedProject] = await db\n      .update(projects)\n      .set(protection)\n      .where(eq(projects.id, id))\n      .returning();\n    return updatedProject;\n  }\n\n  async updateDocumentProtection(id: number, protection: any): Promise<Document | undefined> {\n    const [updatedDocument] = await db\n      .update(documents)\n      .set(protection)\n      .where(eq(documents.id, id))\n      .returning();\n    return updatedDocument;\n  }\n\n  async updateMagazineProtection(id: number, protection: any): Promise<Magazine | undefined> {\n    const [updatedMagazine] = await db\n      .update(magazines)\n      .set(protection)\n      .where(eq(magazines.id, id))\n      .returning();\n    return updatedMagazine;\n  }\n\n  // Workshop registration methods\n  async getWorkshopRegistrations(): Promise<WorkshopRegistration[]> {\n    return await db.select().from(workshopRegistrations).orderBy(asc(workshopRegistrations.registrationDate));\n  }\n\n  async getWorkshopRegistrationsByWorkshopId(workshopId: number): Promise<WorkshopRegistration[]> {\n    return await db.select().from(workshopRegistrations).where(eq(workshopRegistrations.workshopId, workshopId)).orderBy(asc(workshopRegistrations.registrationDate));\n  }\n\n  async createWorkshopRegistration(registration: InsertWorkshopRegistration): Promise<WorkshopRegistration> {\n    const [newRegistration] = await db\n      .insert(workshopRegistrations)\n      .values({\n        ...registration,\n        registrationDate: new Date()\n      })\n      .returning();\n    return newRegistration;\n  }\n\n  async updateWorkshopRegistration(id: number, registration: Partial<InsertWorkshopRegistration>): Promise<WorkshopRegistration | undefined> {\n    const [updatedRegistration] = await db\n      .update(workshopRegistrations)\n      .set(registration)\n      .where(eq(workshopRegistrations.id, id))\n      .returning();\n    return updatedRegistration;\n  }\n\n  async deleteWorkshopRegistration(id: number): Promise<boolean> {\n    const result = await db.delete(workshopRegistrations).where(eq(workshopRegistrations.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Educational Video methods\n  async getEducationalVideos(): Promise<EducationalVideo[]> {\n    return await db.select().from(educationalVideos).orderBy(asc(educationalVideos.orderPosition));\n  }\n\n  async getActiveEducationalVideos(): Promise<EducationalVideo[]> {\n    return await db.select().from(educationalVideos).where(eq(educationalVideos.isActive, true)).orderBy(asc(educationalVideos.orderPosition));\n  }\n\n  async getEducationalVideo(id: number): Promise<EducationalVideo | undefined> {\n    const [video] = await db.select().from(educationalVideos).where(eq(educationalVideos.id, id));\n    return video;\n  }\n\n  async createEducationalVideo(video: InsertEducationalVideo): Promise<EducationalVideo> {\n    const [newVideo] = await db\n      .insert(educationalVideos)\n      .values(video)\n      .returning();\n    return newVideo;\n  }\n\n  async updateEducationalVideo(id: number, video: Partial<InsertEducationalVideo>): Promise<EducationalVideo | undefined> {\n    const [updatedVideo] = await db\n      .update(educationalVideos)\n      .set(video)\n      .where(eq(educationalVideos.id, id))\n      .returning();\n    return updatedVideo;\n  }\n\n  async deleteEducationalVideo(id: number): Promise<boolean> {\n    const result = await db.delete(educationalVideos).where(eq(educationalVideos.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // About Us methods\n  async getAboutUs(): Promise<AboutUs[]> {\n    return await db.select().from(aboutUs).orderBy(asc(aboutUs.id));\n  }\n\n  async getActiveAboutUs(): Promise<AboutUs[]> {\n    return await db.select().from(aboutUs).where(eq(aboutUs.isActive, true)).orderBy(asc(aboutUs.id));\n  }\n\n  async getAboutUsById(id: number): Promise<AboutUs | undefined> {\n    const [aboutUsData] = await db.select().from(aboutUs).where(eq(aboutUs.id, id));\n    return aboutUsData;\n  }\n\n  async createAboutUs(aboutUsData: InsertAboutUs): Promise<AboutUs> {\n    const [newAboutUs] = await db\n      .insert(aboutUs)\n      .values(aboutUsData)\n      .returning();\n    return newAboutUs;\n  }\n\n  async updateAboutUs(id: number, aboutUsData: Partial<InsertAboutUs>): Promise<AboutUs | undefined> {\n    const [updatedAboutUs] = await db\n      .update(aboutUs)\n      .set(aboutUsData)\n      .where(eq(aboutUs.id, id))\n      .returning();\n    return updatedAboutUs;\n  }\n\n  async deleteAboutUs(id: number): Promise<boolean> {\n    const result = await db.delete(aboutUs).where(eq(aboutUs.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Subsidiary Companies methods\n  async getSubsidiaryCompanies(): Promise<SubsidiaryCompany[]> {\n    return await db.select().from(subsidiaryCompanies).orderBy(asc(subsidiaryCompanies.order));\n  }\n\n  async getActiveSubsidiaryCompanies(): Promise<SubsidiaryCompany[]> {\n    return await db.select().from(subsidiaryCompanies).where(eq(subsidiaryCompanies.isActive, true)).orderBy(asc(subsidiaryCompanies.order));\n  }\n\n  async getSubsidiaryCompanyById(id: number): Promise<SubsidiaryCompany | undefined> {\n    const [company] = await db.select().from(subsidiaryCompanies).where(eq(subsidiaryCompanies.id, id));\n    return company;\n  }\n\n  async createSubsidiaryCompany(companyData: InsertSubsidiaryCompany): Promise<SubsidiaryCompany> {\n    const [newCompany] = await db\n      .insert(subsidiaryCompanies)\n      .values(companyData)\n      .returning();\n    return newCompany;\n  }\n\n  async updateSubsidiaryCompany(id: number, companyData: Partial<InsertSubsidiaryCompany>): Promise<SubsidiaryCompany | undefined> {\n    const [updatedCompany] = await db\n      .update(subsidiaryCompanies)\n      .set(companyData)\n      .where(eq(subsidiaryCompanies.id, id))\n      .returning();\n    return updatedCompany;\n  }\n\n  async deleteSubsidiaryCompany(id: number): Promise<boolean> {\n    const result = await db.delete(subsidiaryCompanies).where(eq(subsidiaryCompanies.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Contact Us methods\n  async getContactUs(): Promise<ContactUs[]> {\n    return await db.select().from(contactUs).orderBy(asc(contactUs.id));\n  }\n\n  async getActiveContactUs(): Promise<ContactUs[]> {\n    return await db.select().from(contactUs).where(eq(contactUs.isActive, true)).orderBy(asc(contactUs.id));\n  }\n\n  async getContactUsById(id: number): Promise<ContactUs | undefined> {\n    const [contactUsData] = await db.select().from(contactUs).where(eq(contactUs.id, id));\n    return contactUsData;\n  }\n\n  async createContactUs(contactUsData: InsertContactUs): Promise<ContactUs> {\n    const [newContactUs] = await db\n      .insert(contactUs)\n      .values(contactUsData)\n      .returning();\n    return newContactUs;\n  }\n\n  async updateContactUs(id: number, contactUsData: Partial<InsertContactUs>): Promise<ContactUs | undefined> {\n    const [updatedContactUs] = await db\n      .update(contactUs)\n      .set(contactUsData)\n      .where(eq(contactUs.id, id))\n      .returning();\n    return updatedContactUs;\n  }\n\n  async deleteContactUs(id: number): Promise<boolean> {\n    const result = await db.delete(contactUs).where(eq(contactUs.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n}\n\nexport const storage = new DatabaseStorage();","size_bytes":40897},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema-backup-full.ts":{"content":"import { pgTable, text, serial, integer, boolean, timestamp, jsonb, varchar, index } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table.\n// (IMPORTANT) This table is mandatory for Replit Auth, don't drop it.\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  name: text(\"name\"),\n  progress: integer(\"progress\").default(0),\n  membershipType: text(\"membership_type\").default(\"Basic\"),\n  role: text(\"role\").default(\"user\"), // admin, user, premium\n  subscriptionStatus: text(\"subscription_status\").default(\"free\"), // free, premium, vip\n  subscriptionExpiry: timestamp(\"subscription_expiry\"),\n});\n\nexport const courses = pgTable(\"courses\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  progress: integer(\"progress\").default(0),\n  totalModules: integer(\"total_modules\").default(0),\n  completedModules: integer(\"completed_modules\").default(0),\n  category: text(\"category\"),\n  level: text(\"level\"),\n  isNew: boolean(\"is_new\").default(false),\n  isPopular: boolean(\"is_popular\").default(false),\n  accessLevel: text(\"access_level\").default(\"free\"), // free, premium, vip\n  price: integer(\"price\").default(0), // price in tomans\n  isLocked: boolean(\"is_locked\").default(false),\n  // Content Protection Settings\n  allowDownload: boolean(\"allow_download\").default(true),\n  allowScreenshot: boolean(\"allow_screenshot\").default(true),\n  allowCopy: boolean(\"allow_copy\").default(true),\n  allowPrint: boolean(\"allow_print\").default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const modules = pgTable(\"modules\", {\n  id: serial(\"id\").primaryKey(),\n  courseId: integer(\"course_id\").notNull(),\n  title: text(\"title\").notNull(),\n  duration: text(\"duration\"),\n  type: text(\"type\").notNull(), // video, pdf, etc.\n  contentUrl: text(\"content_url\"),\n  isLocked: boolean(\"is_locked\").default(false),\n  order: integer(\"order\").notNull(),\n});\n\nexport const projects = pgTable(\"projects\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  type: text(\"type\").notNull(), // \"project\" or \"magazine\"\n  dueDate: text(\"due_date\"),\n  pages: integer(\"pages\"),\n  contentUrl: text(\"content_url\"),\n  isLocked: boolean(\"is_locked\").default(false),\n  difficulty: text(\"difficulty\"),\n  estimatedHours: integer(\"estimated_hours\"),\n  // Content Protection Settings\n  allowDownload: boolean(\"allow_download\").default(true),\n  allowScreenshot: boolean(\"allow_screenshot\").default(true),\n  allowCopy: boolean(\"allow_copy\").default(true),\n  allowPrint: boolean(\"allow_print\").default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const documentCategories = pgTable(\"document_categories\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  parentId: integer(\"parent_id\"),\n  order: integer(\"order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const documentTags = pgTable(\"document_tags\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  color: text(\"color\").default(\"#6B7280\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const documents = pgTable(\"documents\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  content: text(\"content\"),\n  excerpt: text(\"excerpt\"),\n  author: text(\"author\"),\n  featuredImageUrl: text(\"featured_image_url\"),\n  fileName: text(\"file_name\").notNull(),\n  fileUrl: text(\"file_url\").notNull(),\n  fileType: text(\"file_type\").notNull(),\n  fileSize: integer(\"file_size\"),\n  totalPages: integer(\"total_pages\"),\n  categoryId: integer(\"category_id\").references(() => documentCategories.id),\n  status: text(\"status\").default(\"published\"), // published, draft, private\n  allowDownload: boolean(\"allow_download\").default(true),\n  downloadCount: integer(\"download_count\").default(0),\n  viewCount: integer(\"view_count\").default(0),\n  isFeatured: boolean(\"is_featured\").default(false),\n  publishedAt: timestamp(\"published_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n  // Enhanced Content Protection Settings\n  allowScreenshot: boolean(\"allow_screenshot\").default(true),\n  allowCopy: boolean(\"allow_copy\").default(true),\n  allowPrint: boolean(\"allow_print\").default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const documentTagRelations = pgTable(\"document_tag_relations\", {\n  id: serial(\"id\").primaryKey(),\n  documentId: integer(\"document_id\").notNull().references(() => documents.id),\n  tagId: integer(\"tag_id\").notNull().references(() => documentTags.id),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const mediaContent = pgTable(\"media_content\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  contentUrl: text(\"content_url\").notNull(),\n  duration: text(\"duration\"),\n  instructorName: text(\"instructor_name\"),\n  instructorTitle: text(\"instructor_title\"),\n  instructorAvatar: text(\"instructor_avatar\"),\n});\n\n// مدل‌های داده برای مجلات و مقالات\nexport const magazines = pgTable(\"magazines\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  coverImageUrl: text(\"cover_image_url\"),\n  issueNumber: integer(\"issue_number\"),\n  publishDate: text(\"publish_date\"),\n  season: text(\"season\"),\n  year: integer(\"year\"),\n  totalPages: integer(\"total_pages\").default(0),\n  pdfUrl: text(\"pdf_url\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n  // Content Protection Settings\n  allowDownload: boolean(\"allow_download\").default(true),\n  allowScreenshot: boolean(\"allow_screenshot\").default(true),\n  allowCopy: boolean(\"allow_copy\").default(true),\n  allowPrint: boolean(\"allow_print\").default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const articles = pgTable(\"articles\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  author: text(\"author\"),\n  summary: text(\"summary\"),\n  publishDate: text(\"publish_date\"),\n  content: text(\"content\"),\n  featuredImageUrl: text(\"featured_image_url\"),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  readTime: integer(\"read_time\").default(0),\n  magazineId: integer(\"magazine_id\").notNull(),\n  pdfUrl: text(\"pdf_url\"),\n  order: integer(\"order\").default(0),\n  isPublished: boolean(\"is_published\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const articleContents = pgTable(\"article_contents\", {\n  id: serial(\"id\").primaryKey(),\n  articleId: integer(\"article_id\").notNull(),\n  contentType: text(\"content_type\").notNull(), // text, image, video\n  content: text(\"content\").notNull(),\n  caption: text(\"caption\"),\n  order: integer(\"order\").notNull(),\n  style: jsonb(\"style\"), // برای ذخیره استایل‌های مربوط به محتوا\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// مدل‌های نوشته‌ها (مشابه وردپرس)\nexport const posts = pgTable(\"posts\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  content: text(\"content\").notNull(), // HTML content\n  excerpt: text(\"excerpt\"), // خلاصه نوشته\n  authorId: integer(\"author_id\").notNull(),\n  authorName: text(\"author_name\").notNull(),\n  status: text(\"status\").notNull().default(\"draft\"), // draft, published, scheduled\n  visibility: text(\"visibility\").default(\"public\"), // public, private, password\n  featuredImage: text(\"featured_image\"),\n  categories: text(\"categories\").array(), // دسته‌بندی‌ها\n  tags: text(\"tags\").array(), // برچسب‌ها\n  publishedAt: timestamp(\"published_at\"),\n  scheduledAt: timestamp(\"scheduled_at\"), // برای نوشته‌های زمان‌بندی شده\n  viewCount: integer(\"view_count\").default(0),\n  likesCount: integer(\"likes_count\").default(0),\n  seoTitle: text(\"seo_title\"),\n  seoDescription: text(\"seo_description\"),\n  allowComments: boolean(\"allow_comments\").default(true),\n  isPinned: boolean(\"is_pinned\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// جدول رسانه برای کتابخانه رسانه مثل وردپرس\nexport const mediaLibrary = pgTable(\"media_library\", {\n  id: serial(\"id\").primaryKey(),\n  filename: text(\"filename\").notNull(),\n  originalName: text(\"original_name\").notNull(),\n  mimeType: text(\"mime_type\").notNull(),\n  fileSize: integer(\"file_size\").notNull(), // اندازه فایل به بایت\n  width: integer(\"width\"), // برای تصاویر\n  height: integer(\"height\"), // برای تصاویر\n  url: text(\"url\").notNull(),\n  altText: text(\"alt_text\"), // متن جایگزین برای تصاویر\n  caption: text(\"caption\"),\n  description: text(\"description\"),\n  uploadedBy: integer(\"uploaded_by\").notNull(),\n  uploadedAt: timestamp(\"uploaded_at\").defaultNow(),\n});\n\n// مدل‌های داده‌ برای کارگاه‌های آموزشی\nexport const workshops = pgTable(\"workshops\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  posterUrl: text(\"poster_url\"),\n  eventDate: text(\"event_date\"),\n  location: text(\"location\"),\n  instructor: text(\"instructor\"),\n  duration: text(\"duration\"),\n  capacity: integer(\"capacity\"),\n  level: text(\"level\"), // مبتدی، متوسط، پیشرفته\n  category: text(\"category\"),\n  isActive: boolean(\"is_active\").default(true),\n  registrationOpen: boolean(\"registration_open\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n  // Content Protection Settings\n  allowDownload: boolean(\"allow_download\").default(true),\n  allowScreenshot: boolean(\"allow_screenshot\").default(true),\n  allowCopy: boolean(\"allow_copy\").default(true),\n  allowPrint: boolean(\"allow_print\").default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const workshopSections = pgTable(\"workshop_sections\", {\n  id: serial(\"id\").primaryKey(),\n  workshopId: integer(\"workshop_id\").notNull(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  content: text(\"content\"),\n  videoUrl: text(\"video_url\"),\n  presentationUrl: text(\"presentation_url\"),\n  documentUrl: text(\"document_url\"),\n  order: integer(\"order\").notNull(),\n  isLocked: boolean(\"is_locked\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const workshopContents = pgTable(\"workshop_contents\", {\n  id: serial(\"id\").primaryKey(),\n  workshopId: integer(\"workshop_id\").notNull(),\n  contentType: text(\"content_type\").notNull(), // text, image, video, presentation\n  title: text(\"title\"),\n  content: text(\"content\").notNull(),\n  order: integer(\"order\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n\n\n// Workshop registrations table\nexport const workshopRegistrations = pgTable(\"workshop_registrations\", {\n  id: serial(\"id\").primaryKey(),\n  workshopId: integer(\"workshop_id\").notNull(),\n  userEmail: text(\"user_email\").notNull(),\n  userName: text(\"user_name\").notNull(),\n  userPhone: text(\"user_phone\"),\n  status: text(\"status\").notNull().default(\"pending\"), // pending, confirmed, cancelled\n  registrationDate: timestamp(\"registration_date\").defaultNow(),\n  notes: text(\"notes\"),\n});\n\n// Slides table for homepage carousel\nexport const slides = pgTable(\"slides\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  imageUrl: text(\"image_url\"),\n  buttonText: text(\"button_text\"),\n  buttonUrl: text(\"button_url\"),\n  secondButtonText: text(\"second_button_text\"),\n  secondButtonUrl: text(\"second_button_url\"),\n  showButtons: boolean(\"show_buttons\").default(true),\n  showIcon: boolean(\"show_icon\").default(true),\n  isActive: boolean(\"is_active\").default(true),\n  order: integer(\"order\").default(0),\n  gradientFrom: text(\"gradient_from\"),\n  gradientTo: text(\"gradient_to\"),\n  iconName: text(\"icon_name\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Quick Access Menu Items\nexport const quickAccessItems = pgTable(\"quick_access_items\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  iconUrl: text(\"icon_url\"), // URL to custom icon/image\n  iconSvg: text(\"icon_svg\"), // SVG code for icon\n  iconType: text(\"icon_type\").notNull().default(\"svg\"), // \"svg\", \"image\", or \"lucide\"\n  iconName: text(\"icon_name\"), // Lucide icon name if using lucide\n  backgroundColor: text(\"background_color\").default(\"hsl(270, 60%, 95%)\"),\n  iconColor: text(\"icon_color\").default(\"hsl(270, 70%, 60%)\"),\n  linkUrl: text(\"link_url\"),\n  isActive: boolean(\"is_active\").default(true),\n  order: integer(\"order\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Insert Schemas\nexport const insertUserSchema = createInsertSchema(users).omit({ id: true });\nexport const insertCourseSchema = createInsertSchema(courses).omit({ id: true });\nexport const insertModuleSchema = createInsertSchema(modules).omit({ id: true });\nexport const insertProjectSchema = createInsertSchema(projects).omit({ id: true });\nexport const insertDocumentCategorySchema = createInsertSchema(documentCategories).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertDocumentTagSchema = createInsertSchema(documentTags).omit({ id: true, createdAt: true });\nexport const insertDocumentSchema = createInsertSchema(documents).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertDocumentTagRelationSchema = createInsertSchema(documentTagRelations).omit({ id: true, createdAt: true });\nexport const insertMediaContentSchema = createInsertSchema(mediaContent).omit({ id: true });\nexport const insertMagazineSchema = createInsertSchema(magazines).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertArticleSchema = createInsertSchema(articles).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertArticleContentSchema = createInsertSchema(articleContents).omit({ id: true, createdAt: true });\nexport const insertWorkshopSchema = createInsertSchema(workshops).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertWorkshopSectionSchema = createInsertSchema(workshopSections).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertWorkshopContentSchema = createInsertSchema(workshopContents).omit({ id: true, createdAt: true });\nexport const insertPostSchema = createInsertSchema(posts).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertMediaLibrarySchema = createInsertSchema(mediaLibrary).omit({ id: true, uploadedAt: true });\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport type InsertCourse = z.infer<typeof insertCourseSchema>;\nexport type Course = typeof courses.$inferSelect;\n\nexport type InsertModule = z.infer<typeof insertModuleSchema>;\nexport type Module = typeof modules.$inferSelect;\n\nexport type InsertProject = z.infer<typeof insertProjectSchema>;\nexport type Project = typeof projects.$inferSelect;\n\nexport type InsertDocumentCategory = z.infer<typeof insertDocumentCategorySchema>;\nexport type DocumentCategory = typeof documentCategories.$inferSelect;\n\nexport type InsertDocumentTag = z.infer<typeof insertDocumentTagSchema>;\nexport type DocumentTag = typeof documentTags.$inferSelect;\n\nexport type InsertDocument = z.infer<typeof insertDocumentSchema>;\nexport type Document = typeof documents.$inferSelect;\n\nexport type InsertDocumentTagRelation = z.infer<typeof insertDocumentTagRelationSchema>;\nexport type DocumentTagRelation = typeof documentTagRelations.$inferSelect;\n\nexport type InsertMediaContent = z.infer<typeof insertMediaContentSchema>;\nexport type MediaContent = typeof mediaContent.$inferSelect;\n\nexport type InsertMagazine = z.infer<typeof insertMagazineSchema>;\nexport type Magazine = typeof magazines.$inferSelect;\n\nexport type InsertArticle = z.infer<typeof insertArticleSchema>;\nexport type Article = typeof articles.$inferSelect;\n\nexport type InsertArticleContent = z.infer<typeof insertArticleContentSchema>;\nexport type ArticleContent = typeof articleContents.$inferSelect;\n\nexport type InsertWorkshop = z.infer<typeof insertWorkshopSchema>;\nexport type Workshop = typeof workshops.$inferSelect;\n\nexport type InsertWorkshopSection = z.infer<typeof insertWorkshopSectionSchema>;\nexport type WorkshopSection = typeof workshopSections.$inferSelect;\n\nexport type InsertWorkshopContent = z.infer<typeof insertWorkshopContentSchema>;\nexport type WorkshopContent = typeof workshopContents.$inferSelect;\n\nexport type InsertPost = z.infer<typeof insertPostSchema>;\nexport type Post = typeof posts.$inferSelect;\n\nexport type InsertMediaLibrary = z.infer<typeof insertMediaLibrarySchema>;\nexport type MediaLibrary = typeof mediaLibrary.$inferSelect;\n\nexport const insertSlideSchema = createInsertSchema(slides).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertQuickAccessItemSchema = createInsertSchema(quickAccessItems).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertWorkshopRegistrationSchema = createInsertSchema(workshopRegistrations).omit({ id: true, registrationDate: true });\n\n// Slide Types\nexport type InsertSlide = z.infer<typeof insertSlideSchema>;\nexport type Slide = typeof slides.$inferSelect;\n\n// Quick Access Types\nexport type InsertQuickAccessItem = z.infer<typeof insertQuickAccessItemSchema>;\nexport type QuickAccessItem = typeof quickAccessItems.$inferSelect;\n\n// Workshop Registration Types\nexport const insertWorkshopRegistrationSchema = createInsertSchema(workshopRegistrations).omit({ id: true, registeredAt: true });\nexport type InsertWorkshopRegistration = z.infer<typeof insertWorkshopRegistrationSchema>;\nexport type WorkshopRegistration = typeof workshopRegistrations.$inferSelect;\n\n// User Course Access Table\nexport const userCourseAccess = pgTable(\"user_course_access\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull(),\n  courseId: integer(\"course_id\").notNull(),\n  accessType: text(\"access_type\").notNull(), // purchased, granted, trial\n  purchaseDate: timestamp(\"purchase_date\").defaultNow(),\n  expiryDate: timestamp(\"expiry_date\"),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const insertUserCourseAccessSchema = createInsertSchema(userCourseAccess).omit({ id: true, purchaseDate: true });\nexport type InsertUserCourseAccess = z.infer<typeof insertUserCourseAccessSchema>;\nexport type UserCourseAccess = typeof userCourseAccess.$inferSelect;","size_bytes":20104},"shared/schema-backup.ts":{"content":"// Backup before fixing duplicates","size_bytes":34},"shared/schema.ts":{"content":"import { sqliteTable, text, integer, blob } from \"drizzle-orm/sqlite-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table.\n// (IMPORTANT) This table is mandatory for Replit Auth, don't drop it.\nexport const sessions = sqliteTable(\"sessions\", {\n  sid: text(\"sid\").primaryKey(),\n  sess: text(\"sess\").notNull(),\n  expire: integer(\"expire\").notNull(),\n});\n\nexport const users = sqliteTable(\"users\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  name: text(\"name\"),\n  email: text(\"email\").unique(),\n  progress: integer(\"progress\").default(0),\n  membershipType: text(\"membership_type\").default(\"Basic\"),\n  role: text(\"role\").default(\"user\"),\n  subscriptionStatus: text(\"subscription_status\").default(\"free\"),\n  subscriptionExpiry: integer(\"subscription_expiry\"),\n});\n\nexport const courses = sqliteTable(\"courses\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  progress: integer(\"progress\").default(0),\n  totalModules: integer(\"total_modules\").default(0),\n  completedModules: integer(\"completed_modules\").default(0),\n  category: text(\"category\"),\n  level: text(\"level\"),\n  isNew: integer(\"is_new\", { mode: \"boolean\" }).default(false),\n  isPopular: integer(\"is_popular\", { mode: \"boolean\" }).default(false),\n  accessLevel: text(\"access_level\").default(\"free\"), // free, premium, vip\n  price: integer(\"price\").default(0), // price in tomans\n  isLocked: integer(\"is_locked\", { mode: \"boolean\" }).default(false),\n  // Content Protection Settings\n  allowDownload: integer(\"allow_download\", { mode: \"boolean\" }).default(true),\n  allowScreenshot: integer(\"allow_screenshot\", { mode: \"boolean\" }).default(true),\n  allowCopy: integer(\"allow_copy\", { mode: \"boolean\" }).default(true),\n  allowPrint: integer(\"allow_print\", { mode: \"boolean\" }).default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const modules = sqliteTable(\"modules\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  courseId: integer(\"course_id\").notNull(),\n  title: text(\"title\").notNull(),\n  duration: text(\"duration\"),\n  type: text(\"type\").notNull(), // video, pdf, etc.\n  contentUrl: text(\"content_url\"),\n  isLocked: integer(\"is_locked\", { mode: \"boolean\" }).default(false),\n  order: integer(\"order\").notNull(),\n});\n\nexport const projects = sqliteTable(\"projects\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  type: text(\"type\").default(\"project\"), // \"project\" or \"magazine\"\n  dueDate: text(\"due_date\"),\n  pages: integer(\"pages\"),\n  contentUrl: text(\"content_url\"),\n  isLocked: integer(\"is_locked\", { mode: \"boolean\" }).default(false),\n  difficulty: text(\"difficulty\"),\n  estimatedHours: integer(\"estimated_hours\"),\n  // Content Protection Settings\n  allowDownload: integer(\"allow_download\", { mode: \"boolean\" }).default(true),\n  allowScreenshot: integer(\"allow_screenshot\", { mode: \"boolean\" }).default(true),\n  allowCopy: integer(\"allow_copy\", { mode: \"boolean\" }).default(true),\n  allowPrint: integer(\"allow_print\", { mode: \"boolean\" }).default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const documentCategories = sqliteTable(\"document_categories\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  parentId: integer(\"parent_id\"),\n  order: integer(\"order\").default(0),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\nexport const documentTags = sqliteTable(\"document_tags\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  color: text(\"color\").default(\"#6B7280\"),\n  createdAt: integer(\"created_at\").default(Date.now()),\n});\n\nexport const documents = sqliteTable(\"documents\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  content: text(\"content\"),\n  excerpt: text(\"excerpt\"),\n  author: text(\"author\"),\n  featuredImage: text(\"featured_image\"),\n  fileName: text(\"file_name\"),\n  fileUrl: text(\"file_url\"),\n  fileType: text(\"file_type\"),\n  fileSize: integer(\"file_size\"),\n  totalPages: integer(\"total_pages\"),\n  category: text(\"category\").default(\"general\"), // general, agriculture, technology, education, research, news\n  tags: text(\"tags\"), // Array of tags\n  status: text(\"status\").default(\"published\"), // published, draft, private, pending\n  allowDownload: integer(\"allow_download\", { mode: \"boolean\" }).default(true),\n  allowComments: integer(\"allow_comments\", { mode: \"boolean\" }).default(true),\n  downloadCount: integer(\"download_count\").default(0),\n  viewCount: integer(\"view_count\").default(0),\n  isSticky: integer(\"is_sticky\", { mode: \"boolean\" }).default(false),\n  publishedAt: integer(\"published_at\"),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n  // SEO Fields\n  seoTitle: text(\"seo_title\"),\n  seoDescription: text(\"seo_description\"),\n  customFields: text(\"custom_fields\"),\n  // Enhanced Content Protection Settings\n  allowScreenshot: integer(\"allow_screenshot\", { mode: \"boolean\" }).default(true),\n  allowCopy: integer(\"allow_copy\", { mode: \"boolean\" }).default(true),\n  allowPrint: integer(\"allow_print\", { mode: \"boolean\" }).default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const documentTagRelations = sqliteTable(\"document_tag_relations\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  documentId: integer(\"document_id\").notNull(),\n  tagId: integer(\"tag_id\").notNull(),\n  createdAt: integer(\"created_at\").default(Date.now()),\n});\n\nexport const mediaContent = sqliteTable(\"media_content\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  contentUrl: text(\"content_url\"),\n  duration: text(\"duration\"),\n  instructorName: text(\"instructor_name\"),\n  instructorTitle: text(\"instructor_title\"),\n  instructorAvatar: text(\"instructor_avatar\"),\n});\n\n// مدل‌های داده برای مجلات و مقالات\nexport const magazines = sqliteTable(\"magazines\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  coverImageUrl: text(\"cover_image_url\"),\n  issueNumber: integer(\"issue_number\"),\n  publishDate: text(\"publish_date\"),\n  season: text(\"season\"),\n  year: integer(\"year\"),\n  totalPages: integer(\"total_pages\").default(0),\n  pdfUrl: text(\"pdf_url\"),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n  // Content Protection Settings\n  allowDownload: integer(\"allow_download\", { mode: \"boolean\" }).default(true),\n  allowScreenshot: integer(\"allow_screenshot\", { mode: \"boolean\" }).default(true),\n  allowCopy: integer(\"allow_copy\", { mode: \"boolean\" }).default(true),\n  allowPrint: integer(\"allow_print\", { mode: \"boolean\" }).default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const articles = sqliteTable(\"articles\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  author: text(\"author\"),\n  summary: text(\"summary\"),\n  publishDate: text(\"publish_date\"),\n  content: text(\"content\"),\n  featuredImageUrl: text(\"featured_image_url\"),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  readTime: integer(\"read_time\").default(0),\n  magazineId: integer(\"magazine_id\").notNull(),\n  pdfUrl: text(\"pdf_url\"),\n  order: integer(\"order\").default(0),\n  isPublished: integer(\"is_published\", { mode: \"boolean\" }).default(false),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\nexport const articleContents = sqliteTable(\"article_contents\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  articleId: integer(\"article_id\").notNull(),\n  contentType: text(\"content_type\").notNull(), // text, image, video\n  content: text(\"content\").notNull(),\n  caption: text(\"caption\"),\n  order: integer(\"order\").notNull(),\n  style: text(\"style\"), // برای ذخیره استایل‌های مربوط به محتوا\n  createdAt: integer(\"created_at\").default(Date.now()),\n});\n\n// مدل‌های نوشته‌ها (مشابه وردپرس)\nexport const posts = sqliteTable(\"posts\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  content: text(\"content\").notNull(), // HTML content\n  excerpt: text(\"excerpt\"), // خلاصه نوشته\n  authorId: integer(\"author_id\").notNull(),\n  authorName: text(\"author_name\").notNull(),\n  status: text(\"status\").notNull().default(\"draft\"), // draft, published, scheduled\n  visibility: text(\"visibility\").default(\"public\"), // public, private, password\n  featuredImage: text(\"featured_image\"),\n  categories: text(\"categories\"), // دسته‌بندی‌ها\n  tags: text(\"tags\"), // برچسب‌ها\n  publishedAt: integer(\"published_at\"),\n  scheduledAt: integer(\"scheduled_at\"), // برای نوشته‌های زمان‌بندی شده\n  viewCount: integer(\"view_count\").default(0),\n  likesCount: integer(\"likes_count\").default(0),\n  seoTitle: text(\"seo_title\"),\n  seoDescription: text(\"seo_description\"),\n  allowComments: integer(\"allow_comments\", { mode: \"boolean\" }).default(true),\n  isPinned: integer(\"is_pinned\", { mode: \"boolean\" }).default(false),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\n// جدول رسانه برای کتابخانه رسانه مثل وردپرس\nexport const mediaLibrary = sqliteTable(\"media_library\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  filename: text(\"filename\").notNull(),\n  originalName: text(\"original_name\").notNull(),\n  mimeType: text(\"mime_type\").notNull(),\n  fileSize: integer(\"file_size\").notNull(), // اندازه فایل به بایت\n  width: integer(\"width\"), // برای تصاویر\n  height: integer(\"height\"), // برای تصاویر\n  url: text(\"url\").notNull(),\n  altText: text(\"alt_text\"), // متن جایگزین برای تصاویر\n  caption: text(\"caption\"),\n  description: text(\"description\"),\n  uploadedBy: integer(\"uploaded_by\").notNull(),\n  uploadedAt: integer(\"uploaded_at\").default(Date.now()),\n});\n\n// مدل‌های داده‌ برای کارگاه‌های آموزشی\nexport const workshops = sqliteTable(\"workshops\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  posterUrl: text(\"poster_url\"),\n  eventDate: text(\"event_date\"),\n  location: text(\"location\"),\n  instructor: text(\"instructor\"),\n  duration: text(\"duration\"),\n  capacity: integer(\"capacity\"),\n  level: text(\"level\"), // مبتدی، متوسط، پیشرفته\n  category: text(\"category\"),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  registrationOpen: integer(\"registration_open\", { mode: \"boolean\" }).default(true),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n  // Content Protection Settings\n  allowDownload: integer(\"allow_download\", { mode: \"boolean\" }).default(true),\n  allowScreenshot: integer(\"allow_screenshot\", { mode: \"boolean\" }).default(true),\n  allowCopy: integer(\"allow_copy\", { mode: \"boolean\" }).default(true),\n  allowPrint: integer(\"allow_print\", { mode: \"boolean\" }).default(true),\n  watermarkText: text(\"watermark_text\"),\n  protectionLevel: text(\"protection_level\").default(\"none\"), // none, basic, strict\n});\n\nexport const workshopSections = sqliteTable(\"workshop_sections\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  workshopId: integer(\"workshop_id\").notNull(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  content: text(\"content\"),\n  videoUrl: text(\"video_url\"),\n  presentationUrl: text(\"presentation_url\"),\n  documentUrl: text(\"document_url\"),\n  order: integer(\"order\").notNull(),\n  isLocked: integer(\"is_locked\", { mode: \"boolean\" }).default(false),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\nexport const workshopContents = sqliteTable(\"workshop_contents\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  workshopId: integer(\"workshop_id\").notNull(),\n  contentType: text(\"content_type\").notNull(), // text, image, video, presentation\n  title: text(\"title\"),\n  content: text(\"content\").notNull(),\n  order: integer(\"order\").notNull(),\n  createdAt: integer(\"created_at\").default(Date.now()),\n});\n\n// مدل‌های داده‌ برای وبینارهای آموزشی\nexport const webinars = sqliteTable(\"webinars\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  posterUrl: text(\"poster_url\"),\n  eventDate: text(\"event_date\"),\n  instructor: text(\"instructor\"),\n  duration: text(\"duration\"),\n  level: text(\"level\"), // مبتدی، متوسط، پیشرفته\n  category: text(\"category\"),\n  price: integer(\"price\").default(0),\n  maxParticipants: integer(\"max_participants\").default(0),\n  imageUrl: text(\"image_url\"),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\nexport const webinarSections = sqliteTable(\"webinar_sections\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  webinarId: integer(\"webinar_id\").notNull(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  content: text(\"content\"),\n  videoUrl: text(\"video_url\"),\n  presentationUrl: text(\"presentation_url\"),\n  documentUrl: text(\"document_url\"),\n  order: integer(\"order\").notNull(),\n  isLocked: integer(\"is_locked\", { mode: \"boolean\" }).default(false),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\n\n\n\n// Workshop registrations table\nexport const workshopRegistrations = sqliteTable(\"workshop_registrations\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  workshopId: integer(\"workshop_id\").notNull(),\n  userEmail: text(\"user_email\").notNull(),\n  userName: text(\"user_name\").notNull(),\n  userPhone: text(\"user_phone\"),\n  status: text(\"status\").notNull().default(\"pending\"), // pending, confirmed, cancelled\n  registrationDate: integer(\"registration_date\").default(Date.now()),\n  notes: text(\"notes\"),\n});\n\n// Slides table for homepage carousel\nexport const slides = sqliteTable(\"slides\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  imageUrl: text(\"image_url\"),\n  buttonText: text(\"button_text\"),\n  buttonUrl: text(\"button_url\"),\n  secondButtonText: text(\"second_button_text\"),\n  secondButtonUrl: text(\"second_button_url\"),\n  showButtons: integer(\"show_buttons\", { mode: \"boolean\" }).default(true),\n  showIcon: integer(\"show_icon\", { mode: \"boolean\" }).default(true),\n  iconName: text(\"icon_name\").default(\"Star\"),\n  backgroundColor: text(\"background_color\").default(\"hsl(270, 60%, 95%)\"),\n  iconColor: text(\"icon_color\").default(\"hsl(270, 70%, 60%)\"),\n  linkUrl: text(\"link_url\"),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  order: integer(\"order\").default(0),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\n// Quick Access Menu Items\nexport const quickAccessItems = sqliteTable(\"quick_access_items\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  iconUrl: text(\"icon_url\"), // URL to custom icon/image\n  iconSvg: text(\"icon_svg\"), // SVG code for icon\n  iconType: text(\"icon_type\").notNull().default(\"svg\"), // \"svg\", \"image\", or \"lucide\"\n  iconName: text(\"icon_name\"), // Lucide icon name if using lucide\n  backgroundColor: text(\"background_color\").default(\"hsl(270, 60%, 95%)\"),\n  iconColor: text(\"icon_color\").default(\"hsl(270, 70%, 60%)\"),\n  linkUrl: text(\"link_url\"),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  order: integer(\"order\").default(0),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\n// Educational Videos\nexport const educationalVideos = sqliteTable(\"educational_videos\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  videoUrl: text(\"video_url\"),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  duration: text(\"duration\"), // e.g., \"10 دقیقه\"\n  category: text(\"category\"), // e.g., \"برنامه‌نویسی\", \"کشاورزی\"\n  level: text(\"level\").default(\"beginner\"), // beginner, intermediate, advanced\n  tags: text(\"tags\"), // Array of tags\n  instructor: text(\"instructor\"), // Instructor name\n  viewsCount: integer(\"views_count\").default(0),\n  likesCount: integer(\"likes_count\").default(0),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  isPublic: integer(\"is_public\", { mode: \"boolean\" }).default(true),\n  requiresSubscription: integer(\"requires_subscription\", { mode: \"boolean\" }).default(false),\n  orderPosition: integer(\"order_position\").default(0),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\n// About Us Page\nexport const aboutUs = sqliteTable(\"about_us\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  mainContent: text(\"main_content\").notNull(),\n  mission: text(\"mission\"),\n  vision: text(\"vision\"),\n  values: text(\"values\"),\n  mainImageUrl: text(\"main_image_url\"),\n  foundingYear: text(\"founding_year\"),\n  companySize: text(\"company_size\"),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\n// Subsidiary Companies\nexport const subsidiaryCompanies = sqliteTable(\"subsidiary_companies\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  name: text(\"name\").notNull(),\n  description: text(\"description\"),\n  logoUrl: text(\"logo_url\"),\n  website: text(\"website\"),\n  industry: text(\"industry\"),\n  establishedYear: text(\"established_year\"),\n  location: text(\"location\"),\n  order: integer(\"order\").default(0),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\n// Contact Us Page\nexport const contactUs = sqliteTable(\"contact_us\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  address: text(\"address\"),\n  phone: text(\"phone\"),\n  email: text(\"email\"),\n  workingHours: text(\"working_hours\"),\n  mapUrl: text(\"map_url\"), // Google Maps embed URL\n  mapLatitude: text(\"map_latitude\"),\n  mapLongitude: text(\"map_longitude\"),\n  socialLinks: text(\"social_links\"), // {instagram: \"\", telegram: \"\", linkedin: \"\"}\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n  createdAt: integer(\"created_at\").default(Date.now()),\n  updatedAt: integer(\"updated_at\").default(Date.now()),\n});\n\n// Insert Schemas\nexport const insertUserSchema = createInsertSchema(users).omit({ id: true });\nexport const insertCourseSchema = createInsertSchema(courses).omit({ id: true });\nexport const insertModuleSchema = createInsertSchema(modules).omit({ id: true });\nexport const insertProjectSchema = createInsertSchema(projects).omit({ id: true });\nexport const insertDocumentCategorySchema = createInsertSchema(documentCategories).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertDocumentTagSchema = createInsertSchema(documentTags).omit({ id: true, createdAt: true });\nexport const insertDocumentSchema = createInsertSchema(documents).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertDocumentTagRelationSchema = createInsertSchema(documentTagRelations).omit({ id: true, createdAt: true });\nexport const insertMediaContentSchema = createInsertSchema(mediaContent).omit({ id: true });\nexport const insertMagazineSchema = createInsertSchema(magazines).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertArticleSchema = createInsertSchema(articles).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertArticleContentSchema = createInsertSchema(articleContents).omit({ id: true, createdAt: true });\nexport const insertWorkshopSchema = createInsertSchema(workshops).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertWorkshopSectionSchema = createInsertSchema(workshopSections).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertWorkshopContentSchema = createInsertSchema(workshopContents).omit({ id: true, createdAt: true });\nexport const insertWebinarSchema = createInsertSchema(webinars).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertWebinarSectionSchema = createInsertSchema(webinarSections).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertPostSchema = createInsertSchema(posts).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertMediaLibrarySchema = createInsertSchema(mediaLibrary).omit({ id: true, uploadedAt: true });\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport type InsertCourse = z.infer<typeof insertCourseSchema>;\nexport type Course = typeof courses.$inferSelect;\n\nexport type InsertModule = z.infer<typeof insertModuleSchema>;\nexport type Module = typeof modules.$inferSelect;\n\nexport type InsertProject = z.infer<typeof insertProjectSchema>;\nexport type Project = typeof projects.$inferSelect;\n\nexport type InsertDocumentCategory = z.infer<typeof insertDocumentCategorySchema>;\nexport type DocumentCategory = typeof documentCategories.$inferSelect;\n\nexport type InsertDocumentTag = z.infer<typeof insertDocumentTagSchema>;\nexport type DocumentTag = typeof documentTags.$inferSelect;\n\nexport type InsertDocument = z.infer<typeof insertDocumentSchema>;\nexport type Document = typeof documents.$inferSelect;\n\nexport type InsertDocumentTagRelation = z.infer<typeof insertDocumentTagRelationSchema>;\nexport type DocumentTagRelation = typeof documentTagRelations.$inferSelect;\n\nexport type InsertMediaContent = z.infer<typeof insertMediaContentSchema>;\nexport type MediaContent = typeof mediaContent.$inferSelect;\n\nexport type InsertMagazine = z.infer<typeof insertMagazineSchema>;\nexport type Magazine = typeof magazines.$inferSelect;\n\nexport type InsertArticle = z.infer<typeof insertArticleSchema>;\nexport type Article = typeof articles.$inferSelect;\n\nexport type InsertArticleContent = z.infer<typeof insertArticleContentSchema>;\nexport type ArticleContent = typeof articleContents.$inferSelect;\n\nexport type InsertWorkshop = z.infer<typeof insertWorkshopSchema>;\nexport type Workshop = typeof workshops.$inferSelect;\n\nexport type InsertWorkshopSection = z.infer<typeof insertWorkshopSectionSchema>;\nexport type WorkshopSection = typeof workshopSections.$inferSelect;\n\nexport type InsertWorkshopContent = z.infer<typeof insertWorkshopContentSchema>;\nexport type WorkshopContent = typeof workshopContents.$inferSelect;\n\nexport type InsertWebinar = z.infer<typeof insertWebinarSchema>;\nexport type Webinar = typeof webinars.$inferSelect;\n\nexport type InsertWebinarSection = z.infer<typeof insertWebinarSectionSchema>;\nexport type WebinarSection = typeof webinarSections.$inferSelect;\n\nexport type InsertPost = z.infer<typeof insertPostSchema>;\nexport type Post = typeof posts.$inferSelect;\n\nexport type InsertMediaLibrary = z.infer<typeof insertMediaLibrarySchema>;\nexport type MediaLibrary = typeof mediaLibrary.$inferSelect;\n\nexport const insertSlideSchema = createInsertSchema(slides).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertQuickAccessItemSchema = createInsertSchema(quickAccessItems).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertWorkshopRegistrationSchema = createInsertSchema(workshopRegistrations).omit({ id: true, registrationDate: true });\nexport const insertEducationalVideoSchema = createInsertSchema(educationalVideos).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertAboutUsSchema = createInsertSchema(aboutUs).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertSubsidiaryCompanySchema = createInsertSchema(subsidiaryCompanies).omit({ id: true, createdAt: true, updatedAt: true });\nexport const insertContactUsSchema = createInsertSchema(contactUs).omit({ id: true, createdAt: true, updatedAt: true });\n\n// Slide Types\nexport type InsertSlide = z.infer<typeof insertSlideSchema>;\nexport type Slide = typeof slides.$inferSelect;\n\n// Quick Access Types\nexport type InsertQuickAccessItem = z.infer<typeof insertQuickAccessItemSchema>;\nexport type QuickAccessItem = typeof quickAccessItems.$inferSelect;\n\n// Workshop Registration Types\nexport type InsertWorkshopRegistration = z.infer<typeof insertWorkshopRegistrationSchema>;\nexport type WorkshopRegistration = typeof workshopRegistrations.$inferSelect;\n\n// Educational Video Types\nexport type InsertEducationalVideo = z.infer<typeof insertEducationalVideoSchema>;\nexport type EducationalVideo = typeof educationalVideos.$inferSelect;\n\n// About Us Types\nexport type InsertAboutUs = z.infer<typeof insertAboutUsSchema>;\nexport type AboutUs = typeof aboutUs.$inferSelect;\n\n// Subsidiary Company Types\nexport type InsertSubsidiaryCompany = z.infer<typeof insertSubsidiaryCompanySchema>;\nexport type SubsidiaryCompany = typeof subsidiaryCompanies.$inferSelect;\n\n// Contact Us Types\nexport type InsertContactUs = z.infer<typeof insertContactUsSchema>;\nexport type ContactUs = typeof contactUs.$inferSelect;\n\n\n// User Course Access Table\nexport const userCourseAccess = sqliteTable(\"user_course_access\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  userId: integer(\"user_id\").notNull(),\n  courseId: integer(\"course_id\").notNull(),\n  accessType: text(\"access_type\").notNull(), // purchased, granted, trial\n  purchaseDate: integer(\"purchase_date\").default(Date.now()),\n  expiryDate: integer(\"expiry_date\"),\n  isActive: integer(\"is_active\", { mode: \"boolean\" }).default(true),\n});\n\nexport const insertUserCourseAccessSchema = createInsertSchema(userCourseAccess).omit({ id: true, purchaseDate: true });\nexport type InsertUserCourseAccess = z.infer<typeof insertUserCourseAccessSchema>;\nexport type UserCourseAccess = typeof userCourseAccess.$inferSelect;","size_bytes":27692},"client/public/sw.js":{"content":"const CACHE_NAME = 'pistac-v1';\nconst urlsToCache = [\n  '/',\n  '/courses',\n  '/projects', \n  '/library',\n  '/magazine',\n  '/manifest.json'\n];\n\n// Install event\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then((cache) => {\n        return cache.addAll(urlsToCache);\n      })\n  );\n});\n\n// Fetch event\nself.addEventListener('fetch', (event) => {\n  event.respondWith(\n    caches.match(event.request)\n      .then((response) => {\n        // Return cached version or fetch from network\n        return response || fetch(event.request);\n      })\n  );\n});\n\n// Activate event\nself.addEventListener('activate', (event) => {\n  const cacheWhitelist = [CACHE_NAME];\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheWhitelist.indexOf(cacheName) === -1) {\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n});","size_bytes":982},"client/src/App.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { Router } from 'wouter';\nimport HomePage from './pages/home-simple';\nimport CoursesPage from './pages/courses-simple';\nimport ProjectsPage from './pages/projects-simple';\nimport WorkshopsPage from './pages/workshops-simple';\nimport LibraryPage from './pages/library-simple';\nimport ProfilePage from './pages/profile-simple';\nimport FavoritesPage from './pages/favorites';\nimport LoginPage from './pages/login';\nimport RegisterPage from './pages/register';\nimport AdminPage from './pages/admin';\nimport AdminSimple from './pages/admin-simple';\nimport ProtectedContentDemo from './pages/protected-content';\nimport WebinarDetail from './pages/webinar-detail';\nimport MagazineDetailPage from './pages/magazine-detail';\nimport MediaLibraryPage from './pages/media-library';\nimport MagazinesPage from './pages/magazines';\nimport WebinarsPage from './pages/webinars';\nimport VideosPage from './pages/videos';\nimport AboutUsPage from './pages/about-us';\nimport ContactUsPage from './pages/contact-us';\nimport Header from './components/layout/Header';\nimport { AuthGuard } from './components/AuthGuard';\nimport { useAuth } from './hooks/useAuth';\nimport { SearchModal } from './components/SearchModal';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: async ({ queryKey }) => {\n        const response = await fetch(queryKey[0] as string);\n        if (!response.ok) {\n          throw new Error(`${response.status}: ${response.statusText}`);\n        }\n        return response.json();\n      },\n    },\n  },\n});\n\ninterface NavButtonProps {\n  id: string;\n  icon: string;\n  label: string;\n  isActive: boolean;\n  onClick: (id: string) => void;\n}\n\nfunction App() {\n  const { user, isAuthenticated } = useAuth();\n  const [activeTab, setActiveTab] = useState('home');\n  const [selectedWebinarId, setSelectedWebinarId] = useState<number | null>(null);\n  const [selectedMagazineId, setSelectedMagazineId] = useState<number | null>(null);\n  const [showCategoriesMenu, setShowCategoriesMenu] = useState(false);\n  const [showSearchModal, setShowSearchModal] = useState(false);\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      if (event.data.type === 'OPEN_ADMIN' || event.data.type === 'SHOW_ADMIN_PANEL') {\n        setActiveTab('admin');\n      } else if (event.data.type === 'SHOW_HOME') {\n        setActiveTab('home');\n      } else if (event.data.type === 'SWITCH_TAB') {\n        setActiveTab(event.data.tab);\n        setSelectedWebinarId(null);\n        setSelectedMagazineId(null);\n      } else if (event.data.type === 'OPEN_WEBINAR') {\n        setSelectedWebinarId(event.data.webinarId);\n        setActiveTab('webinar');\n      } else if (event.data.type === 'OPEN_MAGAZINE') {\n        setSelectedMagazineId(event.data.magazineId);\n        setActiveTab('magazine');\n      } else if (event.data.type === 'NAVIGATE_TO_ADMIN') {\n        setActiveTab('admin');\n        setTimeout(() => {\n          window.postMessage({ type: 'ADMIN_TAB_SWITCH', tab: event.data.tab }, '*');\n        }, 100);\n      } else if (event.data.type === 'SHOW_SEARCH') {\n        setShowSearchModal(true);\n      } else if (event.data.type === 'SHOW_PROFILE') {\n        setActiveTab('profile');\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, []);\n\n  const NavButton = ({ id, icon, label, isActive, onClick }: NavButtonProps) => {\n    const renderIcon = () => {\n      switch(id) {\n        case 'home':\n          return (\n            <svg className=\"w-5 h-5 mb-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"/>\n            </svg>\n          );\n        case 'favorites':\n          return (\n            <svg className=\"w-5 h-5 mb-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clipRule=\"evenodd\"/>\n            </svg>\n          );\n        case 'profile':\n          return (\n            <svg className=\"w-5 h-5 mb-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\"/>\n            </svg>\n          );\n        default:\n          return <span className=\"text-xl mb-1\">{icon}</span>;\n      }\n    };\n\n    return (\n      <button\n        onClick={() => onClick(id)}\n        className={`flex flex-col items-center py-2 px-4 transition-colors ${\n          isActive ? 'text-green-600' : 'text-gray-400 hover:text-gray-600'\n        }`}\n      >\n        {renderIcon()}\n        <span className=\"text-xs font-medium\">{label}</span>\n      </button>\n    );\n  };\n\n  const renderCurrentPage = () => {\n    if (isAuthenticated && user?.role === 'admin' && activeTab !== 'admin') {\n      setActiveTab('admin');\n      return <AdminPage />;\n    }\n\n    switch (activeTab) {\n      case 'home': \n        return <HomePage />;\n      case 'courses': \n        return <AuthGuard><CoursesPage /></AuthGuard>;\n      case 'projects': \n        return <AuthGuard><ProjectsPage /></AuthGuard>;\n      case 'workshops': \n        return <AuthGuard><WorkshopsPage /></AuthGuard>;\n      case 'library': \n        return <AuthGuard><LibraryPage /></AuthGuard>;\n      case 'profile': \n        return <ProfilePage />;\n      case 'favorites': \n        return <AuthGuard><FavoritesPage /></AuthGuard>;\n      case 'admin': \n        return <AdminPage />;\n      case 'media-library': \n        return <AuthGuard><MediaLibraryPage /></AuthGuard>;\n      case 'webinar': \n        return selectedWebinarId ? <AuthGuard><WebinarDetail webinarId={selectedWebinarId} /></AuthGuard> : <HomePage />;\n      case 'magazine': \n        return selectedMagazineId ? <AuthGuard><MagazineDetailPage magazineId={selectedMagazineId} /></AuthGuard> : <HomePage />;\n      case 'magazines': \n        return <AuthGuard><MagazinesPage /></AuthGuard>;\n      case 'webinars': \n        return <AuthGuard><WebinarsPage /></AuthGuard>;\n      case 'videos': \n        return <AuthGuard><VideosPage /></AuthGuard>;\n      case 'protected': \n        return <AuthGuard><ProtectedContentDemo /></AuthGuard>;\n      case 'register': \n        return <RegisterPage />;\n      case 'about-us': \n        return <AboutUsPage />;\n      case 'contact-us': \n        return <ContactUsPage />;\n      default: \n        return <HomePage />;\n    }\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-green-50\" dir=\"rtl\">\n          {activeTab !== 'admin' && activeTab !== 'webinar' && activeTab !== 'magazine' && activeTab !== 'about-us' && activeTab !== 'contact-us' && <Header />}\n          <div className={`${activeTab !== 'admin' && activeTab !== 'webinar' && activeTab !== 'magazine' && activeTab !== 'about-us' && activeTab !== 'contact-us' ? 'container mx-auto px-4 py-6 pb-24 max-w-7xl pt-20' : ''}`}>\n            {renderCurrentPage()}\n          </div>\n\n          {/* Bottom Navigation */}\n          {activeTab !== 'admin' && activeTab !== 'webinar' && activeTab !== 'magazine' && activeTab !== 'about-us' && activeTab !== 'contact-us' && (\n            <div className=\"fixed bottom-0 left-0 right-0 bg-white/95 backdrop-blur-lg border-t border-gray-200 shadow-2xl\">\n              {/* Categories Menu */}\n              {showCategoriesMenu && (\n                <div className=\"bg-white border-t border-gray-200 p-4\">\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <button\n                      onClick={() => {\n                        setActiveTab('workshops');\n                        setShowCategoriesMenu(false);\n                      }}\n                      className=\"flex flex-col items-center p-3 rounded-lg hover:bg-green-50 transition-colors\"\n                    >\n                      <svg className=\"w-8 h-8 mb-2 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path d=\"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\"/>\n                      </svg>\n                      <span className=\"text-sm font-medium text-gray-700\">کارگاه آموزشی</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        setActiveTab('webinars');\n                        setShowCategoriesMenu(false);\n                      }}\n                      className=\"flex flex-col items-center p-3 rounded-lg hover:bg-green-50 transition-colors\"\n                    >\n                      <svg className=\"w-8 h-8 mb-2 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path d=\"M2 6a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z\"/>\n                      </svg>\n                      <span className=\"text-sm font-medium text-gray-700\">وبینار آموزشی</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        setActiveTab('magazines');\n                        setShowCategoriesMenu(false);\n                      }}\n                      className=\"flex flex-col items-center p-3 rounded-lg hover:bg-green-50 transition-colors\"\n                    >\n                      <svg className=\"w-8 h-8 mb-2 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z\" clipRule=\"evenodd\"/>\n                        <path d=\"M15 7h1a2 2 0 012 2v5.5a1.5 1.5 0 01-3 0V7z\"/>\n                      </svg>\n                      <span className=\"text-sm font-medium text-gray-700\">فصلنامه رویش سبز</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        setActiveTab('library');\n                        setShowCategoriesMenu(false);\n                      }}\n                      className=\"flex flex-col items-center p-3 rounded-lg hover:bg-green-50 transition-colors\"\n                    >\n                      <svg className=\"w-8 h-8 mb-2 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path d=\"M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V4.804z\"/>\n                      </svg>\n                      <span className=\"text-sm font-medium text-gray-700\">آرشیو پیستاط</span>\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex justify-around py-2\">\n                <NavButton\n                  id=\"home\"\n                  icon=\"🏠\"\n                  label=\"خانه\"\n                  isActive={activeTab === 'home'}\n                  onClick={setActiveTab}\n                />\n                <NavButton\n                  id=\"favorites\"\n                  icon=\"❤️\"\n                  label=\"علاقه‌مندی‌ها\"\n                  isActive={activeTab === 'favorites'}\n                  onClick={setActiveTab}\n                />\n                <button\n                  onClick={() => setShowCategoriesMenu(!showCategoriesMenu)}\n                  className={`flex flex-col items-center py-2 px-4 transition-colors ${\n                    showCategoriesMenu ? 'text-green-600' : 'text-gray-400 hover:text-gray-600'\n                  }`}\n                >\n                  <svg className=\"w-5 h-5 mb-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\"/>\n                  </svg>\n                  <span className=\"text-xs font-medium\">دسته‌بندی</span>\n                </button>\n                <NavButton\n                  id=\"profile\"\n                  icon=\"👤\"\n                  label=\"پروفایل\"\n                  isActive={activeTab === 'profile'}\n                  onClick={setActiveTab}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        <SearchModal \n          isOpen={showSearchModal} \n          onClose={() => setShowSearchModal(false)} \n        />\n      </Router>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","size_bytes":13423},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n--background: 0 0% 98%; /* #FAFAFA - پس‌زمینه کرم روشن */\n--foreground: 210 40% 15%; /* #1F2937 - متن اصلی تیره */\n--muted: 210 15% 95%; /* #F3F4F6 - پس‌زمینه کم‌رنگ */\n--muted-foreground: 210 20% 45%; /* #6B7280 - متن کم‌رنگ */\n--popover: 0 0% 100%;\n--popover-foreground: 210 40% 15%;\n--card: 0 0% 100%; /* #FFFFFF - پس‌زمینه کارت‌ها */\n--card-foreground: 210 40% 15%;\n--border: 210 20% 88%; /* #E5E7EB - حاشیه ملایم */\n--input: 210 20% 88%;\n--primary: 118 54% 40%; /* سبز اصلی پیستاط */\n--primary-foreground: 0 0% 100%;\n--secondary: 142 40% 95%; /* #ECFDF5 - سبز بسیار روشن */\n--secondary-foreground: 142 76% 25%;\n--accent: 118 54% 40%;\n--accent-foreground: 0 0% 100%;\n--destructive: 0 84% 60%;\n--destructive-foreground: 60 9% 98%;\n--ring: 118 54% 40%;\n--radius: 0.75rem;\n\n/* Custom colors from reference design */\n--green-light-bg: 118 45% 90%; /* خلفیه سبز روشن برای slider */\n--purple-light: 270 60% 95%; /* بنفش روشن */\n--purple-primary: 270 70% 60%; /* بنفش اصلی */\n--orange-light: 25 100% 92%; /* نارنجی روشن */\n--orange-primary: 25 85% 65%; /* نارنجی اصلی */\n--green-accent-light: 140 50% 92%; /* سبز تکمیلی روشن */\n--green-accent: 140 60% 50%; /* سبز تکمیلی */\n  }\n  .dark {\n      --background: 240 10% 3.9%;\n--foreground: 0 0% 98%;\n--muted: 240 3.7% 15.9%;\n--muted-foreground: 240 5% 64.9%;\n--popover: 240 10% 3.9%;\n--popover-foreground: 0 0% 98%;\n--card: 240 10% 3.9%;\n--card-foreground: 0 0% 98%;\n--border: 240 3.7% 15.9%;\n--input: 240 3.7% 15.9%;\n--primary: 118 54% 40%; /* سبز تیره لوگو پیستاط */\n--primary-foreground: 0 0% 100%;\n--secondary: 118 20% 15%; /* سبز تیره برای حالت شب */\n--secondary-foreground: 118 30% 85%;\n--accent: 118 54% 40%;\n--accent-foreground: 0 0% 100%;\n--destructive: 0 62.8% 30.6%;\n--destructive-foreground: 0 0% 98%;\n--ring: 240 4.9% 83.9%;\n--radius: 0.5rem;\n  }\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    direction: rtl;\n  }\n}\n\n@layer utilities {\n  /* راست‌چین کردن راحت‌تر اجزای مختلف */\n  .rtl {\n    direction: rtl;\n    text-align: right;\n  }\n  \n  .ltr {\n    direction: ltr;\n    text-align: left;\n  }\n  \n  /* تنظیمات برای چینش عناصر در محیط راست‌چین */\n  .margin-end {\n    margin-left: 0;\n    margin-right: auto;\n  }\n  \n  .margin-start {\n    margin-left: auto;\n    margin-right: 0;\n  }\n\n  /* مخفی کردن اسکرول بار */\n  .scrollbar-hide {\n    /* Firefox */\n    scrollbar-width: none;\n    /* Safari and Chrome */\n    -ms-overflow-style: none;\n  }\n  \n  .scrollbar-hide::-webkit-scrollbar {\n    display: none;\n  }\n}","size_bytes":2902},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      staleTime: 10 * 60 * 1000, // 10 minutes\n    },\n  },\n});\n\nconst root = document.getElementById(\"root\");\nif (root) {\n  createRoot(root).render(\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  );\n} else {\n  console.error(\"Root element not found\");\n}","size_bytes":654},"public/uploads/README.md":{"content":"# راهنمای آپلود فایل‌ها\n\n## فایل‌های آماده برای دمو:\n\n- `/uploads/logo.png` - لوگو سایت\n- `/uploads/demo-slide1.png` - اسلاید نمونه 1\n- `/uploads/demo-slide2.png` - اسلاید نمونه 2  \n- `/uploads/demo-webinar.png` - پوستر وبینار نمونه\n\n## نحوه استفاده:\n\n### 1. آپلود از طریق فایل HTML:\n- فایل `demo-uploader.html` را در مرورگر باز کنید\n- فایل‌هایتان را بکشید و رها کنید یا کلیک کنید\n- آدرس فایل‌ها را کپی کنید\n\n### 2. کپی مستقیم:\n- فایل‌هایتان را در پوشه `public/uploads` کپی کنید\n- آدرس: `/uploads/نام-فایل.jpg`\n\n### 3. استفاده در سایت:\n- در پنل مدیریت، هنگام اضافه کردن اسلاید یا وبینار\n- در فیلد آدرس تصویر، آدرس فایل را وارد کنید\n- مثال: `/uploads/demo-slide1.png`\n\n## مثال‌های آماده:\n\n```\nاسلاید 1: /uploads/demo-slide1.png\nاسلاید 2: /uploads/demo-slide2.png\nوبینار: /uploads/demo-webinar.png\nلوگو: /uploads/logo.png\n```","size_bytes":1189},"client/src/components/AuthGuard.tsx":{"content":"import { useAuth } from '@/hooks/useAuth';\nimport { useState } from 'react';\nimport { LoginModal } from './LoginModal';\nimport { LogIn } from 'lucide-react';\n\ninterface AuthGuardProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport function AuthGuard({ children, fallback }: AuthGuardProps) {\n  const { isAuthenticated, isLoading } = useAuth();\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [loginMessage, setLoginMessage] = useState(\"\");\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    const handleRestrictedAction = (actionName: string) => {\n      setLoginMessage(`برای ${actionName} باید وارد حساب کاربری خود شوید`);\n      setShowLoginModal(true);\n    };\n\n    return fallback || (\n      <div className=\"relative\">\n        <style>{`\n          .guest-restricted .btn-primary,\n          .guest-restricted button:not(.guest-allowed),\n          .guest-restricted .card-interactive {\n            position: relative;\n            overflow: hidden;\n          }\n          \n          .guest-restricted .btn-primary::after,\n          .guest-restricted button:not(.guest-allowed)::after,\n          .guest-restricted .card-interactive::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: rgba(0, 0, 0, 0.1);\n            z-index: 1;\n          }\n          \n          .guest-restricted .card-interactive:hover::after {\n            background: rgba(0, 0, 0, 0.2);\n          }\n        `}</style>\n        \n        <div className=\"guest-restricted\">\n          <div \n            onClick={(e) => {\n              const target = e.target as HTMLElement;\n              if (target.closest('button:not(.guest-allowed)') || \n                  target.closest('.btn-primary') || \n                  target.closest('.card-interactive')) {\n                e.preventDefault();\n                e.stopPropagation();\n                handleRestrictedAction(\"استفاده از این قابلیت\");\n              }\n            }}\n          >\n            {children}\n          </div>\n        </div>\n\n        {/* Guest Banner */}\n        <div className=\"fixed bottom-20 left-4 right-4 bg-gradient-to-r from-green-600 to-green-700 text-white p-4 rounded-lg shadow-lg z-40\" dir=\"rtl\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <LogIn className=\"w-6 h-6\" />\n              <div>\n                <p className=\"font-medium\">شما در حالت مهمان هستید</p>\n                <p className=\"text-sm text-green-100\">برای دسترسی کامل وارد شوید</p>\n              </div>\n            </div>\n            <button\n              onClick={() => setShowLoginModal(true)}\n              className=\"bg-white text-green-600 px-4 py-2 rounded-lg font-medium hover:bg-green-50 transition-colors guest-allowed\"\n            >\n              ورود\n            </button>\n          </div>\n        </div>\n\n        <LoginModal\n          isOpen={showLoginModal}\n          onClose={() => setShowLoginModal(false)}\n          message={loginMessage}\n        />\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}\n\nexport function GuestContent({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"relative\">\n      <div className=\"absolute inset-0 bg-gray-100 bg-opacity-50 backdrop-blur-sm z-10 flex items-center justify-center\">\n        <div className=\"text-center p-6 bg-white rounded-lg shadow-lg max-w-sm mx-4\" dir=\"rtl\">\n          <div className=\"mx-auto h-10 w-10 flex items-center justify-center rounded-full bg-blue-100 mb-3\">\n            <svg className=\"h-5 w-5 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n            کاربر مهمان\n          </h3>\n          <p className=\"text-sm text-gray-600 mb-4\">\n            برای دسترسی کامل به محتوا، لطفاً وارد شوید\n          </p>\n          <button\n            onClick={() => window.parent.postMessage({ type: 'SWITCH_TAB', tab: 'profile' }, '*')}\n            className=\"w-full bg-blue-600 text-white py-2 px-3 rounded-md hover:bg-blue-700 transition-colors text-sm\"\n          >\n            ورود\n          </button>\n        </div>\n      </div>\n      <div className=\"filter blur-sm pointer-events-none\">\n        {children}\n      </div>\n    </div>\n  );\n}","size_bytes":4913},"client/src/components/LoginModal.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { X } from \"lucide-react\";\n\ninterface LoginModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  message?: string;\n}\n\nexport function LoginModal({ isOpen, onClose, message }: LoginModalProps) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const { refetch } = useAuth();\n\n  const loginMutation = useMutation({\n    mutationFn: async (credentials: { username: string; password: string }) => {\n      const response = await apiRequest(\"/api/login\", {\n        method: \"POST\",\n        body: JSON.stringify(credentials),\n      });\n      return response;\n    },\n    onSuccess: () => {\n      refetch();\n      onClose();\n      setError(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n    },\n    onError: (error: any) => {\n      setError(error.message || \"خطا در ورود\");\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!username || !password) {\n      setError(\"لطفاً نام کاربری و رمز عبور را وارد کنید\");\n      return;\n    }\n    loginMutation.mutate({ username, password });\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\" dir=\"rtl\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-bold text-gray-900\">ورود به حساب کاربری</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        {message && (\n          <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-md\">\n            <p className=\"text-sm text-blue-800\">{message}</p>\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              نام کاربری\n            </label>\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n              placeholder=\"نام کاربری خود را وارد کنید\"\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              رمز عبور\n            </label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n              placeholder=\"رمز عبور خود را وارد کنید\"\n              required\n            />\n          </div>\n\n          {error && (\n            <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n              <p className=\"text-sm text-red-800\">{error}</p>\n            </div>\n          )}\n\n          <div className=\"flex gap-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"flex-1 px-4 py-2 text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50\"\n            >\n              انصراف\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loginMutation.isPending}\n              className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50\"\n            >\n              {loginMutation.isPending ? \"در حال ورود...\" : \"ورود\"}\n            </button>\n          </div>\n        </form>\n\n        <div className=\"mt-4 text-center\">\n          <p className=\"text-sm text-gray-600\">\n            حساب کاربری ندارید؟{\" \"}\n            <button\n              onClick={() => {\n                onClose();\n                window.parent.postMessage({ type: 'SWITCH_TAB', tab: 'register' }, '*');\n              }}\n              className=\"text-green-600 hover:text-green-700 font-medium\"\n            >\n              ثبت‌نام کنید\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4655},"client/src/components/SearchModal.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Search, X, BookOpen, Users, FileText, Video, Calendar } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\n\ninterface SearchModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\ninterface SearchResult {\n  id: number;\n  title: string;\n  description: string;\n  type: 'course' | 'project' | 'document' | 'workshop' | 'webinar' | 'video' | 'magazine';\n  url?: string;\n}\n\nexport function SearchModal({ isOpen, onClose }: SearchModalProps) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Fetch data for search\n  const { data: workshops } = useQuery<any[]>({\n    queryKey: ['/api/workshops'],\n    enabled: isOpen,\n  });\n\n  const { data: webinars } = useQuery<any[]>({\n    queryKey: ['/api/webinars'],\n    enabled: isOpen,\n  });\n\n  const { data: videos } = useQuery<any[]>({\n    queryKey: ['/api/educational-videos/active'],\n    enabled: isOpen,\n  });\n\n  const { data: documents } = useQuery<any[]>({\n    queryKey: ['/api/documents'],\n    enabled: isOpen,\n  });\n\n  const { data: magazines } = useQuery<any[]>({\n    queryKey: ['/api/magazines'],\n    enabled: isOpen,\n  });\n\n  useEffect(() => {\n    if (!searchTerm.trim()) {\n      setSearchResults([]);\n      return;\n    }\n\n    setIsSearching(true);\n\n    const allResults: SearchResult[] = [];\n\n    // Search workshops\n    workshops?.forEach(workshop => {\n      if (workshop.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          workshop.description?.toLowerCase().includes(searchTerm.toLowerCase())) {\n        allResults.push({\n          id: workshop.id,\n          title: workshop.title,\n          description: workshop.description || '',\n          type: 'workshop'\n        });\n      }\n    });\n\n    // Search webinars\n    webinars?.forEach(webinar => {\n      if (webinar.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          webinar.description?.toLowerCase().includes(searchTerm.toLowerCase())) {\n        allResults.push({\n          id: webinar.id,\n          title: webinar.title,\n          description: webinar.description || '',\n          type: 'webinar'\n        });\n      }\n    });\n\n    // Search videos\n    videos?.forEach(video => {\n      if (video.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          video.description?.toLowerCase().includes(searchTerm.toLowerCase())) {\n        allResults.push({\n          id: video.id,\n          title: video.title,\n          description: video.description || '',\n          type: 'video'\n        });\n      }\n    });\n\n    // Search documents\n    documents?.forEach(doc => {\n      if (doc.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          doc.description?.toLowerCase().includes(searchTerm.toLowerCase())) {\n        allResults.push({\n          id: doc.id,\n          title: doc.title,\n          description: doc.description || '',\n          type: 'document'\n        });\n      }\n    });\n\n    // Search magazines\n    magazines?.forEach(magazine => {\n      if (magazine.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          magazine.description?.toLowerCase().includes(searchTerm.toLowerCase())) {\n        allResults.push({\n          id: magazine.id,\n          title: magazine.title,\n          description: magazine.description || '',\n          type: 'magazine'\n        });\n      }\n    });\n\n    setSearchResults(allResults);\n    setIsSearching(false);\n  }, [searchTerm, workshops, webinars, videos, documents, magazines]);\n\n  const handleResultClick = (result: SearchResult) => {\n    switch (result.type) {\n      case 'workshop':\n        window.postMessage({ type: 'SWITCH_TAB', tab: 'workshops' }, '*');\n        break;\n      case 'webinar':\n        window.postMessage({ type: 'OPEN_WEBINAR', webinarId: result.id }, '*');\n        break;\n      case 'video':\n        window.postMessage({ type: 'OPEN_VIDEO', videoId: result.id }, '*');\n        break;\n      case 'document':\n        window.postMessage({ type: 'SWITCH_TAB', tab: 'library' }, '*');\n        break;\n      case 'magazine':\n        window.postMessage({ type: 'OPEN_MAGAZINE', magazineId: result.id }, '*');\n        break;\n    }\n    onClose();\n  };\n\n  const getResultIcon = (type: string) => {\n    switch (type) {\n      case 'workshop':\n        return <Users className=\"h-5 w-5 text-blue-500\" />;\n      case 'webinar':\n        return <Video className=\"h-5 w-5 text-purple-500\" />;\n      case 'video':\n        return <Video className=\"h-5 w-5 text-red-500\" />;\n      case 'document':\n        return <FileText className=\"h-5 w-5 text-green-500\" />;\n      case 'magazine':\n        return <BookOpen className=\"h-5 w-5 text-orange-500\" />;\n      default:\n        return <Search className=\"h-5 w-5 text-gray-500\" />;\n    }\n  };\n\n  const getResultTypeLabel = (type: string) => {\n    switch (type) {\n      case 'workshop':\n        return 'کارگاه آموزشی';\n      case 'webinar':\n        return 'وبینار';\n      case 'video':\n        return 'ویدیو';\n      case 'document':\n        return 'سند';\n      case 'magazine':\n        return 'مجله';\n      default:\n        return '';\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-start justify-center pt-16 bg-black bg-opacity-50\" dir=\"rtl\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-2xl mx-4 max-h-[80vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">جستجو در محتوا</h2>\n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\n          >\n            <X className=\"h-5 w-5 text-gray-500\" />\n          </button>\n        </div>\n\n        {/* Search Input */}\n        <div className=\"p-4 border-b\">\n          <div className=\"relative\">\n            <Search className=\"absolute right-3 top-3 h-5 w-5 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"جستجو کنید...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pr-10 pl-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-right\"\n              autoFocus\n            />\n          </div>\n        </div>\n\n        {/* Results */}\n        <div className=\"max-h-96 overflow-y-auto\">\n          {isSearching ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mx-auto\"></div>\n              <p className=\"mt-4 text-gray-600\">در حال جستجو...</p>\n            </div>\n          ) : searchResults.length > 0 ? (\n            <div className=\"divide-y divide-gray-200\">\n              {searchResults.map((result) => (\n                <button\n                  key={`${result.type}-${result.id}`}\n                  onClick={() => handleResultClick(result)}\n                  className=\"w-full p-4 text-right hover:bg-gray-50 transition-colors flex items-center gap-3\"\n                >\n                  {getResultIcon(result.type)}\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-medium text-gray-900\">{result.title}</h3>\n                    <p className=\"text-sm text-gray-500 mt-1\">{result.description}</p>\n                    <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 mt-2\">\n                      {getResultTypeLabel(result.type)}\n                    </span>\n                  </div>\n                </button>\n              ))}\n            </div>\n          ) : searchTerm.trim() ? (\n            <div className=\"p-8 text-center\">\n              <Search className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-600\">نتیجه‌ای یافت نشد</p>\n              <p className=\"text-sm text-gray-500 mt-2\">کلمات کلیدی دیگری امتحان کنید</p>\n            </div>\n          ) : (\n            <div className=\"p-8 text-center\">\n              <Search className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-600\">جستجو در محتوا</p>\n              <p className=\"text-sm text-gray-500 mt-2\">کلمه کلیدی خود را وارد کنید</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8613},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from '@tanstack/react-query';\nimport { useState, useEffect } from 'react';\n\nexport interface User {\n  id: number;\n  username: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'user';\n}\n\n// Simple auth state management\nlet authState = {\n  user: null as User | null,\n  isLoading: true,\n  isAuthenticated: false,\n  checkedOnce: false\n};\n\nexport function useAuth() {\n  const [, forceUpdate] = useState({});\n\n  const { data: user, isLoading, error, refetch } = useQuery<User>({\n    queryKey: ['/api/auth/user'],\n    queryFn: async () => {\n      const response = await fetch('/api/auth/user', {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('کاربر وارد نشده');\n      }\n      return response.json();\n    },\n    retry: false,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    refetchOnReconnect: false,\n    staleTime: Infinity,\n    enabled: !authState.checkedOnce, // Only check once\n  });\n\n  useEffect(() => {\n    if (!authState.checkedOnce && (!isLoading || error)) {\n      authState.checkedOnce = true;\n      authState.user = user || null;\n      authState.isAuthenticated = !!user;\n      authState.isLoading = false;\n      forceUpdate({});\n    }\n  }, [user, isLoading, error]);\n\n  const refreshAuth = async () => {\n    const result = await refetch();\n    if (result.data) {\n      authState.user = result.data;\n      authState.isAuthenticated = true;\n      authState.isLoading = false;\n      forceUpdate({});\n    }\n  };\n\n  return {\n    user: authState.user,\n    isLoading: authState.isLoading,\n    isAuthenticated: authState.isAuthenticated,\n    isAdmin: authState.user?.role === 'admin',\n    error: null,\n    refetch: refreshAuth\n  };\n}","size_bytes":1733},"client/src/lib/queryClient.ts":{"content":"\nimport { QueryClient } from \"@tanstack/react-query\";\n\n// Create query client with default options\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      gcTime: 1000 * 60 * 10, // 10 minutes\n      retry: 1,\n      refetchOnWindowFocus: false,\n      queryFn: async ({ queryKey }) => {\n        const url = queryKey[0] as string;\n        return apiRequest(url);\n      },\n    },\n    mutations: {\n      retry: 1,\n    },\n  },\n});\n\n// API request helper function\nexport async function apiRequest(\n  url: string,\n  options: RequestInit & { method?: string; body?: string } = {}\n): Promise<any> {\n  const { method = 'GET', body, ...restOptions } = options;\n  \n  const config: RequestInit = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      ...restOptions.headers,\n    },\n    credentials: 'include', // Include cookies for session management\n    ...restOptions,\n  };\n\n  if (body && method !== 'GET' && method !== 'HEAD') {\n    config.body = body;\n  }\n\n  try {\n    const response = await fetch(url, config);\n    \n    // Handle different response types\n    const contentType = response.headers.get('content-type');\n    \n    if (!response.ok) {\n      let errorMessage = `HTTP error! status: ${response.status}`;\n      \n      try {\n        if (contentType?.includes('application/json')) {\n          const errorData = await response.json();\n          errorMessage = errorData.message || errorData.error || errorMessage;\n        } else {\n          errorMessage = await response.text() || errorMessage;\n        }\n      } catch (e) {\n        // Use default error message if parsing fails\n      }\n      \n      throw new Error(errorMessage);\n    }\n\n    // Return appropriate data based on content type\n    if (contentType?.includes('application/json')) {\n      return await response.json();\n    } else if (method === 'DELETE' && response.status === 204) {\n      return null; // No content for successful DELETE\n    } else {\n      return await response.text();\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      throw error;\n    }\n    throw new Error('Network error occurred');\n  }\n}\n\n// Helper function for mutations\nexport const createMutation = (url: string, method: 'POST' | 'PUT' | 'DELETE') => {\n  return async (data?: any) => {\n    return apiRequest(url, {\n      method,\n      body: data ? JSON.stringify(data) : undefined,\n    });\n  };\n};\n\n// Helper function for query keys\nexport const createQueryKey = (path: string, params?: Record<string, any>) => {\n  if (!params) return [path];\n  \n  const searchParams = new URLSearchParams();\n  Object.entries(params).forEach(([key, value]) => {\n    if (value !== undefined && value !== null) {\n      searchParams.append(key, String(value));\n    }\n  });\n  \n  const queryString = searchParams.toString();\n  return queryString ? [`${path}?${queryString}`] : [path];\n};\n\n// Specific API functions\nexport const api = {\n  // Auth\n  login: (credentials: { username: string; password: string }) =>\n    apiRequest('/api/login', { method: 'POST', body: JSON.stringify(credentials) }),\n  \n  register: (userData: { username: string; password: string; name: string; email: string }) =>\n    apiRequest('/api/register', { method: 'POST', body: JSON.stringify(userData) }),\n  \n  logout: () => apiRequest('/api/logout', { method: 'POST' }),\n  \n  getCurrentUser: () => apiRequest('/api/auth/user'),\n\n  // Users\n  getUsers: () => apiRequest('/api/users'),\n  getUser: (id: number) => apiRequest(`/api/users/${id}`),\n  createUser: (data: any) => apiRequest('/api/users', { method: 'POST', body: JSON.stringify(data) }),\n\n  // Courses\n  getCourses: () => apiRequest('/api/courses'),\n  getCourse: (id: number) => apiRequest(`/api/courses/${id}`),\n  createCourse: (data: any) => apiRequest('/api/courses', { method: 'POST', body: JSON.stringify(data) }),\n  updateCourse: (id: number, data: any) => apiRequest(`/api/courses/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteCourse: (id: number) => apiRequest(`/api/courses/${id}`, { method: 'DELETE' }),\n\n  // Projects\n  getProjects: () => apiRequest('/api/projects'),\n  getProject: (id: number) => apiRequest(`/api/projects/${id}`),\n  createProject: (data: any) => apiRequest('/api/projects', { method: 'POST', body: JSON.stringify(data) }),\n  updateProject: (id: number, data: any) => apiRequest(`/api/projects/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteProject: (id: number) => apiRequest(`/api/projects/${id}`, { method: 'DELETE' }),\n\n  // Documents\n  getDocuments: () => apiRequest('/api/documents'),\n  getDocument: (id: number) => apiRequest(`/api/documents/${id}`),\n  createDocument: (data: any) => apiRequest('/api/documents', { method: 'POST', body: JSON.stringify(data) }),\n  updateDocument: (id: number, data: any) => apiRequest(`/api/documents/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteDocument: (id: number) => apiRequest(`/api/documents/${id}`, { method: 'DELETE' }),\n\n  // Categories\n  getCategories: () => apiRequest('/api/categories'),\n\n  // Workshops\n  getWorkshops: () => apiRequest('/api/workshops'),\n  getWorkshop: (id: number) => apiRequest(`/api/workshops/${id}`),\n  createWorkshop: (data: any) => apiRequest('/api/workshops', { method: 'POST', body: JSON.stringify(data) }),\n  updateWorkshop: (id: number, data: any) => apiRequest(`/api/workshops/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteWorkshop: (id: number) => apiRequest(`/api/workshops/${id}`, { method: 'DELETE' }),\n\n  // Webinars\n  getWebinars: () => apiRequest('/api/webinars'),\n  getWebinar: (id: number) => apiRequest(`/api/webinars/${id}`),\n  createWebinar: (data: any) => apiRequest('/api/webinars', { method: 'POST', body: JSON.stringify(data) }),\n  updateWebinar: (id: number, data: any) => apiRequest(`/api/webinars/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteWebinar: (id: number) => apiRequest(`/api/webinars/${id}`, { method: 'DELETE' }),\n\n  // Webinar Sections\n  getWebinarSections: (webinarId: number) => apiRequest(`/api/webinars/${webinarId}/sections`),\n  createWebinarSection: (webinarId: number, data: any) => \n    apiRequest(`/api/webinars/${webinarId}/sections`, { method: 'POST', body: JSON.stringify(data) }),\n  updateWebinarSection: (webinarId: number, sectionId: number, data: any) => \n    apiRequest(`/api/webinars/${webinarId}/sections/${sectionId}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteWebinarSection: (webinarId: number, sectionId: number) => \n    apiRequest(`/api/webinars/${webinarId}/sections/${sectionId}`, { method: 'DELETE' }),\n\n  // Slides\n  getSlides: () => apiRequest('/api/slides'),\n  getActiveSlides: () => apiRequest('/api/slides/active'),\n  getSlide: (id: number) => apiRequest(`/api/slides/${id}`),\n  createSlide: (data: any) => apiRequest('/api/slides', { method: 'POST', body: JSON.stringify(data) }),\n  updateSlide: (id: number, data: any) => apiRequest(`/api/slides/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteSlide: (id: number) => apiRequest(`/api/slides/${id}`, { method: 'DELETE' }),\n\n  // Quick Access\n  getQuickAccess: () => apiRequest('/api/quick-access'),\n  getActiveQuickAccess: () => apiRequest('/api/quick-access/active'),\n  createQuickAccess: (data: any) => apiRequest('/api/quick-access', { method: 'POST', body: JSON.stringify(data) }),\n  updateQuickAccess: (id: number, data: any) => apiRequest(`/api/quick-access/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteQuickAccess: (id: number) => apiRequest(`/api/quick-access/${id}`, { method: 'DELETE' }),\n\n  // Magazines\n  getMagazines: () => apiRequest('/api/magazines'),\n  getMagazine: (id: number) => apiRequest(`/api/magazines/${id}`),\n  createMagazine: (data: any) => apiRequest('/api/magazines', { method: 'POST', body: JSON.stringify(data) }),\n  updateMagazine: (id: number, data: any) => apiRequest(`/api/magazines/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteMagazine: (id: number) => apiRequest(`/api/magazines/${id}`, { method: 'DELETE' }),\n\n  // Articles\n  getArticles: () => apiRequest('/api/articles'),\n  getArticle: (id: number) => apiRequest(`/api/articles/${id}`),\n  getArticlesByMagazine: (magazineId: number) => apiRequest(`/api/articles/magazine/${magazineId}`),\n  createArticle: (data: any) => apiRequest('/api/articles', { method: 'POST', body: JSON.stringify(data) }),\n  updateArticle: (id: number, data: any) => apiRequest(`/api/articles/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteArticle: (id: number) => apiRequest(`/api/articles/${id}`, { method: 'DELETE' }),\n\n  // Educational Videos\n  getEducationalVideos: () => apiRequest('/api/educational-videos'),\n  getActiveEducationalVideos: () => apiRequest('/api/educational-videos/active'),\n  getEducationalVideo: (id: number) => apiRequest(`/api/educational-videos/${id}`),\n  createEducationalVideo: (data: any) => apiRequest('/api/educational-videos', { method: 'POST', body: JSON.stringify(data) }),\n  updateEducationalVideo: (id: number, data: any) => apiRequest(`/api/educational-videos/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteEducationalVideo: (id: number) => apiRequest(`/api/educational-videos/${id}`, { method: 'DELETE' }),\n\n  // About Us\n  getAboutUs: () => apiRequest('/api/about-us'),\n  getActiveAboutUs: () => apiRequest('/api/about-us/active'),\n  getAboutUsById: (id: number) => apiRequest(`/api/about-us/${id}`),\n  createAboutUs: (data: any) => apiRequest('/api/about-us', { method: 'POST', body: JSON.stringify(data) }),\n  updateAboutUs: (id: number, data: any) => apiRequest(`/api/about-us/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteAboutUs: (id: number) => apiRequest(`/api/about-us/${id}`, { method: 'DELETE' }),\n\n  // Contact Us\n  getContactUs: () => apiRequest('/api/contact-us'),\n  getActiveContactUs: () => apiRequest('/api/contact-us/active'),\n  getContactUsById: (id: number) => apiRequest(`/api/contact-us/${id}`),\n  createContactUs: (data: any) => apiRequest('/api/contact-us', { method: 'POST', body: JSON.stringify(data) }),\n  updateContactUs: (id: number, data: any) => apiRequest(`/api/contact-us/${id}`, { method: 'PUT', body: JSON.stringify(data) }),\n  deleteContactUs: (id: number) => apiRequest(`/api/contact-us/${id}`, { method: 'DELETE' }),\n\n  // File uploads\n  uploadFiles: (files: FileList) => {\n    const formData = new FormData();\n    Array.from(files).forEach(file => {\n      formData.append('files', file);\n    });\n    \n    return fetch('/api/upload', {\n      method: 'POST',\n      body: formData,\n      credentials: 'include',\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n      return response.json();\n    });\n  },\n\n  // User course access\n  getUserCourseAccess: (userId: number) => apiRequest(`/api/users/${userId}/course-access`),\n  grantCourseAccess: (userId: number, data: any) => \n    apiRequest(`/api/users/${userId}/grant-course-access`, { method: 'POST', body: JSON.stringify(data) }),\n  revokeCourseAccess: (userId: number, courseId: number) => \n    apiRequest(`/api/users/${userId}/revoke-course-access/${courseId}`, { method: 'DELETE' }),\n};\n","size_bytes":11226},"client/src/lib/types.ts":{"content":"export interface NavLink {\n  label: string;\n  path: string;\n  icon: string;\n  active?: boolean;\n}\n\nexport interface UserProfile {\n  name: string;\n  username: string;\n  membershipType: string;\n  progress: number;\n  avatar?: string;\n}\n\nexport interface CourseCardProps {\n  id: number;\n  title: string;\n  description: string;\n  thumbnailUrl: string;\n  progress: number;\n  totalModules: number;\n  completedModules: number;\n  category?: string;\n  level?: string;\n  isNew?: boolean;\n  isPopular?: boolean;\n}\n\nexport interface ProjectCardProps {\n  id: number;\n  title: string;\n  description: string;\n  thumbnailUrl: string;\n  type: \"project\" | \"magazine\";\n  dueDate?: string;\n  pages?: number;\n  isLocked: boolean;\n}\n\nexport interface ModuleItem {\n  id: number;\n  title: string;\n  duration: string;\n  isLocked: boolean;\n  isActive?: boolean;\n}\n\nexport interface DocumentViewerProps {\n  document: {\n    id: number;\n    title: string;\n    fileName: string;\n    fileUrl: string;\n    totalPages: number;\n    lastUpdated: string;\n    allowDownload: boolean;\n  };\n}\n\nexport interface MediaPlayerProps {\n  media: {\n    id: number;\n    title: string;\n    description: string;\n    contentUrl: string;\n    instructorName: string;\n    instructorTitle: string;\n    instructorAvatar: string;\n  };\n  modules: ModuleItem[];\n}\n","size_bytes":1304},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/UserManagement.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\n\ninterface User {\n  id: number;\n  username: string;\n  name: string;\n  role: string;\n  subscriptionStatus: string;\n  subscriptionExpiry?: string;\n}\n\ninterface Course {\n  id: number;\n  title: string;\n  accessLevel: string;\n  price: number;\n  isLocked: boolean;\n}\n\ninterface UserCourseAccess {\n  id: number;\n  userId: number;\n  courseId: number;\n  accessType: string;\n  purchaseDate: string;\n  expiryDate?: string;\n  isActive: boolean;\n}\n\nexport default function UserManagement() {\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\n  const [selectedCourseId, setSelectedCourseId] = useState<number>(\"\");\n  const [accessType, setAccessType] = useState<string>(\"granted\");\n  const [expiryDate, setExpiryDate] = useState<string>(\"\");\n\n  const { data: users = [], isLoading: usersLoading } = useQuery({\n    queryKey: [\"/api/users\"],\n  });\n\n  const { data: courses = [], isLoading: coursesLoading } = useQuery({\n    queryKey: [\"/api/courses\"],\n  });\n\n  const { data: userAccess = [], isLoading: accessLoading } = useQuery({\n    queryKey: [\"/api/users\", selectedUserId, \"course-access\"],\n    enabled: !!selectedUserId,\n  });\n\n  const grantAccessMutation = useMutation({\n    mutationFn: async (data: { userId: number; courseId: number; accessType: string; expiryDate?: string }) => {\n      return apiRequest(`/api/users/${data.userId}/grant-course-access`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          courseId: data.courseId,\n          accessType: data.accessType,\n          expiryDate: data.expiryDate,\n        }),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\", selectedUserId, \"course-access\"] });\n      setSelectedCourseId(\"\");\n      setExpiryDate(\"\");\n    },\n  });\n\n  const revokeAccessMutation = useMutation({\n    mutationFn: async (data: { userId: number; courseId: number }) => {\n      return apiRequest(`/api/users/${data.userId}/revoke-course-access/${data.courseId}`, {\n        method: \"DELETE\",\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\", selectedUserId, \"course-access\"] });\n    },\n  });\n\n  const handleGrantAccess = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (selectedUserId && selectedCourseId) {\n      grantAccessMutation.mutate({\n        userId: selectedUserId,\n        courseId: selectedCourseId,\n        accessType,\n        expiryDate: expiryDate || undefined,\n      });\n    }\n  };\n\n  const handleRevokeAccess = (courseId: number) => {\n    if (selectedUserId) {\n      revokeAccessMutation.mutate({\n        userId: selectedUserId,\n        courseId,\n      });\n    }\n  };\n\n  if (usersLoading || coursesLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center py-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"mt-4 text-gray-600 dark:text-gray-400\">در حال بارگذاری...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\" dir=\"rtl\">\n      <div className=\"max-w-6xl mx-auto p-4\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n          مدیریت کاربران و دسترسی‌ها\n        </h1>\n\n        {/* User Selection */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            انتخاب کاربر\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {users.map((user: User) => (\n              <div\n                key={user.id}\n                className={`p-4 border rounded-lg cursor-pointer transition-colors ${\n                  selectedUserId === user.id\n                    ? \"border-blue-500 bg-blue-50 dark:bg-blue-900/20\"\n                    : \"border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600\"\n                }`}\n                onClick={() => setSelectedUserId(user.id)}\n              >\n                <h3 className=\"font-medium text-gray-900 dark:text-white\">\n                  {user.name || user.username}\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  @{user.username}\n                </p>\n                <div className=\"mt-2 flex gap-2\">\n                  <span className={`px-2 py-1 text-xs rounded ${\n                    user.role === 'admin' \n                      ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-300'\n                      : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\n                  }`}>\n                    {user.role === 'admin' ? 'مدیر' : 'کاربر'}\n                  </span>\n                  <span className={`px-2 py-1 text-xs rounded ${\n                    user.subscriptionStatus === 'vip'\n                      ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-300'\n                      : user.subscriptionStatus === 'premium'\n                      ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-300'\n                      : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\n                  }`}>\n                    {user.subscriptionStatus === 'vip' ? 'ویژه' : \n                     user.subscriptionStatus === 'premium' ? 'پریمیوم' : 'رایگان'}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {selectedUserId && (\n          <>\n            {/* Grant Access Form */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                اعطای دسترسی دوره\n              </h2>\n              <form onSubmit={handleGrantAccess} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    انتخاب دوره\n                  </label>\n                  <select\n                    value={selectedCourseId}\n                    onChange={(e) => setSelectedCourseId(parseInt(e.target.value))}\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    required\n                  >\n                    <option value=\"\">انتخاب کنید...</option>\n                    {courses.map((course: Course) => (\n                      <option key={course.id} value={course.id}>\n                        {course.title} - {course.accessLevel === 'free' ? 'رایگان' : \n                                         course.accessLevel === 'premium' ? 'پریمیوم' : 'ویژه'}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    نوع دسترسی\n                  </label>\n                  <select\n                    value={accessType}\n                    onChange={(e) => setAccessType(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  >\n                    <option value=\"granted\">اعطا شده</option>\n                    <option value=\"purchased\">خریداری شده</option>\n                    <option value=\"trial\">آزمایشی</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    تاریخ انقضا (اختیاری)\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={expiryDate}\n                    onChange={(e) => setExpiryDate(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  disabled={grantAccessMutation.isPending}\n                  className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-medium disabled:opacity-50\"\n                >\n                  {grantAccessMutation.isPending ? \"در حال اعطا...\" : \"اعطای دسترسی\"}\n                </button>\n              </form>\n            </div>\n\n            {/* Current Access */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                دسترسی‌های فعلی\n              </h2>\n              {accessLoading ? (\n                <div className=\"text-center py-4\">\n                  <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"></div>\n                </div>\n              ) : userAccess.length === 0 ? (\n                <p className=\"text-gray-600 dark:text-gray-400 text-center py-4\">\n                  هیچ دسترسی‌ای برای این کاربر وجود ندارد\n                </p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {userAccess.map((access: UserCourseAccess) => {\n                    const course = courses.find((c: Course) => c.id === access.courseId);\n                    return (\n                      <div\n                        key={access.id}\n                        className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\"\n                      >\n                        <div>\n                          <h3 className=\"font-medium text-gray-900 dark:text-white\">\n                            {course?.title || `دوره شماره ${access.courseId}`}\n                          </h3>\n                          <div className=\"flex gap-2 mt-1\">\n                            <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                              نوع: {access.accessType === 'granted' ? 'اعطا شده' : \n                                    access.accessType === 'purchased' ? 'خریداری شده' : 'آزمایشی'}\n                            </span>\n                            {access.expiryDate && (\n                              <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                                انقضا: {new Date(access.expiryDate).toLocaleDateString('fa-IR')}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                        <button\n                          onClick={() => handleRevokeAccess(access.courseId)}\n                          disabled={revokeAccessMutation.isPending}\n                          className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm disabled:opacity-50\"\n                        >\n                          لغو دسترسی\n                        </button>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":11915},"client/src/pages/about-us.tsx":{"content":"import { useQuery } from '@tanstack/react-query';\nimport { ArrowRight, Phone, Mail, MapPin, Clock } from 'lucide-react';\n\nexport default function AboutUsPage() {\n  const { data: aboutData, isLoading } = useQuery({\n    queryKey: ['/api/about-us'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">در حال بارگذاری...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const aboutInfo = aboutData?.[0];\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-4xl mx-auto px-4 py-6\">\n          <div className=\"flex items-center gap-3\">\n            <button \n              onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n              className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              <ArrowRight className=\"w-5 h-5 text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold text-gray-900\">درباره ما</h1>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        {aboutInfo ? (\n          <div className=\"space-y-8\">\n            {/* Title Section */}\n            <div className=\"bg-white rounded-lg shadow-sm p-8\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-6 text-center\">\n                {aboutInfo.title}\n              </h2>\n              \n              {/* Description */}\n              <div className=\"prose prose-lg max-w-none text-gray-700 leading-relaxed\">\n                {aboutInfo.description?.split('\\n').map((paragraph: string, index: number) => (\n                  <p key={index} className=\"mb-4\">\n                    {paragraph}\n                  </p>\n                ))}\n              </div>\n            </div>\n\n            {/* Vision & Mission */}\n            {(aboutInfo.vision || aboutInfo.mission) && (\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                {aboutInfo.vision && (\n                  <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                    <div className=\"flex items-center gap-3 mb-4\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                        <div className=\"w-5 h-5 bg-blue-600 rounded-full\"></div>\n                      </div>\n                      <h3 className=\"text-xl font-bold text-gray-900\">چشم‌انداز</h3>\n                    </div>\n                    <p className=\"text-gray-700 leading-relaxed\">\n                      {aboutInfo.vision}\n                    </p>\n                  </div>\n                )}\n\n                {aboutInfo.mission && (\n                  <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                    <div className=\"flex items-center gap-3 mb-4\">\n                      <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\n                        <div className=\"w-5 h-5 bg-green-600 rounded-full\"></div>\n                      </div>\n                      <h3 className=\"text-xl font-bold text-gray-900\">مأموریت</h3>\n                    </div>\n                    <p className=\"text-gray-700 leading-relaxed\">\n                      {aboutInfo.mission}\n                    </p>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Services */}\n            {aboutInfo.services && (\n              <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center\">\n                    <div className=\"w-5 h-5 bg-orange-600 rounded-full\"></div>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900\">خدمات</h3>\n                </div>\n                <div className=\"text-gray-700 leading-relaxed\">\n                  {aboutInfo.services.split('\\n').map((service: string, index: number) => (\n                    <p key={index} className=\"mb-2\">\n                      {service}\n                    </p>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Team */}\n            {aboutInfo.team && (\n              <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n                    <div className=\"w-5 h-5 bg-purple-600 rounded-full\"></div>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900\">تیم ما</h3>\n                </div>\n                <div className=\"text-gray-700 leading-relaxed\">\n                  {aboutInfo.team.split('\\n').map((member: string, index: number) => (\n                    <p key={index} className=\"mb-2\">\n                      {member}\n                    </p>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* History */}\n            {aboutInfo.history && (\n              <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-10 h-10 bg-indigo-100 rounded-lg flex items-center justify-center\">\n                    <Clock className=\"w-5 h-5 text-indigo-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900\">تاریخچه</h3>\n                </div>\n                <div className=\"text-gray-700 leading-relaxed\">\n                  {aboutInfo.history.split('\\n').map((item: string, index: number) => (\n                    <p key={index} className=\"mb-2\">\n                      {item}\n                    </p>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"bg-white rounded-lg shadow-sm p-8 text-center\">\n            <div className=\"w-16 h-16 bg-gray-100 rounded-lg mx-auto mb-4 flex items-center justify-center\">\n              <div className=\"w-8 h-8 bg-gray-300 rounded-full\"></div>\n            </div>\n            <h3 className=\"text-xl font-bold text-gray-900 mb-2\">اطلاعات \"درباره ما\" موجود نیست</h3>\n            <p className=\"text-gray-600 mb-6\">\n              هنوز اطلاعاتی برای این بخش وارد نشده است.\n            </p>\n            <button \n              onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n              className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              بازگشت به صفحه اصلی\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":7126},"client/src/pages/admin-app.tsx":{"content":"import { Route, Switch } from \"wouter\";\nimport AdminLayout from \"../components/admin/AdminLayout\";\nimport AdminDashboard from \"./admin/dashboard\";\nimport AdminPosts from \"./admin/posts\";\nimport AdminMedia from \"./admin/media\";\nimport AdminAppearance from \"./admin/appearance\";\n\nexport default function AdminApp() {\n  return (\n    <AdminLayout>\n      <Switch>\n        <Route path=\"/admin\" component={AdminDashboard} />\n        <Route path=\"/admin/posts\" component={AdminPosts} />\n        <Route path=\"/admin/media\" component={AdminMedia} />\n        <Route path=\"/admin/appearance\" component={AdminAppearance} />\n        <Route>\n          <AdminDashboard />\n        </Route>\n      </Switch>\n    </AdminLayout>\n  );\n}","size_bytes":714},"client/src/pages/admin-backup.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { type Course, type Project, type Document, type MediaContent, type Magazine, type Article, type ArticleContent, type Slide, type Workshop, type WorkshopSection, type WorkshopRegistration } from \"@shared/schema\";\nimport { Calendar, Edit, Eye, File, Folder, Image, Lock, LockOpen, MoreHorizontal, Plus, RefreshCw, Trash, Upload, Video } from \"lucide-react\";\nimport WorkshopsTab from \"@/components/admin/WorkshopsTab\";\n\nexport default function AdminPage() {\n  const [activeTab, setActiveTab] = useState(\"workshop-registrations\");\n\n  const tabs = [\n    { id: \"courses\", label: \"دوره‌ها\", icon: Video },\n    { id: \"webinars\", label: \"وبینارهای آموزشی\", icon: Video },\n    { id: \"documents\", label: \"اسناد\", icon: File },\n    { id: \"slides\", label: \"اسلایدها\", icon: Image },\n    { id: \"magazines\", label: \"مجله‌ها\", icon: Calendar },\n    { id: \"workshops\", label: \"کارگاه‌ها\", icon: Calendar },\n    { id: \"workshop-registrations\", label: \"ثبت‌نام کارگاه‌ها\", icon: Edit },\n    { id: \"users\", label: \"کاربران\", icon: Lock }\n  ];\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">پنل مدیریت</h1>\n          <p className=\"text-gray-600\">مدیریت محتوا و تنظیمات سایت</p>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-4 py-6 flex gap-6\">\n        {/* Sidebar Navigation */}\n        <div className=\"w-64 bg-white rounded-lg border p-4 h-fit shadow-sm\">\n          <h3 className=\"font-semibold text-gray-900 mb-4\">دسته‌بندی‌ها</h3>\n          <nav className=\"space-y-1\">\n            {tabs.map(tab => {\n              const IconComponent = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg transition-colors text-right ${\n                    activeTab === tab.id \n                      ? 'bg-blue-50 text-blue-600 font-medium border-r-2 border-blue-600' \n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-800'\n                  }`}\n                >\n                  <IconComponent className=\"h-5 w-5\" />\n                  {tab.label}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 space-y-6\">\n          {activeTab === \"courses\" && <CoursesTab />}\n          {activeTab === \"webinars\" && <WebinarsManagerTab />}\n          {activeTab === \"documents\" && <DocumentsTab />}\n          {activeTab === \"slides\" && <SlidesTab />}\n          {activeTab === \"magazines\" && <MagazinesTab />}\n          {activeTab === \"workshops\" && <WorkshopsTab />}\n          {activeTab === \"workshop-registrations\" && <WorkshopRegistrationsTab />}\n          {activeTab === \"users\" && <UsersTab />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction WebinarsManagerTab() {\n  const { data: webinars, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/webinars'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"h-6 bg-gray-200 rounded animate-pulse\"></div>\n        <div className=\"h-4 bg-gray-200 rounded animate-pulse w-2/3\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">وبینارهای آموزشی</h2>\n        <button className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n          <Plus className=\"h-4 w-4\" />\n          وبینار جدید\n        </button>\n      </div>\n\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b\">\n          <h4 className=\"font-semibold\">وبینارهای موجود</h4>\n        </div>\n        <div className=\"divide-y\">\n          {webinars && webinars.map((webinar: any) => (\n            <div key={webinar.id} className=\"p-4 flex items-center justify-between\">\n              <div className=\"flex-1\">\n                <h5 className=\"font-medium\">{webinar.title}</h5>\n                <p className=\"text-sm text-gray-600\">{webinar.description}</p>\n                <div className=\"flex gap-4 mt-2 text-xs text-gray-500\">\n                  {webinar.instructor && <span>👨‍🏫 {webinar.instructor}</span>}\n                  {webinar.duration && <span>⏱️ {webinar.duration}</span>}\n                  {webinar.eventDate && <span>📅 {webinar.eventDate}</span>}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button className=\"text-blue-600 hover:text-blue-800\">\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button className=\"text-red-600 hover:text-red-800\">\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          \n          {(!webinars || webinars.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هنوز وبیناری اضافه نشده است.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction CoursesTab() {\n  const { data: courses, isLoading } = useQuery<Course[]>({\n    queryKey: ['/api/courses'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"h-6 bg-gray-200 rounded animate-pulse\"></div>\n        <div className=\"h-4 bg-gray-200 rounded animate-pulse w-2/3\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">دوره‌ها</h2>\n        <button className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n          <Plus className=\"h-4 w-4\" />\n          دوره جدید\n        </button>\n      </div>\n\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b\">\n          <h4 className=\"font-semibold\">دوره‌های موجود</h4>\n        </div>\n        <div className=\"divide-y\">\n          {courses && courses.map((course: Course) => (\n            <div key={course.id} className=\"p-4 flex items-center justify-between\">\n              <div>\n                <h5 className=\"font-medium\">{course.title}</h5>\n                <p className=\"text-sm text-gray-600\">{course.description}</p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button className=\"text-blue-600 hover:text-blue-800\">\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button className=\"text-red-600 hover:text-red-800\">\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction DocumentsTab() {\n  return <div>اسناد</div>;\n}\n\nfunction SlidesTab() {\n  return <div>اسلایدها</div>;\n}\n\nfunction MagazinesTab() {\n  return <div>مجله‌ها</div>;\n}\n\nfunction UsersTab() {\n  return <div>کاربران</div>;\n}\n\nfunction WorkshopRegistrationsTab() {\n  const { data: registrations = [], isLoading } = useQuery<WorkshopRegistration[]>({\n    queryKey: ['/api/workshop-registrations']\n  });\n\n  const { data: workshops = [] } = useQuery<Workshop[]>({\n    queryKey: ['/api/workshops']\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => \n      fetch(`/api/workshop-registrations/${id}`, {\n        method: 'DELETE'\n      }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/workshop-registrations'] });\n    },\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  const getWorkshopName = (workshopId: number) => {\n    const workshop = workshops.find(w => w.id === workshopId);\n    return workshop?.title || 'نامشخص';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">ثبت‌نام‌های کارگاه</h2>\n        <span className=\"text-sm text-gray-600\">تعداد: {registrations.length}</span>\n      </div>\n\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">لیست ثبت‌نام‌ها</h4>\n        </div>\n        \n        {registrations.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            هنوز ثبت‌نامی انجام نشده است.\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">نام کارگاه</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">نام کاربر</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">ایمیل</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">تلفن</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">وضعیت</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">تاریخ ثبت‌نام</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">عملیات</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200\">\n                {registrations.map((registration) => (\n                  <tr key={registration.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-4 py-4 text-sm text-gray-900 font-medium\">\n                      {getWorkshopName(registration.workshopId)}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userName}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userEmail}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userPhone || '-'}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        registration.status === 'confirmed' \n                          ? 'bg-green-100 text-green-800' \n                          : registration.status === 'pending'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-red-100 text-red-800'\n                      }`}>\n                        {registration.status === 'confirmed' ? 'تایید شده' : \n                         registration.status === 'pending' ? 'در انتظار' : 'لغو شده'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.registrationDate \n                        ? new Date(registration.registrationDate).toLocaleDateString('fa-IR')\n                        : '-'\n                      }\n                    </td>\n                    <td className=\"px-4 py-4 text-sm\">\n                      <button\n                        onClick={() => deleteMutation.mutate(registration.id)}\n                        disabled={deleteMutation.isPending}\n                        className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":12647},"client/src/pages/admin-old.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { type Course, type Project, type Document, type MediaContent, type Magazine, type Article, type ArticleContent, type Slide, type Workshop, type WorkshopSection, type WorkshopRegistration } from \"@shared/schema\";\nimport { Calendar, Edit, Eye, File, Folder, Image, Lock, LockOpen, MoreHorizontal, Plus, RefreshCw, Trash, Upload, Video } from \"lucide-react\";\nimport WorkshopsTab from \"@/components/admin/WorkshopsTab\";\n\nexport default function AdminPage() {\n  const [activeTab, setActiveTab] = useState(\"courses\");\n\n  const tabs = [\n    { id: \"courses\", label: \"دوره‌ها\", icon: Video },\n    { id: \"projects\", label: \"پروژه‌ها\", icon: Folder },\n    { id: \"documents\", label: \"اسناد\", icon: File },\n    { id: \"slides\", label: \"اسلایدها\", icon: Image },\n    { id: \"magazines\", label: \"مجله‌ها\", icon: Calendar },\n    { id: \"workshops\", label: \"کارگاه‌ها\", icon: Calendar },\n    { id: \"workshop-registrations\", label: \"ثبت‌نام کارگاه‌ها\", icon: Edit },\n    { id: \"users\", label: \"کاربران\", icon: Lock }\n  ];\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">پنل مدیریت</h1>\n          <p className=\"text-gray-600\">مدیریت محتوا و تنظیمات سایت</p>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-4 py-6 flex gap-6\">\n        {/* Sidebar Navigation */}\n        <div className=\"w-64 bg-white rounded-lg border p-4 h-fit shadow-sm\">\n          <h3 className=\"font-semibold text-gray-900 mb-4\">دسته‌بندی‌ها</h3>\n          <nav className=\"space-y-1\">\n            {tabs.map(tab => {\n              const IconComponent = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg transition-colors text-right ${\n                    activeTab === tab.id \n                      ? 'bg-blue-50 text-blue-600 font-medium border-r-2 border-blue-600' \n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-800'\n                  }`}\n                >\n                  <IconComponent className=\"h-5 w-5\" />\n                  {tab.label}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 space-y-6\">\n        {activeTab === \"courses\" && <CoursesTab />}\n        {activeTab === \"projects\" && <ProjectsTab />}\n        {activeTab === \"documents\" && <DocumentsTab />}\n        {activeTab === \"slides\" && <SlidesTab />}\n        {activeTab === \"magazines\" && <MagazinesTab />}\n        {activeTab === \"workshops\" && <WorkshopsTab />}\n        {activeTab === \"workshop-registrations\" && <WorkshopRegistrationsTab />}\n        {activeTab === \"users\" && <UsersTab />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction CoursesTab() {\n  const { data: courses, isLoading } = useQuery<Course[]>({\n    queryKey: ['/api/courses'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        {[1, 2, 3].map(i => (\n          <div key={i} className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">دوره‌های آموزشی</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن دوره جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {courses && courses.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b\">\n                  <th className=\"text-right py-2\">عنوان</th>\n                  <th className=\"text-right py-2\">وضعیت</th>\n                  <th className=\"text-right py-2\">عملیات</th>\n                </tr>\n              </thead>\n              <tbody>\n                {courses.map(course => (\n                  <tr key={course.id} className=\"border-b\">\n                    <td className=\"py-3\">{course.title}</td>\n                    <td className=\"py-3\">\n                      <span className=\"px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs\">\n                        فعال\n                      </span>\n                    </td>\n                    <td className=\"py-3\">\n                      <div className=\"flex items-center gap-2\">\n                        <button className=\"p-1 hover:bg-gray-100 rounded\">\n                          <Eye className=\"h-4 w-4\" />\n                        </button>\n                        <button className=\"p-1 hover:bg-gray-100 rounded\">\n                          <Edit className=\"h-4 w-4\" />\n                        </button>\n                        <button className=\"p-1 hover:bg-gray-100 rounded text-red-500\">\n                          <Trash className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Video className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ دوره‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، دوره جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ProjectsTab() {\n  const { data: projects, isLoading } = useQuery<Project[]>({\n    queryKey: ['/api/projects'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">پروژه‌ها</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن پروژه جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {projects && projects.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {projects.map(project => (\n              <div key={project.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                <h3 className=\"font-medium mb-2\">{project.title}</h3>\n                <p className=\"text-sm text-gray-600 mb-4\">{project.description}</p>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-xs text-gray-500\">پروژه</span>\n                  <div className=\"flex gap-1\">\n                    <button className=\"p-1 hover:bg-gray-100 rounded\">\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"p-1 hover:bg-gray-100 rounded text-red-500\">\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Folder className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ پروژه‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، پروژه جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction DocumentsTab() {\n  const { data: documents, isLoading } = useQuery<Document[]>({\n    queryKey: ['/api/documents'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">کتابخانه اسناد</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن سند جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {documents && documents.length > 0 ? (\n          <div className=\"space-y-4\">\n            {documents.map(doc => (\n              <div key={doc.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <File className=\"h-8 w-8 text-blue-600\" />\n                  <div>\n                    <h3 className=\"font-medium\">{doc.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{doc.excerpt}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Eye className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded text-red-500\">\n                    <Trash className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <File className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ سندی یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، سند جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction SlidesTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingSlide, setEditingSlide] = useState<Slide | null>(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    imageUrl: '',\n    buttonText: '',\n    buttonUrl: '',\n    isActive: true,\n    order: 0,\n    gradientFrom: 'blue-500',\n    gradientTo: 'purple-600',\n    iconName: 'GraduationCap'\n  });\n\n  const { data: slides, isLoading } = useQuery<Slide[]>({\n    queryKey: ['/api/slides'],\n  });\n\n  const queryClient = useQueryClient();\n\n  const createSlideMutation = useMutation({\n    mutationFn: async (slideData: any) => {\n      return apiRequest('/api/slides', {\n        method: 'POST',\n        body: JSON.stringify(slideData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n      setShowForm(false);\n      resetForm();\n    },\n  });\n\n  const updateSlideMutation = useMutation({\n    mutationFn: async ({ id, ...slideData }: any) => {\n      return apiRequest(`/api/slides/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(slideData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n      setShowForm(false);\n      setEditingSlide(null);\n      resetForm();\n    },\n  });\n\n  const deleteSlideMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return apiRequest(`/api/slides/${id}`, {\n        method: 'DELETE',\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n    },\n  });\n\n  const resetForm = () => {\n    setFormData({\n      title: '',\n      description: '',\n      imageUrl: '',\n      buttonText: '',\n      buttonUrl: '',\n      isActive: true,\n      order: 0,\n      gradientFrom: 'blue-500',\n      gradientTo: 'purple-600',\n      iconName: 'GraduationCap'\n    });\n  };\n\n  const handleEdit = (slide: Slide) => {\n    setEditingSlide(slide);\n    setFormData({\n      title: slide.title,\n      description: slide.description,\n      imageUrl: slide.imageUrl || '',\n      buttonText: slide.buttonText,\n      buttonUrl: slide.buttonUrl,\n      isActive: slide.isActive || true,\n      order: slide.order || 0,\n      gradientFrom: slide.gradientFrom || 'blue-500',\n      gradientTo: slide.gradientTo || 'purple-600',\n      iconName: slide.iconName || 'GraduationCap'\n    });\n    setShowForm(true);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (editingSlide) {\n      updateSlideMutation.mutate({ id: editingSlide.id, ...formData });\n    } else {\n      createSlideMutation.mutate(formData);\n    }\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا از حذف این اسلاید اطمینان دارید؟')) {\n      deleteSlideMutation.mutate(id);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-md\">\n        <div className=\"p-6 border-b\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-semibold\">مدیریت اسلایدها</h2>\n            <button \n              onClick={() => {\n                setShowForm(!showForm);\n                setEditingSlide(null);\n                resetForm();\n              }}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\"\n            >\n              <Plus className=\"h-4 w-4\" />\n              {showForm ? 'لغو' : 'افزودن اسلاید جدید'}\n            </button>\n          </div>\n        </div>\n        \n        {showForm && (\n          <div className=\"p-6 border-t bg-gray-50\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              {editingSlide ? 'ویرایش اسلاید' : 'افزودن اسلاید جدید'}\n            </h3>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    عنوان اسلاید\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.title}\n                    onChange={(e) => setFormData({...formData, title: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    متن دکمه\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.buttonText}\n                    onChange={(e) => setFormData({...formData, buttonText: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  توضیحات\n                </label>\n                <textarea\n                  value={formData.description}\n                  onChange={(e) => setFormData({...formData, description: e.target.value})}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  required\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    لینک دکمه\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.buttonUrl}\n                    onChange={(e) => setFormData({...formData, buttonUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"/courses\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    URL تصویر (اختیاری)\n                  </label>\n                  <input\n                    type=\"url\"\n                    value={formData.imageUrl}\n                    onChange={(e) => setFormData({...formData, imageUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://example.com/image.jpg\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    رنگ شروع گرادیان\n                  </label>\n                  <select\n                    value={formData.gradientFrom}\n                    onChange={(e) => setFormData({...formData, gradientFrom: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"blue-500\">آبی</option>\n                    <option value=\"green-500\">سبز</option>\n                    <option value=\"purple-500\">بنفش</option>\n                    <option value=\"red-500\">قرمز</option>\n                    <option value=\"yellow-500\">زرد</option>\n                    <option value=\"pink-500\">صورتی</option>\n                    <option value=\"indigo-500\">نیلی</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    رنگ پایان گرادیان\n                  </label>\n                  <select\n                    value={formData.gradientTo}\n                    onChange={(e) => setFormData({...formData, gradientTo: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"purple-600\">بنفش تیره</option>\n                    <option value=\"blue-600\">آبی تیره</option>\n                    <option value=\"green-600\">سبز تیره</option>\n                    <option value=\"red-600\">قرمز تیره</option>\n                    <option value=\"yellow-600\">زرد تیره</option>\n                    <option value=\"pink-600\">صورتی تیره</option>\n                    <option value=\"indigo-600\">نیلی تیره</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    آیکون\n                  </label>\n                  <select\n                    value={formData.iconName}\n                    onChange={(e) => setFormData({...formData, iconName: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"GraduationCap\">فارغ‌التحصیلی</option>\n                    <option value=\"BookOpen\">کتاب باز</option>\n                    <option value=\"Rocket\">موشک</option>\n                    <option value=\"Star\">ستاره</option>\n                    <option value=\"Trophy\">جام</option>\n                    <option value=\"Target\">هدف</option>\n                    <option value=\"Lightbulb\">لامپ</option>\n                    <option value=\"Heart\">قلب</option>\n                    <option value=\"Globe\">کره زمین</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    ترتیب نمایش\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.order}\n                    onChange={(e) => setFormData({...formData, order: parseInt(e.target.value) || 0})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    min=\"0\"\n                  />\n                </div>\n\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"isActive\"\n                    checked={formData.isActive}\n                    onChange={(e) => setFormData({...formData, isActive: e.target.checked})}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"isActive\" className=\"mr-2 text-sm font-medium text-gray-700\">\n                    اسلاید فعال باشد\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"flex gap-3\">\n                <button\n                  type=\"submit\"\n                  disabled={createSlideMutation.isPending || updateSlideMutation.isPending}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50\"\n                >\n                  {createSlideMutation.isPending || updateSlideMutation.isPending ? 'در حال ذخیره...' : \n                   editingSlide ? 'بروزرسانی اسلاید' : 'ایجاد اسلاید'}\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingSlide(null);\n                    resetForm();\n                  }}\n                  className=\"px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors\"\n                >\n                  لغو\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n        \n        <div className=\"p-6\">\n          {slides && slides.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {slides.map(slide => (\n                <div key={slide.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <h3 className=\"font-medium\">{slide.title}</h3>\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      slide.isActive ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600'\n                    }`}>\n                      {slide.isActive ? 'فعال' : 'غیرفعال'}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-4\">{slide.description}</p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500\">ترتیب: {slide.order}</span>\n                    <div className=\"flex gap-1\">\n                      <button \n                        onClick={() => handleEdit(slide)}\n                        className=\"p-1 hover:bg-gray-100 rounded\"\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </button>\n                      <button \n                        onClick={() => handleDelete(slide.id)}\n                        className=\"p-1 hover:bg-gray-100 rounded text-red-500\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <Image className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ اسلایدی یافت نشد</h3>\n              <p className=\"text-gray-600\">برای شروع، اسلاید جدیدی اضافه کنید</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction MagazinesTab() {\n  const { data: magazines, isLoading } = useQuery<Magazine[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">مجله‌ها</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن مجله جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {magazines && magazines.length > 0 ? (\n          <div className=\"space-y-4\">\n            {magazines.map(magazine => (\n              <div key={magazine.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <Calendar className=\"h-8 w-8 text-green-600\" />\n                  <div>\n                    <h3 className=\"font-medium\">{magazine.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{magazine.description}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Eye className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded text-red-500\">\n                    <Trash className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Calendar className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ مجله‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، مجله جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Users Tab Component\nfunction UsersTab() {\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\n  const [selectedCourseId, setSelectedCourseId] = useState<number>(0);\n  const [accessType, setAccessType] = useState<string>(\"granted\");\n  const [expiryDate, setExpiryDate] = useState<string>(\"\");\n\n  const { data: users = [], isLoading: usersLoading } = useQuery({\n    queryKey: [\"/api/users\"],\n  });\n\n  const { data: courses = [], isLoading: coursesLoading } = useQuery({\n    queryKey: [\"/api/courses\"],\n  });\n\n  const { data: userAccess = [], isLoading: accessLoading } = useQuery({\n    queryKey: [\"/api/users\", selectedUserId, \"course-access\"],\n    enabled: !!selectedUserId,\n  });\n\n  const grantAccessMutation = useMutation({\n    mutationFn: async (data: { userId: number; courseId: number; accessType: string; expiryDate?: string }) => {\n      return apiRequest(`/api/users/${data.userId}/grant-course-access`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          courseId: data.courseId,\n          accessType: data.accessType,\n          expiryDate: data.expiryDate,\n        }),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\", selectedUserId, \"course-access\"] });\n      setSelectedCourseId(0);\n      setExpiryDate(\"\");\n    },\n  });\n\n  const revokeAccessMutation = useMutation({\n    mutationFn: async (data: { userId: number; courseId: number }) => {\n      return apiRequest(`/api/users/${data.userId}/revoke-course-access/${data.courseId}`, {\n        method: \"DELETE\",\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\", selectedUserId, \"course-access\"] });\n    },\n  });\n\n  const handleGrantAccess = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (selectedUserId && selectedCourseId) {\n      grantAccessMutation.mutate({\n        userId: selectedUserId,\n        courseId: selectedCourseId,\n        accessType,\n        expiryDate: expiryDate || undefined,\n      });\n    }\n  };\n\n  const handleRevokeAccess = (courseId: number) => {\n    if (selectedUserId) {\n      revokeAccessMutation.mutate({\n        userId: selectedUserId,\n        courseId,\n      });\n    }\n  };\n\n  if (usersLoading || coursesLoading) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n        <p className=\"mt-4 text-gray-600\">در حال بارگذاری...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* User Selection */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">انتخاب کاربر</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {(users as any[]).map((user: any) => (\n            <div\n              key={user.id}\n              className={`p-4 border rounded-lg cursor-pointer transition-colors ${\n                selectedUserId === user.id\n                  ? \"border-blue-500 bg-blue-50\"\n                  : \"border-gray-200 hover:border-gray-300\"\n              }`}\n              onClick={() => setSelectedUserId(user.id)}\n            >\n              <h3 className=\"font-medium text-gray-900\">\n                {user.name || user.username}\n              </h3>\n              <p className=\"text-sm text-gray-600\">@{user.username}</p>\n              <div className=\"mt-2 flex gap-2\">\n                <span className={`px-2 py-1 text-xs rounded ${\n                  user.role === 'admin' \n                    ? 'bg-red-100 text-red-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {user.role === 'admin' ? 'مدیر' : 'کاربر'}\n                </span>\n                <span className={`px-2 py-1 text-xs rounded ${\n                  user.subscriptionStatus === 'vip'\n                    ? 'bg-purple-100 text-purple-800'\n                    : user.subscriptionStatus === 'premium'\n                    ? 'bg-yellow-100 text-yellow-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {user.subscriptionStatus === 'vip' ? 'ویژه' : \n                   user.subscriptionStatus === 'premium' ? 'پریمیوم' : 'رایگان'}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {selectedUserId && (\n        <>\n          {/* Grant Access Form */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">اعطای دسترسی دوره</h2>\n            <form onSubmit={handleGrantAccess} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  انتخاب دوره\n                </label>\n                <select\n                  value={selectedCourseId}\n                  onChange={(e) => setSelectedCourseId(parseInt(e.target.value))}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                  required\n                >\n                  <option value={0}>انتخاب کنید...</option>\n                  {(courses as any[]).map((course: any) => (\n                    <option key={course.id} value={course.id}>\n                      {course.title} - {course.accessLevel === 'free' ? 'رایگان' : \n                                       course.accessLevel === 'premium' ? 'پریمیوم' : 'ویژه'}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  نوع دسترسی\n                </label>\n                <select\n                  value={accessType}\n                  onChange={(e) => setAccessType(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                >\n                  <option value=\"granted\">اعطا شده</option>\n                  <option value=\"purchased\">خریداری شده</option>\n                  <option value=\"trial\">آزمایشی</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  تاریخ انقضا (اختیاری)\n                </label>\n                <input\n                  type=\"date\"\n                  value={expiryDate}\n                  onChange={(e) => setExpiryDate(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={grantAccessMutation.isPending}\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-medium disabled:opacity-50\"\n              >\n                {grantAccessMutation.isPending ? \"در حال اعطا...\" : \"اعطای دسترسی\"}\n              </button>\n            </form>\n          </div>\n\n          {/* Current Access */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">دسترسی‌های فعلی</h2>\n            {accessLoading ? (\n              <div className=\"text-center py-4\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"></div>\n              </div>\n            ) : (userAccess as any[]).length === 0 ? (\n              <p className=\"text-gray-600 text-center py-4\">\n                هیچ دسترسی‌ای برای این کاربر وجود ندارد\n              </p>\n            ) : (\n              <div className=\"space-y-3\">\n                {(userAccess as any[]).map((access: any) => {\n                  const course = (courses as any[]).find((c: any) => c.id === access.courseId);\n                  return (\n                    <div\n                      key={access.id}\n                      className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\"\n                    >\n                      <div>\n                        <h3 className=\"font-medium text-gray-900\">\n                          {course?.title || `دوره شماره ${access.courseId}`}\n                        </h3>\n                        <div className=\"flex gap-2 mt-1\">\n                          <span className=\"text-sm text-gray-600\">\n                            نوع: {access.accessType === 'granted' ? 'اعطا شده' : \n                                  access.accessType === 'purchased' ? 'خریداری شده' : 'آزمایشی'}\n                          </span>\n                          {access.expiryDate && (\n                            <span className=\"text-sm text-gray-600\">\n                              انقضا: {new Date(access.expiryDate).toLocaleDateString('fa-IR')}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => handleRevokeAccess(access.courseId)}\n                        disabled={revokeAccessMutation.isPending}\n                        className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm disabled:opacity-50\"\n                      >\n                        لغو دسترسی\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction WorkshopRegistrationsTab() {\n  const { data: registrations = [], isLoading } = useQuery<WorkshopRegistration[]>({\n    queryKey: ['/api/workshop-registrations']\n  });\n\n  const { data: workshops = [] } = useQuery<Workshop[]>({\n    queryKey: ['/api/workshops']\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => \n      fetch(`/api/workshop-registrations/${id}`, {\n        method: 'DELETE'\n      }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/workshop-registrations'] });\n    },\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  const getWorkshopName = (workshopId: number) => {\n    const workshop = workshops.find(w => w.id === workshopId);\n    return workshop?.title || 'نامشخص';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">ثبت‌نام‌های کارگاه</h2>\n        <span className=\"text-sm text-gray-600\">تعداد: {registrations.length}</span>\n      </div>\n\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">لیست ثبت‌نام‌ها</h4>\n        </div>\n        \n        {registrations.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            هنوز ثبت‌نامی انجام نشده است.\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">نام کارگاه</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">نام کاربر</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">ایمیل</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">تلفن</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">وضعیت</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">تاریخ ثبت‌نام</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">عملیات</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200\">\n                {registrations.map((registration) => (\n                  <tr key={registration.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-4 py-4 text-sm text-gray-900 font-medium\">\n                      {getWorkshopName(registration.workshopId)}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userName}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userEmail}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userPhone || '-'}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        registration.status === 'confirmed' \n                          ? 'bg-green-100 text-green-800' \n                          : registration.status === 'pending'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-red-100 text-red-800'\n                      }`}>\n                        {registration.status === 'confirmed' ? 'تایید شده' : \n                         registration.status === 'pending' ? 'در انتظار' : 'لغو شده'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.registrationDate \n                        ? new Date(registration.registrationDate).toLocaleDateString('fa-IR')\n                        : '-'\n                      }\n                    </td>\n                    <td className=\"px-4 py-4 text-sm\">\n                      <button\n                        onClick={() => deleteMutation.mutate(registration.id)}\n                        disabled={deleteMutation.isPending}\n                        className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":42871},"client/src/pages/admin-simple-backup.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { type Course, type Project, type Document, type MediaContent, type Magazine, type Article, type ArticleContent, type Slide, type Workshop, type WorkshopSection } from \"@shared/schema\";\nimport { Calendar, Edit, Eye, File, Folder, Image, Lock, LockOpen, MoreHorizontal, Plus, RefreshCw, Trash, Upload, Video } from \"lucide-react\";\n\nexport default function AdminPage() {\n  const [activeTab, setActiveTab] = useState(\"courses\");\n\n  return (\n    <div dir=\"rtl\" className=\"container mx-auto py-6 pb-20\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">پنل مدیریت</h1>\n        <p className=\"text-gray-600\">مدیریت محتوا و تنظیمات سایت</p>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex gap-2 mb-6 border-b overflow-x-auto\">\n        {[\n          { id: \"courses\", label: \"دوره‌ها\", icon: Video },\n          { id: \"projects\", label: \"پروژه‌ها\", icon: Folder },\n          { id: \"documents\", label: \"اسناد\", icon: File },\n          { id: \"slides\", label: \"اسلایدها\", icon: Image },\n          { id: \"magazines\", label: \"مجله‌ها\", icon: Calendar },\n          { id: \"users\", label: \"کاربران\", icon: Lock }\n        ].map(tab => {\n          const IconComponent = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex items-center gap-2 px-4 py-2 border-b-2 transition-colors whitespace-nowrap ${\n                activeTab === tab.id \n                  ? 'border-blue-500 text-blue-600 font-medium' \n                  : 'border-transparent text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <IconComponent className=\"h-4 w-4\" />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Content */}\n      <div className=\"space-y-6\">\n        {activeTab === \"courses\" && <CoursesTab />}\n        {activeTab === \"projects\" && <ProjectsTab />}\n        {activeTab === \"documents\" && <DocumentsTab />}\n        {activeTab === \"slides\" && <SlidesTab />}\n        {activeTab === \"magazines\" && <MagazinesTab />}\n        {activeTab === \"users\" && <UsersTab />}\n      </div>\n    </div>\n  );\n}\n\nfunction CoursesTab() {\n  const { data: courses, isLoading } = useQuery<Course[]>({\n    queryKey: ['/api/courses'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        {[1, 2, 3].map(i => (\n          <div key={i} className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">دوره‌های آموزشی</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن دوره جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {courses && courses.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b\">\n                  <th className=\"text-right py-2\">عنوان</th>\n                  <th className=\"text-right py-2\">وضعیت</th>\n                  <th className=\"text-right py-2\">عملیات</th>\n                </tr>\n              </thead>\n              <tbody>\n                {courses.map(course => (\n                  <tr key={course.id} className=\"border-b\">\n                    <td className=\"py-3\">{course.title}</td>\n                    <td className=\"py-3\">\n                      <span className=\"px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs\">\n                        فعال\n                      </span>\n                    </td>\n                    <td className=\"py-3\">\n                      <div className=\"flex items-center gap-2\">\n                        <button className=\"p-1 hover:bg-gray-100 rounded\">\n                          <Eye className=\"h-4 w-4\" />\n                        </button>\n                        <button className=\"p-1 hover:bg-gray-100 rounded\">\n                          <Edit className=\"h-4 w-4\" />\n                        </button>\n                        <button className=\"p-1 hover:bg-gray-100 rounded text-red-500\">\n                          <Trash className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Video className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ دوره‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، دوره جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ProjectsTab() {\n  const { data: projects, isLoading } = useQuery<Project[]>({\n    queryKey: ['/api/projects'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">پروژه‌ها</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن پروژه جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {projects && projects.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {projects.map(project => (\n              <div key={project.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                <h3 className=\"font-medium mb-2\">{project.title}</h3>\n                <p className=\"text-sm text-gray-600 mb-4\">{project.description}</p>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-xs text-gray-500\">پروژه</span>\n                  <div className=\"flex gap-1\">\n                    <button className=\"p-1 hover:bg-gray-100 rounded\">\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"p-1 hover:bg-gray-100 rounded text-red-500\">\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Folder className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ پروژه‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، پروژه جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction DocumentsTab() {\n  const { data: documents, isLoading } = useQuery<Document[]>({\n    queryKey: ['/api/documents'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">کتابخانه اسناد</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن سند جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {documents && documents.length > 0 ? (\n          <div className=\"space-y-4\">\n            {documents.map(doc => (\n              <div key={doc.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <File className=\"h-8 w-8 text-blue-600\" />\n                  <div>\n                    <h3 className=\"font-medium\">{doc.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{doc.excerpt}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Eye className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded text-red-500\">\n                    <Trash className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <File className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ سندی یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، سند جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction SlidesTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingSlide, setEditingSlide] = useState<Slide | null>(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    imageUrl: '',\n    buttonText: '',\n    buttonUrl: '',\n    isActive: true,\n    order: 0,\n    gradientFrom: 'blue-500',\n    gradientTo: 'purple-600',\n    iconName: 'GraduationCap'\n  });\n\n  const { data: slides, isLoading } = useQuery<Slide[]>({\n    queryKey: ['/api/slides'],\n  });\n\n  const queryClient = useQueryClient();\n\n  const createSlideMutation = useMutation({\n    mutationFn: async (slideData: any) => {\n      return apiRequest('/api/slides', {\n        method: 'POST',\n        body: JSON.stringify(slideData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n      setShowForm(false);\n      resetForm();\n    },\n  });\n\n  const updateSlideMutation = useMutation({\n    mutationFn: async ({ id, ...slideData }: any) => {\n      return apiRequest(`/api/slides/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(slideData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n      setShowForm(false);\n      setEditingSlide(null);\n      resetForm();\n    },\n  });\n\n  const deleteSlideMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return apiRequest(`/api/slides/${id}`, {\n        method: 'DELETE',\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n    },\n  });\n\n  const resetForm = () => {\n    setFormData({\n      title: '',\n      description: '',\n      imageUrl: '',\n      buttonText: '',\n      buttonUrl: '',\n      isActive: true,\n      order: 0,\n      gradientFrom: 'blue-500',\n      gradientTo: 'purple-600',\n      iconName: 'GraduationCap'\n    });\n  };\n\n  const handleEdit = (slide: Slide) => {\n    setEditingSlide(slide);\n    setFormData({\n      title: slide.title,\n      description: slide.description,\n      imageUrl: slide.imageUrl || '',\n      buttonText: slide.buttonText,\n      buttonUrl: slide.buttonUrl,\n      isActive: slide.isActive || true,\n      order: slide.order || 0,\n      gradientFrom: slide.gradientFrom || 'blue-500',\n      gradientTo: slide.gradientTo || 'purple-600',\n      iconName: slide.iconName || 'GraduationCap'\n    });\n    setShowForm(true);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (editingSlide) {\n      updateSlideMutation.mutate({ id: editingSlide.id, ...formData });\n    } else {\n      createSlideMutation.mutate(formData);\n    }\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا از حذف این اسلاید اطمینان دارید؟')) {\n      deleteSlideMutation.mutate(id);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-md\">\n        <div className=\"p-6 border-b\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-semibold\">مدیریت اسلایدها</h2>\n            <button \n              onClick={() => {\n                setShowForm(!showForm);\n                setEditingSlide(null);\n                resetForm();\n              }}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\"\n            >\n              <Plus className=\"h-4 w-4\" />\n              {showForm ? 'لغو' : 'افزودن اسلاید جدید'}\n            </button>\n          </div>\n        </div>\n        \n        {showForm && (\n          <div className=\"p-6 border-t bg-gray-50\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              {editingSlide ? 'ویرایش اسلاید' : 'افزودن اسلاید جدید'}\n            </h3>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    عنوان اسلاید\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.title}\n                    onChange={(e) => setFormData({...formData, title: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    متن دکمه\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.buttonText}\n                    onChange={(e) => setFormData({...formData, buttonText: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  توضیحات\n                </label>\n                <textarea\n                  value={formData.description}\n                  onChange={(e) => setFormData({...formData, description: e.target.value})}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  required\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    لینک دکمه\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.buttonUrl}\n                    onChange={(e) => setFormData({...formData, buttonUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"/courses\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    URL تصویر (اختیاری)\n                  </label>\n                  <input\n                    type=\"url\"\n                    value={formData.imageUrl}\n                    onChange={(e) => setFormData({...formData, imageUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://example.com/image.jpg\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    رنگ شروع گرادیان\n                  </label>\n                  <select\n                    value={formData.gradientFrom}\n                    onChange={(e) => setFormData({...formData, gradientFrom: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"blue-500\">آبی</option>\n                    <option value=\"green-500\">سبز</option>\n                    <option value=\"purple-500\">بنفش</option>\n                    <option value=\"red-500\">قرمز</option>\n                    <option value=\"yellow-500\">زرد</option>\n                    <option value=\"pink-500\">صورتی</option>\n                    <option value=\"indigo-500\">نیلی</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    رنگ پایان گرادیان\n                  </label>\n                  <select\n                    value={formData.gradientTo}\n                    onChange={(e) => setFormData({...formData, gradientTo: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"purple-600\">بنفش تیره</option>\n                    <option value=\"blue-600\">آبی تیره</option>\n                    <option value=\"green-600\">سبز تیره</option>\n                    <option value=\"red-600\">قرمز تیره</option>\n                    <option value=\"yellow-600\">زرد تیره</option>\n                    <option value=\"pink-600\">صورتی تیره</option>\n                    <option value=\"indigo-600\">نیلی تیره</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    آیکون\n                  </label>\n                  <select\n                    value={formData.iconName}\n                    onChange={(e) => setFormData({...formData, iconName: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"GraduationCap\">فارغ‌التحصیلی</option>\n                    <option value=\"BookOpen\">کتاب باز</option>\n                    <option value=\"Rocket\">موشک</option>\n                    <option value=\"Star\">ستاره</option>\n                    <option value=\"Trophy\">جام</option>\n                    <option value=\"Target\">هدف</option>\n                    <option value=\"Lightbulb\">لامپ</option>\n                    <option value=\"Heart\">قلب</option>\n                    <option value=\"Globe\">کره زمین</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    ترتیب نمایش\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.order}\n                    onChange={(e) => setFormData({...formData, order: parseInt(e.target.value) || 0})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    min=\"0\"\n                  />\n                </div>\n\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"isActive\"\n                    checked={formData.isActive}\n                    onChange={(e) => setFormData({...formData, isActive: e.target.checked})}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"isActive\" className=\"mr-2 text-sm font-medium text-gray-700\">\n                    اسلاید فعال باشد\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"flex gap-3\">\n                <button\n                  type=\"submit\"\n                  disabled={createSlideMutation.isPending || updateSlideMutation.isPending}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50\"\n                >\n                  {createSlideMutation.isPending || updateSlideMutation.isPending ? 'در حال ذخیره...' : \n                   editingSlide ? 'بروزرسانی اسلاید' : 'ایجاد اسلاید'}\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingSlide(null);\n                    resetForm();\n                  }}\n                  className=\"px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors\"\n                >\n                  لغو\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n        \n        <div className=\"p-6\">\n          {slides && slides.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {slides.map(slide => (\n                <div key={slide.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <h3 className=\"font-medium\">{slide.title}</h3>\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      slide.isActive ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600'\n                    }`}>\n                      {slide.isActive ? 'فعال' : 'غیرفعال'}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-4\">{slide.description}</p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500\">ترتیب: {slide.order}</span>\n                    <div className=\"flex gap-1\">\n                      <button \n                        onClick={() => handleEdit(slide)}\n                        className=\"p-1 hover:bg-gray-100 rounded\"\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </button>\n                      <button \n                        onClick={() => handleDelete(slide.id)}\n                        className=\"p-1 hover:bg-gray-100 rounded text-red-500\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <Image className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ اسلایدی یافت نشد</h3>\n              <p className=\"text-gray-600\">برای شروع، اسلاید جدیدی اضافه کنید</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction MagazinesTab() {\n  const { data: magazines, isLoading } = useQuery<Magazine[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">مجله‌ها</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن مجله جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {magazines && magazines.length > 0 ? (\n          <div className=\"space-y-4\">\n            {magazines.map(magazine => (\n              <div key={magazine.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <Calendar className=\"h-8 w-8 text-green-600\" />\n                  <div>\n                    <h3 className=\"font-medium\">{magazine.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{magazine.description}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Eye className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded text-red-500\">\n                    <Trash className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Calendar className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ مجله‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، مجله جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Users Tab Component\nfunction UsersTab() {\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\n  const [selectedCourseId, setSelectedCourseId] = useState<number>(0);\n  const [accessType, setAccessType] = useState<string>(\"granted\");\n  const [expiryDate, setExpiryDate] = useState<string>(\"\");\n\n  const { data: users = [], isLoading: usersLoading } = useQuery({\n    queryKey: [\"/api/users\"],\n  });\n\n  const { data: courses = [], isLoading: coursesLoading } = useQuery({\n    queryKey: [\"/api/courses\"],\n  });\n\n  const { data: userAccess = [], isLoading: accessLoading } = useQuery({\n    queryKey: [\"/api/users\", selectedUserId, \"course-access\"],\n    enabled: !!selectedUserId,\n  });\n\n  const grantAccessMutation = useMutation({\n    mutationFn: async (data: { userId: number; courseId: number; accessType: string; expiryDate?: string }) => {\n      return apiRequest(`/api/users/${data.userId}/grant-course-access`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          courseId: data.courseId,\n          accessType: data.accessType,\n          expiryDate: data.expiryDate,\n        }),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\", selectedUserId, \"course-access\"] });\n      setSelectedCourseId(0);\n      setExpiryDate(\"\");\n    },\n  });\n\n  const revokeAccessMutation = useMutation({\n    mutationFn: async (data: { userId: number; courseId: number }) => {\n      return apiRequest(`/api/users/${data.userId}/revoke-course-access/${data.courseId}`, {\n        method: \"DELETE\",\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\", selectedUserId, \"course-access\"] });\n    },\n  });\n\n  const handleGrantAccess = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (selectedUserId && selectedCourseId) {\n      grantAccessMutation.mutate({\n        userId: selectedUserId,\n        courseId: selectedCourseId,\n        accessType,\n        expiryDate: expiryDate || undefined,\n      });\n    }\n  };\n\n  const handleRevokeAccess = (courseId: number) => {\n    if (selectedUserId) {\n      revokeAccessMutation.mutate({\n        userId: selectedUserId,\n        courseId,\n      });\n    }\n  };\n\n  if (usersLoading || coursesLoading) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n        <p className=\"mt-4 text-gray-600\">در حال بارگذاری...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* User Selection */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">انتخاب کاربر</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {(users as any[]).map((user: any) => (\n            <div\n              key={user.id}\n              className={`p-4 border rounded-lg cursor-pointer transition-colors ${\n                selectedUserId === user.id\n                  ? \"border-blue-500 bg-blue-50\"\n                  : \"border-gray-200 hover:border-gray-300\"\n              }`}\n              onClick={() => setSelectedUserId(user.id)}\n            >\n              <h3 className=\"font-medium text-gray-900\">\n                {user.name || user.username}\n              </h3>\n              <p className=\"text-sm text-gray-600\">@{user.username}</p>\n              <div className=\"mt-2 flex gap-2\">\n                <span className={`px-2 py-1 text-xs rounded ${\n                  user.role === 'admin' \n                    ? 'bg-red-100 text-red-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {user.role === 'admin' ? 'مدیر' : 'کاربر'}\n                </span>\n                <span className={`px-2 py-1 text-xs rounded ${\n                  user.subscriptionStatus === 'vip'\n                    ? 'bg-purple-100 text-purple-800'\n                    : user.subscriptionStatus === 'premium'\n                    ? 'bg-yellow-100 text-yellow-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {user.subscriptionStatus === 'vip' ? 'ویژه' : \n                   user.subscriptionStatus === 'premium' ? 'پریمیوم' : 'رایگان'}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {selectedUserId && (\n        <>\n          {/* Grant Access Form */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">اعطای دسترسی دوره</h2>\n            <form onSubmit={handleGrantAccess} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  انتخاب دوره\n                </label>\n                <select\n                  value={selectedCourseId}\n                  onChange={(e) => setSelectedCourseId(parseInt(e.target.value))}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                  required\n                >\n                  <option value={0}>انتخاب کنید...</option>\n                  {(courses as any[]).map((course: any) => (\n                    <option key={course.id} value={course.id}>\n                      {course.title} - {course.accessLevel === 'free' ? 'رایگان' : \n                                       course.accessLevel === 'premium' ? 'پریمیوم' : 'ویژه'}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  نوع دسترسی\n                </label>\n                <select\n                  value={accessType}\n                  onChange={(e) => setAccessType(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                >\n                  <option value=\"granted\">اعطا شده</option>\n                  <option value=\"purchased\">خریداری شده</option>\n                  <option value=\"trial\">آزمایشی</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  تاریخ انقضا (اختیاری)\n                </label>\n                <input\n                  type=\"date\"\n                  value={expiryDate}\n                  onChange={(e) => setExpiryDate(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={grantAccessMutation.isPending}\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-medium disabled:opacity-50\"\n              >\n                {grantAccessMutation.isPending ? \"در حال اعطا...\" : \"اعطای دسترسی\"}\n              </button>\n            </form>\n          </div>\n\n          {/* Current Access */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">دسترسی‌های فعلی</h2>\n            {accessLoading ? (\n              <div className=\"text-center py-4\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"></div>\n              </div>\n            ) : (userAccess as any[]).length === 0 ? (\n              <p className=\"text-gray-600 text-center py-4\">\n                هیچ دسترسی‌ای برای این کاربر وجود ندارد\n              </p>\n            ) : (\n              <div className=\"space-y-3\">\n                {(userAccess as any[]).map((access: any) => {\n                  const course = (courses as any[]).find((c: any) => c.id === access.courseId);\n                  return (\n                    <div\n                      key={access.id}\n                      className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\"\n                    >\n                      <div>\n                        <h3 className=\"font-medium text-gray-900\">\n                          {course?.title || `دوره شماره ${access.courseId}`}\n                        </h3>\n                        <div className=\"flex gap-2 mt-1\">\n                          <span className=\"text-sm text-gray-600\">\n                            نوع: {access.accessType === 'granted' ? 'اعطا شده' : \n                                  access.accessType === 'purchased' ? 'خریداری شده' : 'آزمایشی'}\n                          </span>\n                          {access.expiryDate && (\n                            <span className=\"text-sm text-gray-600\">\n                              انقضا: {new Date(access.expiryDate).toLocaleDateString('fa-IR')}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => handleRevokeAccess(access.courseId)}\n                        disabled={revokeAccessMutation.isPending}\n                        className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm disabled:opacity-50\"\n                      >\n                        لغو دسترسی\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}","size_bytes":37066},"client/src/pages/admin-simple.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { type Course, type Project, type Document, type MediaContent, type Magazine, type Article, type ArticleContent, type Slide, type Workshop, type WorkshopSection } from \"@shared/schema\";\nimport { Calendar, Edit, Eye, File, Folder, Image, Lock, LockOpen, MoreHorizontal, Plus, RefreshCw, Trash, Upload, Video, Copy, X, Zap, Info, Phone, Users, Building } from \"lucide-react\";\nimport WorkshopsTab from \"../components/admin/WorkshopsTab\";\n\nexport default function AdminPage() {\n  const [activeTab, setActiveTab] = useState(\"aboutus\");\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen bg-gray-50\">\n      <div className=\"flex\">\n        {/* Sidebar */}\n        <div className=\"w-64 bg-white shadow-sm border-l min-h-screen\">\n          <div className=\"p-6 border-b\">\n            <h1 className=\"text-xl font-bold text-gray-900\">پنل مدیریت</h1>\n            <p className=\"text-sm text-gray-600 mt-1\">مدیریت محتوا و تنظیمات</p>\n          </div>\n          \n          <nav className=\"p-4\">\n            <div className=\"space-y-1\">\n              {[\n                { id: \"courses\", label: \"دوره‌ها\", icon: Video },\n                { id: \"projects\", label: \"پروژه‌ها\", icon: Folder },\n                { id: \"documents\", label: \"اسناد\", icon: File },\n                { id: \"workshops\", label: \"کارگاه‌ها\", icon: RefreshCw },\n                { id: \"webinars\", label: \"وبینارها\", icon: Users },\n                { id: \"educationalvideos\", label: \"ویدیوهای آموزشی\", icon: Video },\n                { id: \"slides\", label: \"اسلایدها\", icon: Image },\n                { id: \"quickaccess\", label: \"دسترسی سریع\", icon: Zap },\n                { id: \"magazines\", label: \"مجله‌ها\", icon: Calendar },\n                { id: \"articles\", label: \"مقاله‌ها\", icon: File },\n                { id: \"media\", label: \"کتابخانه رسانه\", icon: Upload },\n                { id: \"aboutus\", label: \"درباره ما\", icon: Building },\n                { id: \"contactus\", label: \"تماس با ما\", icon: Phone },\n                { id: \"users\", label: \"کاربران\", icon: Lock }\n              ].map(tab => {\n                const IconComponent = tab.icon;\n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={`w-full flex items-center gap-3 px-3 py-2 rounded-md text-right transition-colors ${\n                      activeTab === tab.id \n                        ? 'bg-blue-50 text-blue-700 font-medium' \n                        : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                    }`}\n                  >\n                    <IconComponent className=\"h-4 w-4\" />\n                    {tab.label}\n                  </button>\n                );\n              })}\n            </div>\n          </nav>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 p-6\">\n          <div className=\"mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">\n              {activeTab === \"courses\" && \"دوره‌های آموزشی\"}\n              {activeTab === \"projects\" && \"پروژه‌ها\"}\n              {activeTab === \"documents\" && \"اسناد\"}\n              {activeTab === \"workshops\" && \"کارگاه‌های آموزشی\"}\n              {activeTab === \"webinars\" && \"وبینارهای آموزشی\"}\n              {activeTab === \"educationalvideos\" && \"ویدیوهای آموزشی\"}\n              {activeTab === \"slides\" && \"اسلایدهای صفحه اصلی\"}\n              {activeTab === \"quickaccess\" && \"مدیریت منوی دسترسی سریع\"}\n              {activeTab === \"magazines\" && \"مجله‌ها\"}\n              {activeTab === \"articles\" && \"مقاله‌ها\"}\n              {activeTab === \"media\" && \"کتابخانه رسانه\"}\n              {activeTab === \"aboutus\" && \"درباره ما\"}\n              {activeTab === \"contactus\" && \"تماس با ما\"}\n              {activeTab === \"users\" && \"مدیریت کاربران\"}\n            </h2>\n          </div>\n\n          <div className=\"space-y-6\">\n            {activeTab === \"courses\" && <CoursesTab />}\n            {activeTab === \"projects\" && <ProjectsTab />}\n            {activeTab === \"documents\" && <DocumentsTab />}\n            {activeTab === \"workshops\" && <WorkshopsTab />}\n            {activeTab === \"webinars\" && <WebinarsTab />}\n            {activeTab === \"educationalvideos\" && <EducationalVideosTab />}\n            {activeTab === \"slides\" && <SlidesTab />}\n            {activeTab === \"quickaccess\" && <QuickAccessTab />}\n            {activeTab === \"magazines\" && <MagazinesTab />}\n            {activeTab === \"articles\" && <ArticlesTab />}\n            {activeTab === \"media\" && <MediaTab />}\n            {activeTab === \"aboutus\" && <AboutUsTab />}\n            {activeTab === \"contactus\" && <ContactUsTab />}\n            {activeTab === \"users\" && <UsersTab />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction CoursesTab() {\n  const { data: courses, isLoading } = useQuery<Course[]>({\n    queryKey: ['/api/courses'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        {[1, 2, 3].map(i => (\n          <div key={i} className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">دوره‌های آموزشی</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن دوره جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {courses && courses.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b\">\n                  <th className=\"text-right py-2\">عنوان</th>\n                  <th className=\"text-right py-2\">وضعیت</th>\n                  <th className=\"text-right py-2\">عملیات</th>\n                </tr>\n              </thead>\n              <tbody>\n                {courses.map(course => (\n                  <tr key={course.id} className=\"border-b\">\n                    <td className=\"py-3\">{course.title}</td>\n                    <td className=\"py-3\">\n                      <span className=\"px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs\">\n                        فعال\n                      </span>\n                    </td>\n                    <td className=\"py-3\">\n                      <div className=\"flex items-center gap-2\">\n                        <button className=\"p-1 hover:bg-gray-100 rounded\">\n                          <Eye className=\"h-4 w-4\" />\n                        </button>\n                        <button className=\"p-1 hover:bg-gray-100 rounded\">\n                          <Edit className=\"h-4 w-4\" />\n                        </button>\n                        <button className=\"p-1 hover:bg-gray-100 rounded text-red-500\">\n                          <Trash className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Video className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ دوره‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، دوره جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ProjectsTab() {\n  const { data: projects, isLoading } = useQuery<Project[]>({\n    queryKey: ['/api/projects'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">پروژه‌ها</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن پروژه جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {projects && projects.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {projects.map(project => (\n              <div key={project.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                <h3 className=\"font-medium mb-2\">{project.title}</h3>\n                <p className=\"text-sm text-gray-600 mb-4\">{project.description}</p>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-xs text-gray-500\">پروژه</span>\n                  <div className=\"flex gap-1\">\n                    <button className=\"p-1 hover:bg-gray-100 rounded\">\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"p-1 hover:bg-gray-100 rounded text-red-500\">\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Folder className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ پروژه‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، پروژه جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction DocumentsTab() {\n  const { data: documents, isLoading } = useQuery<Document[]>({\n    queryKey: ['/api/documents'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">کتابخانه اسناد</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن سند جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {documents && documents.length > 0 ? (\n          <div className=\"space-y-4\">\n            {documents.map(doc => (\n              <div key={doc.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <File className=\"h-8 w-8 text-blue-600\" />\n                  <div>\n                    <h3 className=\"font-medium\">{doc.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{doc.excerpt}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Eye className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded text-red-500\">\n                    <Trash className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <File className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ سندی یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، سند جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction SlidesTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingSlide, setEditingSlide] = useState<Slide | null>(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    imageUrl: '',\n    buttonText: '',\n    buttonUrl: '',\n    secondButtonText: '',\n    secondButtonUrl: '',\n    showButtons: true,\n    showIcon: true,\n    isActive: true,\n    order: 0,\n    gradientFrom: '',\n    gradientTo: '',\n    iconName: ''\n  });\n\n  const { data: slides, isLoading } = useQuery<Slide[]>({\n    queryKey: ['/api/slides'],\n  });\n\n  const queryClient = useQueryClient();\n\n  const createSlideMutation = useMutation({\n    mutationFn: async (slideData: any) => {\n      return apiRequest('/api/slides', {\n        method: 'POST',\n        body: JSON.stringify(slideData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n      setShowForm(false);\n      resetForm();\n    },\n  });\n\n  const updateSlideMutation = useMutation({\n    mutationFn: async ({ id, ...slideData }: any) => {\n      return apiRequest(`/api/slides/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(slideData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n      setShowForm(false);\n      setEditingSlide(null);\n      resetForm();\n    },\n  });\n\n  const deleteSlideMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return apiRequest(`/api/slides/${id}`, {\n        method: 'DELETE',\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n    },\n  });\n\n  const resetForm = () => {\n    setFormData({\n      title: '',\n      description: '',\n      imageUrl: '',\n      buttonText: '',\n      buttonUrl: '',\n      secondButtonText: '',\n      secondButtonUrl: '',\n      showButtons: true,\n      showIcon: true,\n      isActive: true,\n      order: 0,\n      gradientFrom: '',\n      gradientTo: '',\n      iconName: ''\n    });\n  };\n\n  const handleEdit = (slide: Slide) => {\n    setEditingSlide(slide);\n    setFormData({\n      title: slide.title,\n      description: slide.description,\n      imageUrl: slide.imageUrl || '',\n      buttonText: slide.buttonText || '',\n      buttonUrl: slide.buttonUrl || '',\n      secondButtonText: (slide as any).secondButtonText || '',\n      secondButtonUrl: (slide as any).secondButtonUrl || '',\n      showButtons: (slide as any).showButtons !== false,\n      showIcon: (slide as any).showIcon !== false,\n      isActive: slide.isActive || true,\n      order: slide.order || 0,\n      gradientFrom: slide.gradientFrom || '',\n      gradientTo: slide.gradientTo || '',\n      iconName: slide.iconName || ''\n    });\n    setShowForm(true);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (editingSlide) {\n      updateSlideMutation.mutate({ id: editingSlide.id, ...formData });\n    } else {\n      createSlideMutation.mutate(formData);\n    }\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا از حذف این اسلاید اطمینان دارید؟')) {\n      deleteSlideMutation.mutate(id);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-md\">\n        <div className=\"p-6 border-b\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-semibold\">مدیریت اسلایدها</h2>\n            <button \n              onClick={() => {\n                setShowForm(!showForm);\n                setEditingSlide(null);\n                resetForm();\n              }}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\"\n            >\n              <Plus className=\"h-4 w-4\" />\n              {showForm ? 'لغو' : 'افزودن اسلاید جدید'}\n            </button>\n          </div>\n        </div>\n        \n        {showForm && (\n          <div className=\"p-6 border-t bg-gray-50\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              {editingSlide ? 'ویرایش اسلاید' : 'افزودن اسلاید جدید'}\n            </h3>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    عنوان اسلاید\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.title}\n                    onChange={(e) => setFormData({...formData, title: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    متن دکمه\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.buttonText}\n                    onChange={(e) => setFormData({...formData, buttonText: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  توضیحات\n                </label>\n                <textarea\n                  value={formData.description}\n                  onChange={(e) => setFormData({...formData, description: e.target.value})}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    لینک دکمه اول\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.buttonUrl}\n                    onChange={(e) => setFormData({...formData, buttonUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"/courses\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    متن دکمه دوم (اختیاری)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.secondButtonText}\n                    onChange={(e) => setFormData({...formData, secondButtonText: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"درباره ما\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    لینک دکمه دوم (اختیاری)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.secondButtonUrl}\n                    onChange={(e) => setFormData({...formData, secondButtonUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"/about\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    URL تصویر (اختیاری)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.imageUrl}\n                    onChange={(e) => setFormData({...formData, imageUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"مثال: /uploads/image.jpg\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    لینک را از کتابخانه رسانه کپی کنید\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    رنگ شروع گرادیان\n                  </label>\n                  <select\n                    value={formData.gradientFrom}\n                    onChange={(e) => setFormData({...formData, gradientFrom: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">بدون گرادیان</option>\n                    <option value=\"blue-500\">آبی</option>\n                    <option value=\"green-500\">سبز</option>\n                    <option value=\"purple-500\">بنفش</option>\n                    <option value=\"red-500\">قرمز</option>\n                    <option value=\"yellow-500\">زرد</option>\n                    <option value=\"pink-500\">صورتی</option>\n                    <option value=\"indigo-500\">نیلی</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    رنگ پایان گرادیان\n                  </label>\n                  <select\n                    value={formData.gradientTo}\n                    onChange={(e) => setFormData({...formData, gradientTo: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">بدون گرادیان</option>\n                    <option value=\"purple-600\">بنفش تیره</option>\n                    <option value=\"blue-600\">آبی تیره</option>\n                    <option value=\"green-600\">سبز تیره</option>\n                    <option value=\"red-600\">قرمز تیره</option>\n                    <option value=\"yellow-600\">زرد تیره</option>\n                    <option value=\"pink-600\">صورتی تیره</option>\n                    <option value=\"indigo-600\">نیلی تیره</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    آیکون\n                  </label>\n                  <select\n                    value={formData.iconName}\n                    onChange={(e) => setFormData({...formData, iconName: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">بدون آیکون</option>\n                    <option value=\"GraduationCap\">فارغ‌التحصیلی</option>\n                    <option value=\"BookOpen\">کتاب باز</option>\n                    <option value=\"Rocket\">موشک</option>\n                    <option value=\"Star\">ستاره</option>\n                    <option value=\"Trophy\">جام</option>\n                    <option value=\"Target\">هدف</option>\n                    <option value=\"Lightbulb\">لامپ</option>\n                    <option value=\"Heart\">قلب</option>\n                    <option value=\"Globe\">کره زمین</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    ترتیب نمایش\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.order}\n                    onChange={(e) => setFormData({...formData, order: parseInt(e.target.value) || 0})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    min=\"0\"\n                  />\n                </div>\n\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"showButtons\"\n                    checked={formData.showButtons}\n                    onChange={(e) => setFormData({...formData, showButtons: e.target.checked})}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"showButtons\" className=\"mr-2 text-sm font-medium text-gray-700\">\n                    نمایش دکمه‌ها\n                  </label>\n                </div>\n\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"showIcon\"\n                    checked={formData.showIcon}\n                    onChange={(e) => setFormData({...formData, showIcon: e.target.checked})}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"showIcon\" className=\"mr-2 text-sm font-medium text-gray-700\">\n                    نمایش آیکون\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  id=\"isActive\"\n                  checked={formData.isActive}\n                  onChange={(e) => setFormData({...formData, isActive: e.target.checked})}\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                />\n                <label htmlFor=\"isActive\" className=\"mr-2 text-sm font-medium text-gray-700\">\n                  اسلاید فعال باشد\n                </label>\n              </div>\n\n              <div className=\"flex gap-3\">\n                <button\n                  type=\"submit\"\n                  disabled={createSlideMutation.isPending || updateSlideMutation.isPending}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50\"\n                >\n                  {createSlideMutation.isPending || updateSlideMutation.isPending ? 'در حال ذخیره...' : \n                   editingSlide ? 'بروزرسانی اسلاید' : 'ایجاد اسلاید'}\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingSlide(null);\n                    resetForm();\n                  }}\n                  className=\"px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors\"\n                >\n                  لغو\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n        \n        <div className=\"p-6\">\n          {slides && slides.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {slides.map(slide => (\n                <div key={slide.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <h3 className=\"font-medium\">{slide.title}</h3>\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      slide.isActive ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600'\n                    }`}>\n                      {slide.isActive ? 'فعال' : 'غیرفعال'}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-4\">{slide.description}</p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500\">ترتیب: {slide.order}</span>\n                    <div className=\"flex gap-1\">\n                      <button \n                        onClick={() => handleEdit(slide)}\n                        className=\"p-1 hover:bg-gray-100 rounded\"\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </button>\n                      <button \n                        onClick={() => handleDelete(slide.id)}\n                        className=\"p-1 hover:bg-gray-100 rounded text-red-500\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <Image className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ اسلایدی یافت نشد</h3>\n              <p className=\"text-gray-600\">برای شروع، اسلاید جدیدی اضافه کنید</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction MagazinesTab() {\n  const { data: magazines, isLoading } = useQuery<Magazine[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md\">\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">مجله‌ها</h2>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            افزودن مجله جدید\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {magazines && magazines.length > 0 ? (\n          <div className=\"space-y-4\">\n            {magazines.map(magazine => (\n              <div key={magazine.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <Calendar className=\"h-8 w-8 text-green-600\" />\n                  <div>\n                    <h3 className=\"font-medium\">{magazine.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{magazine.description}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Eye className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 hover:bg-gray-100 rounded text-red-500\">\n                    <Trash className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Calendar className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ مجله‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، مجله جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Users Tab Component\nfunction UsersTab() {\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\n  const [selectedCourseId, setSelectedCourseId] = useState<number>(0);\n  const [accessType, setAccessType] = useState<string>(\"granted\");\n  const [expiryDate, setExpiryDate] = useState<string>(\"\");\n\n  const { data: users = [], isLoading: usersLoading } = useQuery({\n    queryKey: [\"/api/users\"],\n  });\n\n  const { data: courses = [], isLoading: coursesLoading } = useQuery({\n    queryKey: [\"/api/courses\"],\n  });\n\n  const { data: userAccess = [], isLoading: accessLoading } = useQuery({\n    queryKey: [\"/api/users\", selectedUserId, \"course-access\"],\n    enabled: !!selectedUserId,\n  });\n\n  const grantAccessMutation = useMutation({\n    mutationFn: async (data: { userId: number; courseId: number; accessType: string; expiryDate?: string }) => {\n      return apiRequest(`/api/users/${data.userId}/grant-course-access`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          courseId: data.courseId,\n          accessType: data.accessType,\n          expiryDate: data.expiryDate,\n        }),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\", selectedUserId, \"course-access\"] });\n      setSelectedCourseId(0);\n      setExpiryDate(\"\");\n    },\n  });\n\n  const revokeAccessMutation = useMutation({\n    mutationFn: async (data: { userId: number; courseId: number }) => {\n      return apiRequest(`/api/users/${data.userId}/revoke-course-access/${data.courseId}`, {\n        method: \"DELETE\",\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\", selectedUserId, \"course-access\"] });\n    },\n  });\n\n  const handleGrantAccess = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (selectedUserId && selectedCourseId) {\n      grantAccessMutation.mutate({\n        userId: selectedUserId,\n        courseId: selectedCourseId,\n        accessType,\n        expiryDate: expiryDate || undefined,\n      });\n    }\n  };\n\n  const handleRevokeAccess = (courseId: number) => {\n    if (selectedUserId) {\n      revokeAccessMutation.mutate({\n        userId: selectedUserId,\n        courseId,\n      });\n    }\n  };\n\n  if (usersLoading || coursesLoading) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n        <p className=\"mt-4 text-gray-600\">در حال بارگذاری...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* User Selection */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">انتخاب کاربر</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {(users as any[]).map((user: any) => (\n            <div\n              key={user.id}\n              className={`p-4 border rounded-lg cursor-pointer transition-colors ${\n                selectedUserId === user.id\n                  ? \"border-blue-500 bg-blue-50\"\n                  : \"border-gray-200 hover:border-gray-300\"\n              }`}\n              onClick={() => setSelectedUserId(user.id)}\n            >\n              <h3 className=\"font-medium text-gray-900\">\n                {user.name || user.username}\n              </h3>\n              <p className=\"text-sm text-gray-600\">@{user.username}</p>\n              <div className=\"mt-2 flex gap-2\">\n                <span className={`px-2 py-1 text-xs rounded ${\n                  user.role === 'admin' \n                    ? 'bg-red-100 text-red-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {user.role === 'admin' ? 'مدیر' : 'کاربر'}\n                </span>\n                <span className={`px-2 py-1 text-xs rounded ${\n                  user.subscriptionStatus === 'vip'\n                    ? 'bg-purple-100 text-purple-800'\n                    : user.subscriptionStatus === 'premium'\n                    ? 'bg-yellow-100 text-yellow-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {user.subscriptionStatus === 'vip' ? 'ویژه' : \n                   user.subscriptionStatus === 'premium' ? 'پریمیوم' : 'رایگان'}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {selectedUserId && (\n        <>\n          {/* Grant Access Form */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">اعطای دسترسی دوره</h2>\n            <form onSubmit={handleGrantAccess} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  انتخاب دوره\n                </label>\n                <select\n                  value={selectedCourseId}\n                  onChange={(e) => setSelectedCourseId(parseInt(e.target.value))}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                  required\n                >\n                  <option value={0}>انتخاب کنید...</option>\n                  {(courses as any[]).map((course: any) => (\n                    <option key={course.id} value={course.id}>\n                      {course.title} - {course.accessLevel === 'free' ? 'رایگان' : \n                                       course.accessLevel === 'premium' ? 'پریمیوم' : 'ویژه'}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  نوع دسترسی\n                </label>\n                <select\n                  value={accessType}\n                  onChange={(e) => setAccessType(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                >\n                  <option value=\"granted\">اعطا شده</option>\n                  <option value=\"purchased\">خریداری شده</option>\n                  <option value=\"trial\">آزمایشی</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  تاریخ انقضا (اختیاری)\n                </label>\n                <input\n                  type=\"date\"\n                  value={expiryDate}\n                  onChange={(e) => setExpiryDate(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={grantAccessMutation.isPending}\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-medium disabled:opacity-50\"\n              >\n                {grantAccessMutation.isPending ? \"در حال اعطا...\" : \"اعطای دسترسی\"}\n              </button>\n            </form>\n          </div>\n\n          {/* Current Access */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">دسترسی‌های فعلی</h2>\n            {accessLoading ? (\n              <div className=\"text-center py-4\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"></div>\n              </div>\n            ) : (userAccess as any[]).length === 0 ? (\n              <p className=\"text-gray-600 text-center py-4\">\n                هیچ دسترسی‌ای برای این کاربر وجود ندارد\n              </p>\n            ) : (\n              <div className=\"space-y-3\">\n                {(userAccess as any[]).map((access: any) => {\n                  const course = (courses as any[]).find((c: any) => c.id === access.courseId);\n                  return (\n                    <div\n                      key={access.id}\n                      className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\"\n                    >\n                      <div>\n                        <h3 className=\"font-medium text-gray-900\">\n                          {course?.title || `دوره شماره ${access.courseId}`}\n                        </h3>\n                        <div className=\"flex gap-2 mt-1\">\n                          <span className=\"text-sm text-gray-600\">\n                            نوع: {access.accessType === 'granted' ? 'اعطا شده' : \n                                  access.accessType === 'purchased' ? 'خریداری شده' : 'آزمایشی'}\n                          </span>\n                          {access.expiryDate && (\n                            <span className=\"text-sm text-gray-600\">\n                              انقضا: {new Date(access.expiryDate).toLocaleDateString('fa-IR')}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => handleRevokeAccess(access.courseId)}\n                        disabled={revokeAccessMutation.isPending}\n                        className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm disabled:opacity-50\"\n                      >\n                        لغو دسترسی\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction MediaTab() {\n  const [uploadedFiles, setUploadedFiles] = useState([\n    { id: 1, name: 'course-cover.jpg', url: '/uploads/course-cover.jpg', type: 'image', size: '245 KB', uploadedAt: '1403/10/15' },\n    { id: 2, name: 'slider-bg.png', url: '/uploads/slider-bg.png', type: 'image', size: '512 KB', uploadedAt: '1403/10/14' },\n    { id: 3, name: 'document-sample.pdf', url: '/uploads/document-sample.pdf', type: 'document', size: '1.2 MB', uploadedAt: '1403/10/13' },\n  ]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showCopyDialog, setShowCopyDialog] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<any>(null);\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files) {\n      setIsUploading(true);\n      \n      try {\n        const formData = new FormData();\n        Array.from(files).forEach(file => {\n          formData.append('files', file);\n        });\n\n        const response = await fetch('/api/upload', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          const newFiles = result.files.map((file: any, index: number) => ({\n            id: uploadedFiles.length + index + 1,\n            name: file.name,\n            url: file.url,\n            type: file.type,\n            size: file.size,\n            uploadedAt: new Date().toLocaleDateString('fa-IR')\n          }));\n          setUploadedFiles(prev => [...prev, ...newFiles]);\n        } else {\n          console.error('Upload failed:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Upload error:', error);\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  const copyToClipboard = (url: string) => {\n    navigator.clipboard.writeText(url);\n  };\n\n  const deleteFile = (fileId: number) => {\n    setUploadedFiles(prev => prev.filter(f => f.id !== fileId));\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-md\">\n        <div className=\"p-6 border-b\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h3 className=\"text-lg font-semibold\">کتابخانه رسانه</h3>\n              <p className=\"text-sm text-gray-600 mt-1\">مدیریت تصاویر و فایل‌های سایت</p>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <label className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors cursor-pointer flex items-center gap-2\">\n                <Upload className=\"h-4 w-4\" />\n                {isUploading ? 'در حال آپلود...' : 'آپلود فایل'}\n                <input\n                  type=\"file\"\n                  multiple\n                  accept=\"image/*,application/pdf\"\n                  onChange={handleFileUpload}\n                  className=\"hidden\"\n                />\n              </label>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"p-6\">\n          {uploadedFiles && uploadedFiles.length > 0 ? (\n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n              {uploadedFiles.map(file => (\n                <div key={file.id} className=\"border rounded-lg p-3 hover:shadow-md transition-shadow\">\n                  <div className=\"aspect-square bg-gray-100 rounded-lg mb-3 flex items-center justify-center overflow-hidden\">\n                    {file.type === 'image' ? (\n                      <img \n                        src={file.url} \n                        alt={file.name}\n                        className=\"w-full h-full object-cover\"\n                        onError={(e) => {\n                          e.currentTarget.style.display = 'none';\n                          const nextElement = e.currentTarget.nextElementSibling;\n                          if (nextElement) {\n                            nextElement.classList.remove('hidden');\n                          }\n                        }}\n                      />\n                    ) : (\n                      <File className=\"h-8 w-8 text-gray-400\" />\n                    )}\n                  </div>\n                  <div className=\"space-y-1\">\n                    <h4 className=\"text-xs font-medium truncate\" title={file.name}>{file.name}</h4>\n                    <p className=\"text-xs text-gray-500\">{file.size}</p>\n                    <div className=\"flex items-center gap-1\">\n                      <button\n                        onClick={() => {\n                          setSelectedFile(file);\n                          setShowCopyDialog(true);\n                        }}\n                        className=\"flex-1 px-2 py-1 text-xs bg-blue-50 text-blue-600 rounded hover:bg-blue-100 transition-colors\"\n                      >\n                        کپی لینک\n                      </button>\n                      <button \n                        onClick={() => deleteFile(file.id)}\n                        className=\"p-1 text-red-500 hover:bg-red-50 rounded\"\n                      >\n                        <Trash className=\"h-3 w-3\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <Upload className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ فایلی آپلود نشده</h3>\n              <p className=\"text-gray-600\">برای شروع، فایل‌های خود را آپلود کنید</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Copy Link Dialog */}\n      {showCopyDialog && selectedFile && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-96 max-w-full mx-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold\">کپی لینک فایل</h3>\n              <button \n                onClick={() => setShowCopyDialog(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  لینک فایل:\n                </label>\n                <div className=\"flex gap-2\">\n                  <input\n                    type=\"text\"\n                    value={selectedFile.url}\n                    readOnly\n                    className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-sm\"\n                  />\n                  <button\n                    onClick={() => copyToClipboard(selectedFile.url)}\n                    className=\"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-1\"\n                  >\n                    <Copy className=\"h-4 w-4\" />\n                    کپی\n                  </button>\n                </div>\n              </div>\n              \n              <div className=\"text-xs text-gray-500\">\n                <p>از این لینک برای اضافه کردن تصویر به اسلایدها، نوشته‌ها یا هر جای دیگری استفاده کنید.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction QuickAccessTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingItem, setEditingItem] = useState<any>(null);\n  \n  const { data: quickAccessItems, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/quick-access'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch('/api/quick-access', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/quick-access'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n    onError: (error) => {\n      console.error('Create error:', error);\n      alert('خطا در ایجاد آیتم: ' + error.message);\n    }\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: ({ id, data }: { id: number; data: any }) => \n      fetch(`/api/quick-access/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      }).then(res => res.json()),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/quick-access'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => \n      fetch(`/api/quick-access/${id}`, {\n        method: 'DELETE'\n      }).then(res => res.json()),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/quick-access'] });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const data = {\n      iconUrl: formData.get('icon') as string,\n      title: formData.get('title') as string,\n      description: formData.get('description') as string,\n      link: formData.get('link') as string,\n      order: parseInt(formData.get('order') as string) || 0,\n      isActive: formData.get('isActive') === 'on',\n    };\n\n    if (editingItem) {\n      updateMutation.mutate({ id: editingItem.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold\">آیتم‌های دسترسی سریع</h3>\n        <button\n          onClick={() => {\n            setShowForm(true);\n            setEditingItem(null);\n          }}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          آیتم جدید\n        </button>\n      </div>\n\n      {showForm && (\n        <div className=\"bg-white p-6 rounded-lg border\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h4 className=\"text-md font-semibold\">\n              {editingItem ? 'ویرایش آیتم' : 'افزودن آیتم جدید'}\n            </h4>\n            <button\n              onClick={() => {\n                setShowForm(false);\n                setEditingItem(null);\n              }}\n              className=\"text-gray-500 hover:text-gray-700\"\n            >\n              <X className=\"h-5 w-5\" />\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">آیکون</label>\n                <div className=\"flex gap-2\">\n                  <input\n                    name=\"icon\"\n                    type=\"text\"\n                    defaultValue={editingItem?.iconUrl || ''}\n                    placeholder=\"مثال: /uploads/icon.png\"\n                    className=\"flex-1 px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => window.open('/admin-simple#media', '_blank')}\n                    className=\"px-3 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors flex items-center gap-1\"\n                  >\n                    <Upload className=\"h-4 w-4\" />\n                    رسانه\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">عنوان</label>\n                <input\n                  name=\"title\"\n                  type=\"text\"\n                  defaultValue={editingItem?.title || ''}\n                  placeholder=\"عنوان آیتم\"\n                  required\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">توضیحات</label>\n              <textarea\n                name=\"description\"\n                defaultValue={editingItem?.description || ''}\n                placeholder=\"توضیحات آیتم\"\n                rows={2}\n                className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">لینک</label>\n                <input\n                  name=\"link\"\n                  type=\"text\"\n                  defaultValue={editingItem?.link || ''}\n                  placeholder=\"مثال: /courses یا https://example.com\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">ترتیب</label>\n                <input\n                  name=\"order\"\n                  type=\"number\"\n                  defaultValue={editingItem?.order || ''}\n                  placeholder=\"0\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                name=\"isActive\"\n                type=\"checkbox\"\n                defaultChecked={editingItem?.isActive ?? true}\n                className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n              />\n              <label className=\"text-sm\">فعال</label>\n            </div>\n\n            <div className=\"flex gap-2 justify-end\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowForm(false);\n                  setEditingItem(null);\n                }}\n                className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\n              >\n                انصراف\n              </button>\n              <button\n                type=\"submit\"\n                disabled={createMutation.isPending || updateMutation.isPending}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending || updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره'}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b\">\n          <h4 className=\"font-semibold\">آیتم‌های موجود</h4>\n        </div>\n        <div className=\"divide-y\">\n          {quickAccessItems && quickAccessItems.map((item: any) => (\n            <div key={item.id} className=\"p-4 flex items-center justify-between\">\n              <div className=\"flex items-center gap-3\">\n                {item.iconUrl && (\n                  <img\n                    src={item.iconUrl}\n                    alt={item.title}\n                    className=\"w-8 h-8 object-cover rounded\"\n                  />\n                )}\n                <div>\n                  <h5 className=\"font-medium\">{item.title}</h5>\n                  {item.description && (\n                    <p className=\"text-sm text-gray-600\">{item.description}</p>\n                  )}\n                  {item.link && (\n                    <p className=\"text-xs text-blue-600\">{item.link}</p>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-500\">ترتیب: {item.order}</span>\n                <div className={`w-2 h-2 rounded-full ${item.isActive ? 'bg-green-500' : 'bg-gray-300'}`} />\n                <button\n                  onClick={() => {\n                    setEditingItem(item);\n                    setShowForm(true);\n                  }}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => deleteMutation.mutate(item.id)}\n                  disabled={deleteMutation.isPending}\n                  className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          {(!quickAccessItems || quickAccessItems?.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هیچ آیتمی یافت نشد. اولین آیتم را اضافه کنید.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction AboutUsTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingItem, setEditingItem] = useState<any>(null);\n\n  const { data: aboutUsData, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/about-us'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return await apiRequest('/api/about-us', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/about-us'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\n      return await apiRequest(`/api/about-us/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/about-us'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return await apiRequest(`/api/about-us/${id}`, {\n        method: 'DELETE',\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/about-us'] });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const data = {\n      title: formData.get('title'),\n      mainContent: formData.get('mainContent'),\n      mission: formData.get('mission'),\n      vision: formData.get('vision'),\n      values: formData.get('values'),\n      mainImageUrl: formData.get('mainImageUrl'),\n      foundingYear: formData.get('foundingYear'),\n      companySize: formData.get('companySize'),\n      isActive: formData.get('isActive') === 'on',\n    };\n\n    if (editingItem) {\n      updateMutation.mutate({ id: editingItem.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"p-8 text-center\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold\">مدیریت صفحه درباره ما</h3>\n          <button\n            onClick={() => setShowForm(true)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            افزودن محتوا\n          </button>\n        </div>\n\n        {showForm && (\n          <div className=\"p-4 border-b bg-gray-50\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">عنوان</label>\n                <input\n                  name=\"title\"\n                  type=\"text\"\n                  defaultValue={editingItem?.title || ''}\n                  placeholder=\"درباره ما\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">محتوای اصلی</label>\n                <textarea\n                  name=\"mainContent\"\n                  defaultValue={editingItem?.mainContent || ''}\n                  placeholder=\"متن اصلی درباره شرکت...\"\n                  rows={6}\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  required\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">ماموریت</label>\n                  <textarea\n                    name=\"mission\"\n                    defaultValue={editingItem?.mission || ''}\n                    placeholder=\"ماموریت شرکت...\"\n                    rows={3}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">چشم‌انداز</label>\n                  <textarea\n                    name=\"vision\"\n                    defaultValue={editingItem?.vision || ''}\n                    placeholder=\"چشم‌انداز شرکت...\"\n                    rows={3}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">ارزش‌ها</label>\n                  <textarea\n                    name=\"values\"\n                    defaultValue={editingItem?.values || ''}\n                    placeholder=\"ارزش‌های شرکت...\"\n                    rows={3}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">تصویر اصلی</label>\n                  <input\n                    name=\"mainImageUrl\"\n                    type=\"url\"\n                    defaultValue={editingItem?.mainImageUrl || ''}\n                    placeholder=\"https://example.com/image.jpg\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">سال تأسیس</label>\n                  <input\n                    name=\"foundingYear\"\n                    type=\"text\"\n                    defaultValue={editingItem?.foundingYear || ''}\n                    placeholder=\"1400\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">اندازه شرکت</label>\n                  <input\n                    name=\"companySize\"\n                    type=\"text\"\n                    defaultValue={editingItem?.companySize || ''}\n                    placeholder=\"50-100 نفر\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  name=\"isActive\"\n                  type=\"checkbox\"\n                  defaultChecked={editingItem?.isActive ?? true}\n                  className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                />\n                <label className=\"text-sm\">فعال</label>\n              </div>\n\n              <div className=\"flex gap-2 justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingItem(null);\n                  }}\n                  className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\n                >\n                  انصراف\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={createMutation.isPending || updateMutation.isPending}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {createMutation.isPending || updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره'}\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        <div className=\"divide-y\">\n          {aboutUsData && aboutUsData.map((item: any) => (\n            <div key={item.id} className=\"p-4 flex items-start justify-between\">\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-lg\">{item.title}</h4>\n                <p className=\"text-gray-600 mt-1 line-clamp-2\">{item.mainContent}</p>\n                <div className=\"mt-2 flex flex-wrap gap-2 text-sm text-gray-500\">\n                  {item.foundingYear && <span>تأسیس: {item.foundingYear}</span>}\n                  {item.companySize && <span>اندازه: {item.companySize}</span>}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className={`w-2 h-2 rounded-full ${item.isActive ? 'bg-green-500' : 'bg-gray-300'}`} />\n                <button\n                  onClick={() => {\n                    setEditingItem(item);\n                    setShowForm(true);\n                  }}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => deleteMutation.mutate(item.id)}\n                  disabled={deleteMutation.isPending}\n                  className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          {(!aboutUsData || aboutUsData.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هیچ محتوایی یافت نشد. اولین محتوا را اضافه کنید.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction WebinarsTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingItem, setEditingItem] = useState<any>(null);\n\n  const { data: webinars, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/webinars'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return await apiRequest('/api/webinars', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\n      return await apiRequest(`/api/webinars/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return await apiRequest(`/api/webinars/${id}`, {\n        method: 'DELETE',\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars'] });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const data = {\n      title: formData.get('title'),\n      description: formData.get('description'),\n      posterUrl: formData.get('posterUrl'),\n      eventDate: formData.get('eventDate'),\n      instructor: formData.get('instructor'),\n      duration: formData.get('duration'),\n      level: formData.get('level'),\n      category: formData.get('category'),\n      price: parseInt(formData.get('price') as string) || 0,\n      maxParticipants: parseInt(formData.get('maxParticipants') as string) || 0,\n      imageUrl: formData.get('imageUrl'),\n      isActive: formData.get('isActive') === 'on',\n    };\n\n    if (editingItem) {\n      updateMutation.mutate({ id: editingItem.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"p-8 text-center\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold\">مدیریت وبینارها</h3>\n          <button\n            onClick={() => setShowForm(true)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            افزودن وبینار\n          </button>\n        </div>\n\n        {showForm && (\n          <div className=\"p-4 border-b bg-gray-50\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">عنوان</label>\n                  <input\n                    name=\"title\"\n                    type=\"text\"\n                    defaultValue={editingItem?.title || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">مدرس</label>\n                  <input\n                    name=\"instructor\"\n                    type=\"text\"\n                    defaultValue={editingItem?.instructor || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">توضیحات</label>\n                <textarea\n                  name=\"description\"\n                  defaultValue={editingItem?.description || ''}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">تاریخ برگزاری</label>\n                  <input\n                    name=\"eventDate\"\n                    type=\"date\"\n                    defaultValue={editingItem?.eventDate || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">مدت زمان</label>\n                  <input\n                    name=\"duration\"\n                    type=\"text\"\n                    defaultValue={editingItem?.duration || ''}\n                    placeholder=\"۲ ساعت\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">سطح</label>\n                  <select\n                    name=\"level\"\n                    defaultValue={editingItem?.level || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">انتخاب کنید</option>\n                    <option value=\"مبتدی\">مبتدی</option>\n                    <option value=\"متوسط\">متوسط</option>\n                    <option value=\"پیشرفته\">پیشرفته</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  name=\"isActive\"\n                  type=\"checkbox\"\n                  defaultChecked={editingItem?.isActive ?? true}\n                  className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                />\n                <label className=\"text-sm\">فعال</label>\n              </div>\n\n              <div className=\"flex gap-2 justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingItem(null);\n                  }}\n                  className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\n                >\n                  انصراف\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={createMutation.isPending || updateMutation.isPending}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {createMutation.isPending || updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره'}\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        <div className=\"divide-y\">\n          {webinars && webinars.map((item: any) => (\n            <div key={item.id} className=\"p-4 flex items-start justify-between\">\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-lg\">{item.title}</h4>\n                <p className=\"text-gray-600 mt-1\">{item.description}</p>\n                <div className=\"mt-2 flex flex-wrap gap-2 text-sm text-gray-500\">\n                  {item.instructor && <span>مدرس: {item.instructor}</span>}\n                  {item.eventDate && <span>تاریخ: {item.eventDate}</span>}\n                  {item.duration && <span>مدت: {item.duration}</span>}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className={`w-2 h-2 rounded-full ${item.isActive ? 'bg-green-500' : 'bg-gray-300'}`} />\n                <button\n                  onClick={() => {\n                    setEditingItem(item);\n                    setShowForm(true);\n                  }}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => deleteMutation.mutate(item.id)}\n                  disabled={deleteMutation.isPending}\n                  className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          {(!webinars || webinars.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هیچ وبیناری یافت نشد. اولین وبینار را اضافه کنید.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction EducationalVideosTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingItem, setEditingItem] = useState<any>(null);\n\n  const { data: videos, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/educational-videos'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return await apiRequest('/api/educational-videos', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/educational-videos'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\n      return await apiRequest(`/api/educational-videos/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/educational-videos'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return await apiRequest(`/api/educational-videos/${id}`, {\n        method: 'DELETE',\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/educational-videos'] });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const data = {\n      title: formData.get('title'),\n      description: formData.get('description'),\n      videoUrl: formData.get('videoUrl'),\n      thumbnailUrl: formData.get('thumbnailUrl'),\n      duration: formData.get('duration'),\n      category: formData.get('category'),\n      level: formData.get('level'),\n      instructor: formData.get('instructor'),\n      isActive: formData.get('isActive') === 'on',\n      isPublic: formData.get('isPublic') === 'on',\n      requiresSubscription: formData.get('requiresSubscription') === 'on',\n      orderPosition: parseInt(formData.get('orderPosition') as string) || 0,\n    };\n\n    if (editingItem) {\n      updateMutation.mutate({ id: editingItem.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"p-8 text-center\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold\">مدیریت ویدیوهای آموزشی</h3>\n          <button\n            onClick={() => setShowForm(true)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            افزودن ویدیو\n          </button>\n        </div>\n\n        {showForm && (\n          <div className=\"p-4 border-b bg-gray-50\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">عنوان</label>\n                  <input\n                    name=\"title\"\n                    type=\"text\"\n                    defaultValue={editingItem?.title || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">مدرس</label>\n                  <input\n                    name=\"instructor\"\n                    type=\"text\"\n                    defaultValue={editingItem?.instructor || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">توضیحات</label>\n                <textarea\n                  name=\"description\"\n                  defaultValue={editingItem?.description || ''}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">لینک ویدیو</label>\n                  <input\n                    name=\"videoUrl\"\n                    type=\"url\"\n                    defaultValue={editingItem?.videoUrl || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">تصویر کوچک</label>\n                  <input\n                    name=\"thumbnailUrl\"\n                    type=\"url\"\n                    defaultValue={editingItem?.thumbnailUrl || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">مدت زمان</label>\n                  <input\n                    name=\"duration\"\n                    type=\"text\"\n                    defaultValue={editingItem?.duration || ''}\n                    placeholder=\"۱۰ دقیقه\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">دسته‌بندی</label>\n                  <input\n                    name=\"category\"\n                    type=\"text\"\n                    defaultValue={editingItem?.category || ''}\n                    placeholder=\"برنامه‌نویسی\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">سطح</label>\n                  <select\n                    name=\"level\"\n                    defaultValue={editingItem?.level || 'beginner'}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"beginner\">مبتدی</option>\n                    <option value=\"intermediate\">متوسط</option>\n                    <option value=\"advanced\">پیشرفته</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    name=\"isActive\"\n                    type=\"checkbox\"\n                    defaultChecked={editingItem?.isActive ?? true}\n                    className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                  />\n                  <label className=\"text-sm\">فعال</label>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    name=\"isPublic\"\n                    type=\"checkbox\"\n                    defaultChecked={editingItem?.isPublic ?? true}\n                    className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                  />\n                  <label className=\"text-sm\">عمومی</label>\n                </div>\n              </div>\n\n              <div className=\"flex gap-2 justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingItem(null);\n                  }}\n                  className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\n                >\n                  انصراف\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={createMutation.isPending || updateMutation.isPending}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {createMutation.isPending || updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره'}\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        <div className=\"divide-y\">\n          {videos && videos.map((item: any) => (\n            <div key={item.id} className=\"p-4 flex items-start justify-between\">\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-lg\">{item.title}</h4>\n                <p className=\"text-gray-600 mt-1\">{item.description}</p>\n                <div className=\"mt-2 flex flex-wrap gap-2 text-sm text-gray-500\">\n                  {item.instructor && <span>مدرس: {item.instructor}</span>}\n                  {item.duration && <span>مدت: {item.duration}</span>}\n                  {item.category && <span>دسته: {item.category}</span>}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className={`w-2 h-2 rounded-full ${item.isActive ? 'bg-green-500' : 'bg-gray-300'}`} />\n                <button\n                  onClick={() => {\n                    setEditingItem(item);\n                    setShowForm(true);\n                  }}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => deleteMutation.mutate(item.id)}\n                  disabled={deleteMutation.isPending}\n                  className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          {(!videos || videos.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هیچ ویدیویی یافت نشد. اولین ویدیو را اضافه کنید.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ArticlesTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingItem, setEditingItem] = useState<any>(null);\n\n  const { data: articles, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/articles'],\n  });\n\n  const { data: magazines } = useQuery<any[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return await apiRequest('/api/articles', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/articles'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\n      return await apiRequest(`/api/articles/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/articles'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return await apiRequest(`/api/articles/${id}`, {\n        method: 'DELETE',\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/articles'] });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const data = {\n      title: formData.get('title'),\n      author: formData.get('author'),\n      summary: formData.get('summary'),\n      content: formData.get('content'),\n      publishDate: formData.get('publishDate'),\n      featuredImageUrl: formData.get('featuredImageUrl'),\n      magazineId: parseInt(formData.get('magazineId') as string),\n      readTime: parseInt(formData.get('readTime') as string) || 0,\n      isPublished: formData.get('isPublished') === 'on',\n    };\n\n    if (editingItem) {\n      updateMutation.mutate({ id: editingItem.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"p-8 text-center\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold\">مدیریت مقاله‌ها</h3>\n          <button\n            onClick={() => setShowForm(true)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            افزودن مقاله\n          </button>\n        </div>\n\n        {showForm && (\n          <div className=\"p-4 border-b bg-gray-50\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">عنوان</label>\n                  <input\n                    name=\"title\"\n                    type=\"text\"\n                    defaultValue={editingItem?.title || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">نویسنده</label>\n                  <input\n                    name=\"author\"\n                    type=\"text\"\n                    defaultValue={editingItem?.author || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">خلاصه</label>\n                <textarea\n                  name=\"summary\"\n                  defaultValue={editingItem?.summary || ''}\n                  rows={2}\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">محتوا</label>\n                <textarea\n                  name=\"content\"\n                  defaultValue={editingItem?.content || ''}\n                  rows={6}\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">مجله</label>\n                  <select\n                    name=\"magazineId\"\n                    defaultValue={editingItem?.magazineId || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  >\n                    <option value=\"\">انتخاب کنید</option>\n                    {magazines && magazines.map((magazine: any) => (\n                      <option key={magazine.id} value={magazine.id}>\n                        {magazine.title}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">تاریخ انتشار</label>\n                  <input\n                    name=\"publishDate\"\n                    type=\"date\"\n                    defaultValue={editingItem?.publishDate || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">زمان مطالعه (دقیقه)</label>\n                  <input\n                    name=\"readTime\"\n                    type=\"number\"\n                    defaultValue={editingItem?.readTime || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  name=\"isPublished\"\n                  type=\"checkbox\"\n                  defaultChecked={editingItem?.isPublished ?? true}\n                  className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                />\n                <label className=\"text-sm\">منتشر شده</label>\n              </div>\n\n              <div className=\"flex gap-2 justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingItem(null);\n                  }}\n                  className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\n                >\n                  انصراف\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={createMutation.isPending || updateMutation.isPending}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {createMutation.isPending || updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره'}\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        <div className=\"divide-y\">\n          {articles && articles.map((item: any) => (\n            <div key={item.id} className=\"p-4 flex items-start justify-between\">\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-lg\">{item.title}</h4>\n                <p className=\"text-gray-600 mt-1\">{item.summary}</p>\n                <div className=\"mt-2 flex flex-wrap gap-2 text-sm text-gray-500\">\n                  {item.author && <span>نویسنده: {item.author}</span>}\n                  {item.publishDate && <span>انتشار: {item.publishDate}</span>}\n                  {item.readTime && <span>مطالعه: {item.readTime} دقیقه</span>}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className={`w-2 h-2 rounded-full ${item.isPublished ? 'bg-green-500' : 'bg-gray-300'}`} />\n                <button\n                  onClick={() => {\n                    setEditingItem(item);\n                    setShowForm(true);\n                  }}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => deleteMutation.mutate(item.id)}\n                  disabled={deleteMutation.isPending}\n                  className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          {(!articles || articles.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هیچ مقاله‌ای یافت نشد. اولین مقاله را اضافه کنید.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ContactUsTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingItem, setEditingItem] = useState<any>(null);\n\n  const { data: contactUsData, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/contact-us'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return await apiRequest('/api/contact-us', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-us'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\n      return await apiRequest(`/api/contact-us/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-us'] });\n      setShowForm(false);\n      setEditingItem(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return await apiRequest(`/api/contact-us/${id}`, {\n        method: 'DELETE',\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-us'] });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    \n    const socialLinks = {\n      instagram: formData.get('instagram') || '',\n      telegram: formData.get('telegram') || '',\n      linkedin: formData.get('linkedin') || '',\n      twitter: formData.get('twitter') || '',\n    };\n\n    const data = {\n      title: formData.get('title'),\n      description: formData.get('description'),\n      address: formData.get('address'),\n      phone: formData.get('phone'),\n      email: formData.get('email'),\n      workingHours: formData.get('workingHours'),\n      mapUrl: formData.get('mapUrl'),\n      mapLatitude: formData.get('mapLatitude'),\n      mapLongitude: formData.get('mapLongitude'),\n      socialLinks,\n      isActive: formData.get('isActive') === 'on',\n    };\n\n    if (editingItem) {\n      updateMutation.mutate({ id: editingItem.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"p-8 text-center\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold\">مدیریت صفحه تماس با ما</h3>\n          <button\n            onClick={() => setShowForm(true)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            افزودن اطلاعات تماس\n          </button>\n        </div>\n\n        {showForm && (\n          <div className=\"p-4 border-b bg-gray-50\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">عنوان</label>\n                <input\n                  name=\"title\"\n                  type=\"text\"\n                  defaultValue={editingItem?.title || ''}\n                  placeholder=\"تماس با ما\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">توضیحات</label>\n                <textarea\n                  name=\"description\"\n                  defaultValue={editingItem?.description || ''}\n                  placeholder=\"متن توضیحات برای صفحه تماس...\"\n                  rows={3}\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">آدرس</label>\n                <textarea\n                  name=\"address\"\n                  defaultValue={editingItem?.address || ''}\n                  placeholder=\"آدرس کامل شرکت...\"\n                  rows={2}\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">تلفن</label>\n                  <input\n                    name=\"phone\"\n                    type=\"text\"\n                    defaultValue={editingItem?.phone || ''}\n                    placeholder=\"021-12345678\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">ایمیل</label>\n                  <input\n                    name=\"email\"\n                    type=\"email\"\n                    defaultValue={editingItem?.email || ''}\n                    placeholder=\"info@company.com\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">ساعات کاری</label>\n                <input\n                  name=\"workingHours\"\n                  type=\"text\"\n                  defaultValue={editingItem?.workingHours || ''}\n                  placeholder=\"شنبه تا چهارشنبه 9 الی 17\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">URL نقشه (Google Maps Embed)</label>\n                <input\n                  name=\"mapUrl\"\n                  type=\"url\"\n                  defaultValue={editingItem?.mapUrl || ''}\n                  placeholder=\"https://www.google.com/maps/embed?pb=...\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">عرض جغرافیایی</label>\n                  <input\n                    name=\"mapLatitude\"\n                    type=\"text\"\n                    defaultValue={editingItem?.mapLatitude || ''}\n                    placeholder=\"35.6892\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">طول جغرافیایی</label>\n                  <input\n                    name=\"mapLongitude\"\n                    type=\"text\"\n                    defaultValue={editingItem?.mapLongitude || ''}\n                    placeholder=\"51.3890\"\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label className=\"block text-sm font-medium\">شبکه‌های اجتماعی</label>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-xs text-gray-600 mb-1\">اینستاگرام</label>\n                    <input\n                      name=\"instagram\"\n                      type=\"url\"\n                      defaultValue={editingItem?.socialLinks?.instagram || ''}\n                      placeholder=\"https://instagram.com/...\"\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-xs text-gray-600 mb-1\">تلگرام</label>\n                    <input\n                      name=\"telegram\"\n                      type=\"url\"\n                      defaultValue={editingItem?.socialLinks?.telegram || ''}\n                      placeholder=\"https://t.me/...\"\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-xs text-gray-600 mb-1\">لینکدین</label>\n                    <input\n                      name=\"linkedin\"\n                      type=\"url\"\n                      defaultValue={editingItem?.socialLinks?.linkedin || ''}\n                      placeholder=\"https://linkedin.com/...\"\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-xs text-gray-600 mb-1\">توییتر</label>\n                    <input\n                      name=\"twitter\"\n                      type=\"url\"\n                      defaultValue={editingItem?.socialLinks?.twitter || ''}\n                      placeholder=\"https://twitter.com/...\"\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  name=\"isActive\"\n                  type=\"checkbox\"\n                  defaultChecked={editingItem?.isActive ?? true}\n                  className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                />\n                <label className=\"text-sm\">فعال</label>\n              </div>\n\n              <div className=\"flex gap-2 justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingItem(null);\n                  }}\n                  className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\n                >\n                  انصراف\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={createMutation.isPending || updateMutation.isPending}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {createMutation.isPending || updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره'}\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        <div className=\"divide-y\">\n          {contactUsData && contactUsData.map((item: any) => (\n            <div key={item.id} className=\"p-4 flex items-start justify-between\">\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-lg\">{item.title}</h4>\n                <p className=\"text-gray-600 mt-1\">{item.description}</p>\n                <div className=\"mt-2 space-y-1 text-sm text-gray-600\">\n                  {item.address && <div><strong>آدرس:</strong> {item.address}</div>}\n                  {item.phone && <div><strong>تلفن:</strong> {item.phone}</div>}\n                  {item.email && <div><strong>ایمیل:</strong> {item.email}</div>}\n                  {item.workingHours && <div><strong>ساعات کاری:</strong> {item.workingHours}</div>}\n                </div>\n                {item.socialLinks && (\n                  <div className=\"mt-2 flex flex-wrap gap-2\">\n                    {Object.entries(item.socialLinks).map(([platform, url]) => (\n                      url && (\n                        <a\n                          key={platform}\n                          href={url as string}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"text-blue-600 hover:text-blue-800 text-sm\"\n                        >\n                          {platform}\n                        </a>\n                      )\n                    ))}\n                  </div>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className={`w-2 h-2 rounded-full ${item.isActive ? 'bg-green-500' : 'bg-gray-300'}`} />\n                <button\n                  onClick={() => {\n                    setEditingItem(item);\n                    setShowForm(true);\n                  }}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => deleteMutation.mutate(item.id)}\n                  disabled={deleteMutation.isPending}\n                  className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          {(!contactUsData || contactUsData.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هیچ اطلاعات تماسی یافت نشد. اولین اطلاعات را اضافه کنید.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":114537},"client/src/pages/admin.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { type Course, type Document, type MediaContent, type Magazine, type Article, type ArticleContent, type Slide, type Workshop, type WorkshopSection, type WorkshopRegistration } from \"@shared/schema\";\nimport { Calendar, Edit, Eye, File, Folder, Image, Lock, LockOpen, MoreHorizontal, Plus, RefreshCw, Trash, Upload, Video, X, Info, Phone } from \"lucide-react\";\nimport WorkshopsTab from \"@/components/admin/WorkshopsTab\";\nimport WebinarSectionsTab from \"@/components/admin/WebinarSectionsTab\";\n\nexport default function AdminPage() {\n  const [activeTab, setActiveTab] = useState(\"workshop-registrations\");\n\n  // Listen for admin tab switch messages\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      if (event.data.type === 'ADMIN_TAB_SWITCH') {\n        setActiveTab(event.data.tab);\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, []);\n\n  const tabs = [\n    { id: \"courses\", label: \"دوره‌ها\", icon: Video },\n    { id: \"webinars\", label: \"وبینارهای آموزشی\", icon: Video },\n    { id: \"webinar-sections\", label: \"بخش‌های وبینار\", icon: Folder },\n    { id: \"educational-videos\", label: \"ویدیوهای آموزشی\", icon: Video },\n    { id: \"documents\", label: \"آرشیو پیستاط\", icon: File },\n    { id: \"media\", label: \"کتابخانه رسانه\", icon: Image },\n    { id: \"slides\", label: \"اسلایدها\", icon: Image },\n    { id: \"quick-access\", label: \"دسترسی سریع\", icon: MoreHorizontal },\n    { id: \"magazines\", label: \"مجله‌ها\", icon: Calendar },\n    { id: \"articles\", label: \"مقاله‌ها\", icon: File },\n    { id: \"workshops\", label: \"کارگاه‌ها\", icon: Calendar },\n    { id: \"workshop-registrations\", label: \"ثبت‌نام کارگاه‌ها\", icon: Edit },\n    { id: \"about-us\", label: \"درباره ما\", icon: Info },\n    { id: \"contact-us\", label: \"تماس با ما\", icon: Phone },\n    { id: \"users\", label: \"کاربران\", icon: Lock }\n  ];\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">پنل مدیریت</h1>\n          <p className=\"text-gray-600\">مدیریت محتوا و تنظیمات سایت</p>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-4 py-6 flex gap-6\">\n        {/* Sidebar Navigation */}\n        <div className=\"w-64 bg-white rounded-lg border p-4 h-fit shadow-sm\">\n          <h3 className=\"font-semibold text-gray-900 mb-4\">دسته‌بندی‌ها</h3>\n          <nav className=\"space-y-1\">\n            {tabs.map(tab => {\n              const IconComponent = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg transition-colors text-right ${\n                    activeTab === tab.id \n                      ? 'bg-blue-50 text-blue-600 font-medium border-r-2 border-blue-600' \n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-800'\n                  }`}\n                >\n                  <IconComponent className=\"h-5 w-5\" />\n                  {tab.label}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 space-y-6\">\n          {activeTab === \"courses\" && <CoursesTab />}\n          {activeTab === \"webinars\" && <WebinarsManagerTab />}\n          {activeTab === \"webinar-sections\" && <WebinarSectionsTab />}\n          {activeTab === \"educational-videos\" && <EducationalVideosTab />}\n          {activeTab === \"documents\" && <DocumentsTab />}\n          {activeTab === \"media\" && <MediaTab />}\n          {activeTab === \"slides\" && <SlidesTab />}\n          {activeTab === \"quick-access\" && <QuickAccessTab />}\n          {activeTab === \"magazines\" && <MagazinesTab />}\n          {activeTab === \"articles\" && <ArticlesTab />}\n          {activeTab === \"workshops\" && <WorkshopsTab />}\n          {activeTab === \"workshop-registrations\" && <WorkshopRegistrationsTab />}\n          {activeTab === \"about-us\" && <AboutUsTab />}\n          {activeTab === \"contact-us\" && <ContactUsTab />}\n          {activeTab === \"users\" && <UsersTab />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction WebinarsManagerTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingWebinar, setEditingWebinar] = useState<any>(null);\n  const [createData, setCreateData] = useState({\n    title: '',\n    description: '',\n    instructor: '',\n    duration: '',\n    eventDate: '',\n    imageUrl: '',\n    level: 'beginner' as const,\n    category: '',\n    price: 0,\n    maxParticipants: 0\n  });\n\n  const { data: webinars, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/webinars'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch('/api/webinars', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Create error:', errorText);\n        throw new Error('خطا در ایجاد وبینار');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars'] });\n      queryClient.refetchQueries({ queryKey: ['/api/webinars'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        description: '',\n        instructor: '',\n        duration: '',\n        eventDate: '',\n        imageUrl: '',\n        level: 'beginner',\n        category: '',\n        price: 0,\n        maxParticipants: 0\n      });\n      alert('وبینار با موفقیت ایجاد شد');\n    },\n    onError: (error) => {\n      console.error('Create error:', error);\n      alert('خطا در ایجاد وبینار');\n    }\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\n      const response = await fetch(`/api/webinars/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در ویرایش وبینار');\n      }\n      \n      return response.json();\n    },\n    onSuccess: (updatedWebinar) => {\n      // Immediately update the cache with the new data\n      queryClient.setQueryData(['/api/webinars'], (oldData: any[]) => {\n        if (!oldData) return [];\n        return oldData.map(webinar => \n          webinar.id === updatedWebinar.id ? updatedWebinar : webinar\n        );\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars'] });\n      queryClient.refetchQueries({ queryKey: ['/api/webinars'] });\n      setEditingWebinar(null);\n      // Show success message\n      alert('وبینار با موفقیت ویرایش شد');\n    },\n    onError: (error) => {\n      console.error('Update error:', error);\n      alert('خطا در ویرایش وبینار');\n    }\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/webinars/${id}`, {\n        method: 'DELETE'\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف وبینار');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars'] });\n      queryClient.refetchQueries({ queryKey: ['/api/webinars'] });\n      alert('وبینار با موفقیت حذف شد');\n    },\n    onError: (error) => {\n      console.error('Delete error:', error);\n      alert('خطا در حذف وبینار');\n    }\n  });\n\n  const handleCreate = () => {\n    // Only require title - all other fields are optional\n    if (!createData.title.trim()) {\n      alert('عنوان وبینار الزامی است');\n      return;\n    }\n    \n    createMutation.mutate(createData);\n  };\n\n  const handleEdit = (webinar: any) => {\n    setEditingWebinar({ ...webinar });\n  };\n\n  const handleUpdate = () => {\n    if (editingWebinar) {\n      updateMutation.mutate({\n        id: editingWebinar.id,\n        data: editingWebinar\n      });\n    }\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا مطمئن هستید که می‌خواهید این وبینار را حذف کنید؟')) {\n      deleteMutation.mutate(id);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"h-6 bg-gray-200 rounded animate-pulse\"></div>\n        <div className=\"h-4 bg-gray-200 rounded animate-pulse w-2/3\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">وبینارهای آموزشی</h2>\n        <button \n          onClick={() => setShowCreateForm(true)}\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          وبینار جدید\n        </button>\n      </div>\n\n      {/* Create Form */}\n      {showCreateForm && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">ایجاد وبینار جدید</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">عنوان</label>\n              <input\n                type=\"text\"\n                value={createData.title}\n                onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">مدرس</label>\n              <input\n                type=\"text\"\n                value={createData.instructor}\n                onChange={(e) => setCreateData({...createData, instructor: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">مدت زمان</label>\n              <input\n                type=\"text\"\n                value={createData.duration}\n                onChange={(e) => setCreateData({...createData, duration: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">تاریخ برگزاری</label>\n              <input\n                type=\"date\"\n                value={createData.eventDate}\n                onChange={(e) => setCreateData({...createData, eventDate: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">قیمت (تومان)</label>\n              <input\n                type=\"number\"\n                value={createData.price}\n                onChange={(e) => setCreateData({...createData, price: Number(e.target.value)})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">حداکثر شرکت‌کننده</label>\n              <input\n                type=\"number\"\n                value={createData.maxParticipants}\n                onChange={(e) => setCreateData({...createData, maxParticipants: Number(e.target.value)})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">دسته‌بندی</label>\n              <input\n                type=\"text\"\n                value={createData.category}\n                onChange={(e) => setCreateData({...createData, category: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n          <div className=\"mt-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">توضیحات</label>\n            <textarea\n              value={createData.description}\n              onChange={(e) => setCreateData({...createData, description: e.target.value})}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          <div className=\"mt-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">عکس پوستر</label>\n            <div className=\"flex items-center gap-4\">\n              <input\n                type=\"text\"\n                value={createData.imageUrl}\n                onChange={(e) => setCreateData({...createData, imageUrl: e.target.value})}\n                placeholder=\"آدرس عکس پوستر\"\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'media-library' }, '*');\n                }}\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n              >\n                انتخاب از کتابخانه\n              </button>\n            </div>\n            {createData.imageUrl && (\n              <div className=\"mt-2\">\n                <img\n                  src={createData.imageUrl}\n                  alt=\"پیش‌نمایش\"\n                  className=\"max-h-32 rounded-md border\"\n                />\n              </div>\n            )}\n          </div>\n          <div className=\"flex gap-2 mt-4\">\n            <button\n              onClick={handleCreate}\n              disabled={createMutation.isPending}\n              className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50\"\n            >\n              {createMutation.isPending ? 'در حال ایجاد...' : 'ایجاد'}\n            </button>\n            <button\n              onClick={() => setShowCreateForm(false)}\n              className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n            >\n              لغو\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Form */}\n      {editingWebinar && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">ویرایش وبینار</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">عنوان</label>\n              <input\n                type=\"text\"\n                value={editingWebinar.title}\n                onChange={(e) => setEditingWebinar({...editingWebinar, title: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">مدرس</label>\n              <input\n                type=\"text\"\n                value={editingWebinar.instructor}\n                onChange={(e) => setEditingWebinar({...editingWebinar, instructor: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">مدت زمان</label>\n              <input\n                type=\"text\"\n                value={editingWebinar.duration}\n                onChange={(e) => setEditingWebinar({...editingWebinar, duration: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">تاریخ برگزاری</label>\n              <input\n                type=\"date\"\n                value={editingWebinar.eventDate}\n                onChange={(e) => setEditingWebinar({...editingWebinar, eventDate: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">قیمت (تومان)</label>\n              <input\n                type=\"number\"\n                value={editingWebinar.price || 0}\n                onChange={(e) => setEditingWebinar({...editingWebinar, price: Number(e.target.value)})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">حداکثر شرکت‌کننده</label>\n              <input\n                type=\"number\"\n                value={editingWebinar.maxParticipants || 0}\n                onChange={(e) => setEditingWebinar({...editingWebinar, maxParticipants: Number(e.target.value)})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">دسته‌بندی</label>\n              <input\n                type=\"text\"\n                value={editingWebinar.category || ''}\n                onChange={(e) => setEditingWebinar({...editingWebinar, category: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n          <div className=\"mt-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">توضیحات</label>\n            <textarea\n              value={editingWebinar.description}\n              onChange={(e) => setEditingWebinar({...editingWebinar, description: e.target.value})}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          <div className=\"mt-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">عکس پوستر</label>\n            <div className=\"flex items-center gap-4\">\n              <input\n                type=\"text\"\n                value={editingWebinar.imageUrl || ''}\n                onChange={(e) => setEditingWebinar({...editingWebinar, imageUrl: e.target.value})}\n                placeholder=\"آدرس عکس پوستر\"\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'media-library' }, '*');\n                }}\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n              >\n                انتخاب از کتابخانه\n              </button>\n            </div>\n            {editingWebinar.imageUrl && (\n              <div className=\"mt-2\">\n                <img\n                  src={editingWebinar.imageUrl}\n                  alt=\"پیش‌نمایش\"\n                  className=\"max-h-32 rounded-md border\"\n                />\n              </div>\n            )}\n          </div>\n          <div className=\"flex gap-2 mt-4\">\n            <button\n              onClick={handleUpdate}\n              disabled={updateMutation.isPending}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {updateMutation.isPending ? 'در حال ویرایش...' : 'ویرایش'}\n            </button>\n            <button\n              onClick={() => setEditingWebinar(null)}\n              className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n            >\n              لغو\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b\">\n          <h4 className=\"font-semibold\">وبینارهای موجود</h4>\n        </div>\n        <div className=\"divide-y\">\n          {webinars && webinars.map((webinar: any) => (\n            <div key={webinar.id} className=\"p-4 flex items-center justify-between\">\n              <div className=\"flex-1\">\n                <h5 className=\"font-medium\">{webinar.title}</h5>\n                <p className=\"text-sm text-gray-600\">{webinar.description}</p>\n                <div className=\"flex gap-4 mt-2 text-xs text-gray-500\">\n                  {webinar.instructor && <span>👨‍🏫 {webinar.instructor}</span>}\n                  {webinar.duration && <span>⏱️ {webinar.duration}</span>}\n                  {webinar.eventDate && <span>📅 {webinar.eventDate}</span>}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button \n                  onClick={() => handleEdit(webinar)}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button \n                  onClick={() => handleDelete(webinar.id)}\n                  className=\"text-red-600 hover:text-red-800\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          \n          {(!webinars || webinars.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هنوز وبیناری اضافه نشده است.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction CoursesTab() {\n  const { data: courses, isLoading } = useQuery<Course[]>({\n    queryKey: ['/api/courses'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"h-6 bg-gray-200 rounded animate-pulse\"></div>\n        <div className=\"h-4 bg-gray-200 rounded animate-pulse w-2/3\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">دوره‌ها</h2>\n        <button className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n          <Plus className=\"h-4 w-4\" />\n          دوره جدید\n        </button>\n      </div>\n\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b\">\n          <h4 className=\"font-semibold\">دوره‌های موجود</h4>\n        </div>\n        <div className=\"divide-y\">\n          {courses && courses.map((course: Course) => (\n            <div key={course.id} className=\"p-4 flex items-center justify-between\">\n              <div>\n                <h5 className=\"font-medium\">{course.title}</h5>\n                <p className=\"text-sm text-gray-600\">{course.description}</p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button className=\"text-blue-600 hover:text-blue-800\">\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button className=\"text-red-600 hover:text-red-800\">\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction DocumentsTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingPost, setEditingPost] = useState<any>(null);\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [createData, setCreateData] = useState({\n    title: '',\n    content: '',\n    excerpt: '',\n    featuredImage: '',\n    category: 'general',\n    tags: '',\n    status: 'published',\n    allowComments: true,\n    isSticky: false,\n    seoTitle: '',\n    seoDescription: '',\n    customFields: ''\n  });\n\n  const { data: posts, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/documents'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: (data: any) => {\n      const postData = {\n        ...data,\n        tags: data.tags.split(',').map((tag: string) => tag.trim()).filter(Boolean),\n        customFields: data.customFields ? JSON.parse(data.customFields) : {}\n      };\n      return apiRequest('/api/documents', { method: 'POST', body: JSON.stringify(postData) });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/documents'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        content: '',\n        excerpt: '',\n        featuredImage: '',\n        category: 'general',\n        tags: '',\n        status: 'published',\n        allowComments: true,\n        isSticky: false,\n        seoTitle: '',\n        seoDescription: '',\n        customFields: ''\n      });\n    },\n    onError: (error) => {\n      console.error('Error creating post:', error);\n      alert('خطا در ایجاد پست: ' + error.message);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: (data: any) => {\n      const postData = {\n        ...data,\n        tags: typeof data.tags === 'string' ? data.tags.split(',').map((tag: string) => tag.trim()).filter(Boolean) : data.tags,\n        customFields: typeof data.customFields === 'string' ? JSON.parse(data.customFields) : data.customFields\n      };\n      return apiRequest(`/api/documents/${editingPost.id}`, { method: 'PUT', body: JSON.stringify(postData) });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/documents'] });\n      setEditingPost(null);\n    },\n    onError: (error) => {\n      console.error('Error updating post:', error);\n      alert('خطا در بروزرسانی پست: ' + error.message);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => apiRequest(`/api/documents/${id}`, { method: 'DELETE' }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/documents'] });\n    },\n    onError: (error) => {\n      console.error('Error deleting post:', error);\n      alert('خطا در حذف پست: ' + error.message);\n    },\n  });\n\n  const handleCreateSubmit = () => {\n    if (!createData.title.trim()) {\n      alert('لطفاً عنوان پست را وارد کنید');\n      return;\n    }\n    if (!createData.content.trim()) {\n      alert('لطفاً محتوای پست را وارد کنید');\n      return;\n    }\n    createMutation.mutate(createData);\n  };\n\n  const handleUpdateSubmit = () => {\n    updateMutation.mutate(editingPost);\n  };\n\n  const handleEdit = (post: any) => {\n    setEditingPost({ \n      ...post, \n      tags: Array.isArray(post.tags) ? post.tags.join(', ') : post.tags || '',\n      customFields: post.customFields ? JSON.stringify(post.customFields, null, 2) : ''\n    });\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا از حذف این پست اطمینان دارید؟')) {\n      deleteMutation.mutate(id);\n    }\n  };\n\n  const categories = [\n    { value: 'general', label: 'عمومی' },\n    { value: 'agriculture', label: 'کشاورزی' },\n    { value: 'technology', label: 'فناوری' },\n    { value: 'education', label: 'آموزش' },\n    { value: 'research', label: 'پژوهش' },\n    { value: 'news', label: 'اخبار' }\n  ];\n\n  const statuses = [\n    { value: 'published', label: 'منتشر شده' },\n    { value: 'draft', label: 'پیش‌نویس' },\n    { value: 'private', label: 'خصوصی' },\n    { value: 'pending', label: 'در انتظار بررسی' }\n  ];\n\n  const filteredPosts = posts?.filter(post => {\n    const statusMatch = filterStatus === 'all' || post.status === filterStatus;\n    const categoryMatch = filterCategory === 'all' || post.category === filterCategory;\n    return statusMatch && categoryMatch;\n  }) || [];\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">آرشیو پیستاط</h2>\n        <button\n          onClick={() => setShowCreateForm(true)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          افزودن پست جدید\n        </button>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg border p-4\">\n        <div className=\"flex gap-4 flex-wrap\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">وضعیت</label>\n            <select\n              value={filterStatus}\n              onChange={(e) => setFilterStatus(e.target.value)}\n              className=\"px-3 py-2 border rounded-lg text-sm\"\n            >\n              <option value=\"all\">همه</option>\n              {statuses.map(status => (\n                <option key={status.value} value={status.value}>{status.label}</option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">دسته‌بندی</label>\n            <select\n              value={filterCategory}\n              onChange={(e) => setFilterCategory(e.target.value)}\n              className=\"px-3 py-2 border rounded-lg text-sm\"\n            >\n              <option value=\"all\">همه</option>\n              {categories.map(category => (\n                <option key={category.value} value={category.value}>{category.label}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Create Form */}\n      {showCreateForm && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">افزودن پست جدید</h3>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Main Content */}\n            <div className=\"lg:col-span-2 space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n                <input\n                  type=\"text\"\n                  value={createData.title}\n                  onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"عنوان پست\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">محتوا</label>\n                <div className=\"border rounded-lg\">\n                  <div className=\"border-b p-2 bg-gray-50 flex items-center gap-2\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const imageUrl = prompt('آدرس تصویر را وارد کنید:\\n\\n(راهنمایی: از کتابخانه رسانه در پنل ادمین می‌توانید تصاویر آپلود کنید و آدرس آنها را کپی کنید)');\n                        if (imageUrl) {\n                          const imageTag = `\\n\\n<img src=\"${imageUrl}\" alt=\"تصویر\" style=\"max-width: 100%; height: auto; margin: 10px 0;\" />\\n\\n`;\n                          setCreateData({...createData, content: createData.content + imageTag});\n                        }\n                      }}\n                      className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 flex items-center gap-1\"\n                    >\n                      <Image className=\"h-4 w-4\" />\n                      افزودن تصویر\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const mediaUrl = '/uploads/';\n                        alert('برای انتخاب تصویر، ابتدا از بخش \"کتابخانه رسانه\" تصویر مورد نظر را آپلود کنید، سپس آدرس آن را کپی کنید و در اینجا استفاده کنید.');\n                      }}\n                      className=\"px-3 py-1 text-sm bg-purple-600 text-white rounded hover:bg-purple-700 flex items-center gap-1\"\n                    >\n                      <Image className=\"h-4 w-4\" />\n                      کتابخانه رسانه\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const linkText = prompt('متن لینک را وارد کنید:');\n                        const linkUrl = prompt('آدرس لینک را وارد کنید:');\n                        if (linkText && linkUrl) {\n                          const linkTag = `[${linkText}](${linkUrl})`;\n                          setCreateData({...createData, content: createData.content + linkTag});\n                        }\n                      }}\n                      className=\"px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700 flex items-center gap-1\"\n                    >\n                      <Plus className=\"h-4 w-4\" />\n                      افزودن لینک\n                    </button>\n                  </div>\n                  <textarea\n                    value={createData.content}\n                    onChange={(e) => setCreateData({...createData, content: e.target.value})}\n                    className=\"w-full px-3 py-2 border-0 rounded-b-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={12}\n                    placeholder=\"محتوای پست... (برای افزودن تصویر از دکمه بالا استفاده کنید)\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">خلاصه</label>\n                <textarea\n                  value={createData.excerpt}\n                  onChange={(e) => setCreateData({...createData, excerpt: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={3}\n                  placeholder=\"خلاصه پست...\"\n                />\n              </div>\n            </div>\n\n            {/* Sidebar */}\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">وضعیت</label>\n                <select\n                  value={createData.status}\n                  onChange={(e) => setCreateData({...createData, status: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  {statuses.map(status => (\n                    <option key={status.value} value={status.value}>{status.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">دسته‌بندی</label>\n                <div className=\"flex gap-2\">\n                  <select\n                    value={createData.category}\n                    onChange={(e) => setCreateData({...createData, category: e.target.value})}\n                    className=\"flex-1 px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    {categories.map(category => (\n                      <option key={category.value} value={category.value}>{category.label}</option>\n                    ))}\n                  </select>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      const newCategoryName = prompt('نام دسته‌بندی جدید را وارد کنید:');\n                      if (newCategoryName) {\n                        const newCategoryValue = newCategoryName.toLowerCase().replace(/\\s+/g, '-');\n                        const newCategory = { value: newCategoryValue, label: newCategoryName };\n                        categories.push(newCategory);\n                        setCreateData({...createData, category: newCategoryValue});\n                      }\n                    }}\n                    className=\"px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center justify-center\"\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">برچسب‌ها</label>\n                <input\n                  type=\"text\"\n                  value={createData.tags}\n                  onChange={(e) => setCreateData({...createData, tags: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"برچسب1، برچسب2\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">تصویر شاخص</label>\n                <input\n                  type=\"url\"\n                  value={createData.featuredImage}\n                  onChange={(e) => setCreateData({...createData, featuredImage: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"/uploads/image.jpg\"\n                />\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={createData.allowComments}\n                  onChange={(e) => setCreateData({...createData, allowComments: e.target.checked})}\n                  className=\"rounded\"\n                />\n                <label className=\"text-sm text-gray-700\">مجاز به نظر</label>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={createData.isSticky}\n                  onChange={(e) => setCreateData({...createData, isSticky: e.target.checked})}\n                  className=\"rounded\"\n                />\n                <label className=\"text-sm text-gray-700\">پست ثابت</label>\n              </div>\n\n              {/* SEO Section */}\n              <div className=\"border-t pt-4\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">تنظیمات SEO</h4>\n                <div className=\"space-y-2\">\n                  <input\n                    type=\"text\"\n                    value={createData.seoTitle}\n                    onChange={(e) => setCreateData({...createData, seoTitle: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"عنوان SEO\"\n                  />\n                  <textarea\n                    value={createData.seoDescription}\n                    onChange={(e) => setCreateData({...createData, seoDescription: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={2}\n                    placeholder=\"توضیحات SEO\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex gap-2 mt-6 pt-4 border-t\">\n            <button\n              onClick={handleCreateSubmit}\n              disabled={createMutation.isPending}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {createMutation.isPending ? 'در حال انتشار...' : 'انتشار پست'}\n            </button>\n            <button\n              onClick={() => setShowCreateForm(false)}\n              className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n            >\n              لغو\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Posts List */}\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">پست‌های آرشیو ({filteredPosts.length})</h4>\n        </div>\n        \n        {filteredPosts.length > 0 ? (\n          <div className=\"divide-y\">\n            {filteredPosts.map((post) => (\n              <div key={post.id} className=\"p-4 hover:bg-gray-50\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <h3 className=\"font-semibold text-gray-900\">{post.title}</h3>\n                      {post.isSticky && (\n                        <span className=\"text-xs px-2 py-1 rounded-full bg-yellow-100 text-yellow-800\">\n                          ثابت\n                        </span>\n                      )}\n                      <span className={`text-xs px-2 py-1 rounded-full ${\n                        post.status === 'published' ? 'bg-green-100 text-green-800' :\n                        post.status === 'draft' ? 'bg-gray-100 text-gray-800' :\n                        post.status === 'private' ? 'bg-red-100 text-red-800' :\n                        'bg-orange-100 text-orange-800'\n                      }`}>\n                        {statuses.find(s => s.value === post.status)?.label}\n                      </span>\n                    </div>\n                    \n                    <p className=\"text-sm text-gray-600 mb-2\">\n                      {post.excerpt || post.content?.substring(0, 100) + '...'}\n                    </p>\n                    \n                    <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                      <span>دسته: {categories.find(c => c.value === post.category)?.label}</span>\n                      {post.tags && post.tags.length > 0 && (\n                        <span>برچسب‌ها: {Array.isArray(post.tags) ? post.tags.join(', ') : post.tags}</span>\n                      )}\n                      <span>نظرات: {post.allowComments ? 'فعال' : 'غیرفعال'}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={() => handleEdit(post)}\n                      className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button\n                      onClick={() => handleDelete(post.id)}\n                      className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                    >\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"p-8 text-center text-gray-500\">\n            <File className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ پستی یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، پست جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n\n      {/* Edit Modal */}\n      {editingPost && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-6xl max-h-[90vh] overflow-y-auto\">\n            <h3 className=\"text-lg font-semibold mb-4\">ویرایش پست</h3>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {/* Main Content */}\n              <div className=\"lg:col-span-2 space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n                  <input\n                    type=\"text\"\n                    value={editingPost.title}\n                    onChange={(e) => setEditingPost({...editingPost, title: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">محتوا</label>\n                  <div className=\"border rounded-lg\">\n                    <div className=\"border-b p-2 bg-gray-50 flex items-center gap-2\">\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          const imageUrl = prompt('آدرس تصویر را وارد کنید:\\n\\n(راهنمایی: از کتابخانه رسانه در پنل ادمین می‌توانید تصاویر آپلود کنید و آدرس آنها را کپی کنید)');\n                          if (imageUrl) {\n                            const imageTag = `\\n\\n<img src=\"${imageUrl}\" alt=\"تصویر\" style=\"max-width: 100%; height: auto; margin: 10px 0;\" />\\n\\n`;\n                            setEditingPost({...editingPost, content: editingPost.content + imageTag});\n                          }\n                        }}\n                        className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 flex items-center gap-1\"\n                      >\n                        <Image className=\"h-4 w-4\" />\n                        افزودن تصویر\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          alert('برای انتخاب تصویر، ابتدا از بخش \"کتابخانه رسانه\" تصویر مورد نظر را آپلود کنید، سپس آدرس آن را کپی کنید و در اینجا استفاده کنید.');\n                        }}\n                        className=\"px-3 py-1 text-sm bg-purple-600 text-white rounded hover:bg-purple-700 flex items-center gap-1\"\n                      >\n                        <Image className=\"h-4 w-4\" />\n                        کتابخانه رسانه\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          const linkText = prompt('متن لینک را وارد کنید:');\n                          const linkUrl = prompt('آدرس لینک را وارد کنید:');\n                          if (linkText && linkUrl) {\n                            const linkTag = `[${linkText}](${linkUrl})`;\n                            setEditingPost({...editingPost, content: editingPost.content + linkTag});\n                          }\n                        }}\n                        className=\"px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700 flex items-center gap-1\"\n                      >\n                        <Plus className=\"h-4 w-4\" />\n                        افزودن لینک\n                      </button>\n                    </div>\n                    <textarea\n                      value={editingPost.content}\n                      onChange={(e) => setEditingPost({...editingPost, content: e.target.value})}\n                      className=\"w-full px-3 py-2 border-0 rounded-b-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      rows={12}\n                      placeholder=\"محتوای پست... (برای افزودن تصویر از دکمه بالا استفاده کنید)\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">خلاصه</label>\n                  <textarea\n                    value={editingPost.excerpt}\n                    onChange={(e) => setEditingPost({...editingPost, excerpt: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={3}\n                  />\n                </div>\n              </div>\n\n              {/* Sidebar */}\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">وضعیت</label>\n                  <select\n                    value={editingPost.status}\n                    onChange={(e) => setEditingPost({...editingPost, status: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    {statuses.map(status => (\n                      <option key={status.value} value={status.value}>{status.label}</option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">دسته‌بندی</label>\n                  <div className=\"flex gap-2\">\n                    <select\n                      value={editingPost.category}\n                      onChange={(e) => setEditingPost({...editingPost, category: e.target.value})}\n                      className=\"flex-1 px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    >\n                      {categories.map(category => (\n                        <option key={category.value} value={category.value}>{category.label}</option>\n                      ))}\n                    </select>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const newCategoryName = prompt('نام دسته‌بندی جدید را وارد کنید:');\n                        if (newCategoryName) {\n                          const newCategoryValue = newCategoryName.toLowerCase().replace(/\\s+/g, '-');\n                          const newCategory = { value: newCategoryValue, label: newCategoryName };\n                          categories.push(newCategory);\n                          setEditingPost({...editingPost, category: newCategoryValue});\n                        }\n                      }}\n                      className=\"px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center justify-center\"\n                    >\n                      <Plus className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">برچسب‌ها</label>\n                  <input\n                    type=\"text\"\n                    value={editingPost.tags}\n                    onChange={(e) => setEditingPost({...editingPost, tags: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">تصویر شاخص</label>\n                  <input\n                    type=\"url\"\n                    value={editingPost.featuredImage}\n                    onChange={(e) => setEditingPost({...editingPost, featuredImage: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={editingPost.allowComments}\n                    onChange={(e) => setEditingPost({...editingPost, allowComments: e.target.checked})}\n                    className=\"rounded\"\n                  />\n                  <label className=\"text-sm text-gray-700\">مجاز به نظر</label>\n                </div>\n\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={editingPost.isSticky}\n                    onChange={(e) => setEditingPost({...editingPost, isSticky: e.target.checked})}\n                    className=\"rounded\"\n                  />\n                  <label className=\"text-sm text-gray-700\">پست ثابت</label>\n                </div>\n\n                {/* SEO Section */}\n                <div className=\"border-t pt-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-2\">تنظیمات SEO</h4>\n                  <div className=\"space-y-2\">\n                    <input\n                      type=\"text\"\n                      value={editingPost.seoTitle}\n                      onChange={(e) => setEditingPost({...editingPost, seoTitle: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"عنوان SEO\"\n                    />\n                    <textarea\n                      value={editingPost.seoDescription}\n                      onChange={(e) => setEditingPost({...editingPost, seoDescription: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      rows={2}\n                      placeholder=\"توضیحات SEO\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex gap-2 mt-6 pt-4 border-t\">\n              <button\n                onClick={handleUpdateSubmit}\n                disabled={updateMutation.isPending}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره تغییرات'}\n              </button>\n              <button\n                onClick={() => setEditingPost(null)}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n              >\n                لغو\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction MediaTab() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState<any>(null);\n  const queryClient = useQueryClient();\n\n  const { data: mediaFiles, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/media-library', searchQuery],\n  });\n\n  const uploadMutation = useMutation({\n    mutationFn: async (file: File) => {\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در آپلود فایل');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/media-library'] });\n      alert('فایل با موفقیت آپلود شد');\n    },\n    onError: () => {\n      alert('خطا در آپلود فایل');\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/media-library/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف فایل');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/media-library'] });\n      setSelectedFile(null);\n      alert('فایل حذف شد');\n    },\n    onError: () => {\n      alert('خطا در حذف فایل');\n    },\n  });\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 بایت';\n    const k = 1024;\n    const sizes = ['بایت', 'کیلوبایت', 'مگابایت', 'گیگابایت'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getFileIcon = (type: string) => {\n    if (type?.startsWith('image/')) return <Image className=\"h-5 w-5\" />;\n    if (type?.startsWith('video/')) return <Video className=\"h-5 w-5\" />;\n    return <File className=\"h-5 w-5\" />;\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      uploadMutation.mutate(file);\n    }\n  };\n\n  const copyUrl = (url: string) => {\n    navigator.clipboard.writeText(url);\n    alert('آدرس فایل کپی شد');\n  };\n\n  // Sample data for demonstration\n  const sampleMediaFiles = [\n    {\n      id: 1,\n      filename: \"logo-pistach.png\",\n      originalName: \"لوگو پیستاط.png\",\n      size: 45632,\n      type: \"image/png\",\n      url: \"/uploads/logo-pistach.png\",\n      uploadedAt: \"2024-01-15T10:30:00Z\"\n    },\n    {\n      id: 2,\n      filename: \"course-agriculture.jpg\",\n      originalName: \"دوره کشاورزی.jpg\",\n      size: 234567,\n      type: \"image/jpeg\",\n      url: \"/uploads/course-agriculture.jpg\",\n      uploadedAt: \"2024-01-14T15:45:00Z\"\n    },\n    {\n      id: 3,\n      filename: \"video-irrigation.mp4\",\n      originalName: \"آموزش آبیاری.mp4\",\n      size: 15678901,\n      type: \"video/mp4\",\n      url: \"/uploads/video-irrigation.mp4\",\n      uploadedAt: \"2024-01-13T09:20:00Z\"\n    }\n  ];\n\n  const displayFiles = mediaFiles || sampleMediaFiles;\n  const filteredFiles = displayFiles.filter((file: any) =>\n    file.originalName?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    file.filename?.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">کتابخانه رسانه</h2>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"relative\">\n            <input\n              type=\"text\"\n              placeholder=\"جستجو در فایل‌ها...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"pr-3 pl-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          <label className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 cursor-pointer\">\n            <Upload className=\"h-4 w-4\" />\n            آپلود فایل\n            <input\n              type=\"file\"\n              accept=\"image/*,video/*,.pdf,.doc,.docx\"\n              onChange={handleFileUpload}\n              className=\"hidden\"\n            />\n          </label>\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b\">\n          <h4 className=\"font-semibold\">فایل‌های رسانه</h4>\n        </div>\n        \n        {isLoading ? (\n          <div className=\"p-6\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n              {Array.from({ length: 12 }).map((_, i) => (\n                <div key={i} className=\"aspect-square bg-gray-200 rounded-lg animate-pulse\"></div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"p-6\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n              {filteredFiles.map((file: any) => (\n                <div\n                  key={file.id}\n                  className={`group relative border rounded-lg overflow-hidden cursor-pointer transition-all hover:shadow-md ${\n                    selectedFile?.id === file.id ? 'ring-2 ring-blue-500' : ''\n                  }`}\n                  onClick={() => setSelectedFile(file)}\n                >\n                  <div className=\"aspect-square bg-gray-100 flex items-center justify-center\">\n                    {file.type?.startsWith('image/') ? (\n                      <img\n                        src={file.url}\n                        alt={file.originalName}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    ) : (\n                      <div className=\"text-gray-400\">\n                        {getFileIcon(file.type)}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"p-2\">\n                    <p className=\"text-xs text-gray-900 truncate font-medium\">\n                      {file.originalName}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">\n                      {formatFileSize(file.size)}\n                    </p>\n                  </div>\n                  \n                  <div className=\"absolute top-2 left-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                    <div className=\"flex gap-1\">\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          copyUrl(file.url);\n                        }}\n                        className=\"p-1 bg-black/50 text-white rounded hover:bg-black/70\"\n                      >\n                        <Eye className=\"h-3 w-3\" />\n                      </button>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          deleteMutation.mutate(file.id);\n                        }}\n                        className=\"p-1 bg-red-500/80 text-white rounded hover:bg-red-600\"\n                      >\n                        <Trash className=\"h-3 w-3\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {(!filteredFiles || filteredFiles.length === 0) && (\n              <div className=\"p-8 text-center text-gray-500\">\n                هنوز فایلی آپلود نشده است.\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* File Details Sidebar */}\n      {selectedFile && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold\">جزئیات فایل</h3>\n            <button\n              onClick={() => setSelectedFile(null)}\n              className=\"p-1 hover:bg-gray-200 rounded\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Preview */}\n            <div className=\"aspect-square bg-gray-100 rounded-lg border p-4 flex items-center justify-center\">\n              {selectedFile.type?.startsWith('image/') ? (\n                <img\n                  src={selectedFile.url}\n                  alt={selectedFile.originalName}\n                  className=\"max-w-full max-h-full object-contain\"\n                />\n              ) : (\n                <div className=\"text-gray-400\">\n                  {getFileIcon(selectedFile.type)}\n                </div>\n              )}\n            </div>\n\n            {/* Details */}\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">نام فایل</label>\n                <p className=\"text-sm text-gray-900 mt-1\">{selectedFile.originalName}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">نوع فایل</label>\n                <p className=\"text-sm text-gray-900 mt-1\">{selectedFile.type}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">حجم</label>\n                <p className=\"text-sm text-gray-900 mt-1\">{formatFileSize(selectedFile.size)}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">آدرس فایل</label>\n                <div className=\"flex items-center gap-2 mt-1\">\n                  <input\n                    type=\"text\"\n                    value={selectedFile.url}\n                    readOnly\n                    className=\"flex-1 text-sm bg-gray-100 px-2 py-1 rounded border\"\n                  />\n                  <button\n                    onClick={() => copyUrl(selectedFile.url)}\n                    className=\"p-1 text-gray-600 hover:text-gray-800\"\n                  >\n                    <Eye className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"flex gap-2 pt-4 border-t\">\n                <button\n                  onClick={() => copyUrl(selectedFile.url)}\n                  className=\"flex-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n                >\n                  کپی آدرس\n                </button>\n                <button\n                  onClick={() => deleteMutation.mutate(selectedFile.id)}\n                  className=\"px-3 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\n                >\n                  حذف\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction SlidesTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingSlide, setEditingSlide] = useState<any>(null);\n  const [createData, setCreateData] = useState({\n    title: '',\n    description: '',\n    imageUrl: '',\n    buttonText: '',\n    buttonUrl: '',\n    order: 0,\n    isActive: true\n  });\n\n  const { data: slides, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/slides'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: (data: any) => apiRequest('/api/slides', { method: 'POST', body: JSON.stringify(data) }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        description: '',\n        imageUrl: '',\n        buttonText: '',\n        buttonUrl: '',\n        order: 0,\n        isActive: true\n      });\n    },\n    onError: (error) => {\n      console.error('Error creating slide:', error);\n      alert('خطا در ایجاد اسلاید: ' + error.message);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: (data: any) => apiRequest(`/api/slides/${editingSlide.id}`, { method: 'PUT', body: JSON.stringify(data) }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n      setEditingSlide(null);\n    },\n    onError: (error) => {\n      console.error('Error updating slide:', error);\n      alert('خطا در بروزرسانی اسلاید: ' + error.message);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => apiRequest(`/api/slides/${id}`, { method: 'DELETE' }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/slides'] });\n    },\n    onError: (error) => {\n      console.error('Error deleting slide:', error);\n      alert('خطا در حذف اسلاید: ' + error.message);\n    },\n  });\n\n  const handleCreateSubmit = () => {\n    if (!createData.title.trim()) {\n      alert('لطفاً عنوان اسلاید را وارد کنید');\n      return;\n    }\n    console.log('Creating slide with data:', createData);\n    createMutation.mutate(createData);\n  };\n\n  const handleUpdateSubmit = () => {\n    updateMutation.mutate(editingSlide);\n  };\n\n  const handleEdit = (slide: any) => {\n    setEditingSlide({ ...slide });\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا از حذف این اسلاید اطمینان دارید؟')) {\n      deleteMutation.mutate(id);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">اسلایدرهای صفحه اصلی</h2>\n        <button\n          onClick={() => setShowCreateForm(true)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          افزودن اسلاید جدید\n        </button>\n      </div>\n\n      {/* Create Form */}\n      {showCreateForm && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">افزودن اسلاید جدید</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n              <input\n                type=\"text\"\n                value={createData.title}\n                onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"عنوان اسلاید\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">توضیحات</label>\n              <textarea\n                value={createData.description}\n                onChange={(e) => setCreateData({...createData, description: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"توضیحات اسلاید\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس تصویر</label>\n              <input\n                type=\"url\"\n                value={createData.imageUrl}\n                onChange={(e) => setCreateData({...createData, imageUrl: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"/uploads/image.jpg\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">متن دکمه</label>\n                <input\n                  type=\"text\"\n                  value={createData.buttonText}\n                  onChange={(e) => setCreateData({...createData, buttonText: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"مشاهده بیشتر\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس دکمه</label>\n                <input\n                  type=\"url\"\n                  value={createData.buttonUrl}\n                  onChange={(e) => setCreateData({...createData, buttonUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"https://example.com\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">ترتیب</label>\n              <input\n                type=\"number\"\n                value={createData.order}\n                onChange={(e) => setCreateData({...createData, order: parseInt(e.target.value) || 0})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"0\"\n              />\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={createData.isActive}\n                onChange={(e) => setCreateData({...createData, isActive: e.target.checked})}\n                className=\"rounded\"\n              />\n              <label className=\"text-sm text-gray-700\">فعال</label>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={handleCreateSubmit}\n                disabled={createMutation.isPending}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending ? 'در حال ایجاد...' : 'ایجاد اسلاید'}\n              </button>\n              <button\n                onClick={() => setShowCreateForm(false)}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n              >\n                لغو\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Slides List */}\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">لیست اسلایدها</h4>\n        </div>\n        \n        {slides && slides.length > 0 ? (\n          <div className=\"divide-y\">\n            {slides.map((slide) => (\n              <div key={slide.id} className=\"p-4 hover:bg-gray-50\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <h3 className=\"font-semibold text-gray-900\">{slide.title}</h3>\n                      <span className={`text-xs px-2 py-1 rounded-full ${\n                        slide.isActive \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {slide.isActive ? 'فعال' : 'غیرفعال'}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-2\">{slide.description}</p>\n                    <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                      <span>ترتیب: {slide.order}</span>\n                      {slide.buttonText && <span>دکمه: {slide.buttonText}</span>}\n                      {slide.imageUrl && <span>تصویر: ✓</span>}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={() => handleEdit(slide)}\n                      className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button\n                      onClick={() => handleDelete(slide.id)}\n                      className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                    >\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"p-8 text-center text-gray-500\">\n            <Image className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ اسلایدی یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، اسلاید جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n\n      {/* Edit Modal */}\n      {editingSlide && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <h3 className=\"text-lg font-semibold mb-4\">ویرایش اسلاید</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n                <input\n                  type=\"text\"\n                  value={editingSlide.title}\n                  onChange={(e) => setEditingSlide({...editingSlide, title: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">توضیحات</label>\n                <textarea\n                  value={editingSlide.description}\n                  onChange={(e) => setEditingSlide({...editingSlide, description: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={3}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس تصویر</label>\n                <input\n                  type=\"url\"\n                  value={editingSlide.imageUrl}\n                  onChange={(e) => setEditingSlide({...editingSlide, imageUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">متن دکمه</label>\n                  <input\n                    type=\"text\"\n                    value={editingSlide.buttonText}\n                    onChange={(e) => setEditingSlide({...editingSlide, buttonText: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس دکمه</label>\n                  <input\n                    type=\"url\"\n                    value={editingSlide.buttonUrl}\n                    onChange={(e) => setEditingSlide({...editingSlide, buttonUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">ترتیب</label>\n                <input\n                  type=\"number\"\n                  value={editingSlide.order}\n                  onChange={(e) => setEditingSlide({...editingSlide, order: parseInt(e.target.value) || 0})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={editingSlide.isActive}\n                  onChange={(e) => setEditingSlide({...editingSlide, isActive: e.target.checked})}\n                  className=\"rounded\"\n                />\n                <label className=\"text-sm text-gray-700\">فعال</label>\n              </div>\n\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={handleUpdateSubmit}\n                  disabled={updateMutation.isPending}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره تغییرات'}\n                </button>\n                <button\n                  onClick={() => setEditingSlide(null)}\n                  className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n                >\n                  لغو\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction MagazinesTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingMagazine, setEditingMagazine] = useState<any>(null);\n  const [createData, setCreateData] = useState({\n    title: '',\n    description: '',\n    issueNumber: 1,\n    publishDate: '',\n    coverImageUrl: '',\n    isActive: true\n  });\n\n  const { data: magazines, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: (data: any) => apiRequest('/api/magazines', { method: 'POST', body: JSON.stringify(data) }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/magazines'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        description: '',\n        issueNumber: 1,\n        publishDate: '',\n        coverImageUrl: '',\n        isActive: true\n      });\n    },\n    onError: (error) => {\n      console.error('Error creating magazine:', error);\n      alert('خطا در ایجاد مجله: ' + error.message);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: (data: any) => apiRequest(`/api/magazines/${editingMagazine.id}`, { method: 'PUT', body: JSON.stringify(data) }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/magazines'] });\n      setEditingMagazine(null);\n    },\n    onError: (error) => {\n      console.error('Error updating magazine:', error);\n      alert('خطا در بروزرسانی مجله: ' + error.message);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => apiRequest(`/api/magazines/${id}`, { method: 'DELETE' }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/magazines'] });\n    },\n    onError: (error) => {\n      console.error('Error deleting magazine:', error);\n      alert('خطا در حذف مجله: ' + error.message);\n    },\n  });\n\n  const handleCreateSubmit = () => {\n    if (!createData.title.trim()) {\n      alert('لطفاً عنوان مجله را وارد کنید');\n      return;\n    }\n    console.log('Creating magazine with data:', createData);\n    createMutation.mutate(createData);\n  };\n\n  const handleUpdateSubmit = () => {\n    updateMutation.mutate(editingMagazine);\n  };\n\n  const handleEdit = (magazine: any) => {\n    setEditingMagazine({ ...magazine });\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا از حذف این مجله اطمینان دارید؟')) {\n      deleteMutation.mutate(id);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">فصلنامه رویش سبز</h2>\n        <button\n          onClick={() => setShowCreateForm(true)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          افزودن مجله جدید\n        </button>\n      </div>\n\n      {/* Create Form */}\n      {showCreateForm && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">افزودن مجله جدید</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n              <input\n                type=\"text\"\n                value={createData.title}\n                onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"عنوان مجله\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">توضیحات</label>\n              <textarea\n                value={createData.description}\n                onChange={(e) => setCreateData({...createData, description: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"توضیحات مجله\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">شماره</label>\n              <input\n                type=\"number\"\n                value={createData.issueNumber}\n                onChange={(e) => setCreateData({...createData, issueNumber: parseInt(e.target.value) || 1})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"شماره مجله\"\n                min=\"1\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">تاریخ انتشار</label>\n              <input\n                type=\"date\"\n                value={createData.publishDate}\n                onChange={(e) => setCreateData({...createData, publishDate: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس تصویر جلد</label>\n              <input\n                type=\"url\"\n                value={createData.coverImageUrl}\n                onChange={(e) => setCreateData({...createData, coverImageUrl: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"https://example.com/image.jpg\"\n              />\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={createData.isActive}\n                onChange={(e) => setCreateData({...createData, isActive: e.target.checked})}\n                className=\"rounded\"\n              />\n              <label className=\"text-sm text-gray-700\">فعال</label>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={handleCreateSubmit}\n                disabled={createMutation.isPending}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending ? 'در حال ایجاد...' : 'ایجاد مجله'}\n              </button>\n              <button\n                onClick={() => setShowCreateForm(false)}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n              >\n                لغو\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Magazines List */}\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">لیست مجله‌ها</h4>\n        </div>\n        \n        {magazines && magazines.length > 0 ? (\n          <div className=\"divide-y\">\n            {magazines.map((magazine) => (\n              <div key={magazine.id} className=\"p-4 hover:bg-gray-50\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center overflow-hidden\">\n                      {magazine.coverImageUrl ? (\n                        <img \n                          src={magazine.coverImageUrl} \n                          alt={magazine.title}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      ) : (\n                        <Calendar className=\"h-8 w-8 text-gray-400\" />\n                      )}\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900\">{magazine.title}</h3>\n                      <p className=\"text-sm text-gray-600\">{magazine.description}</p>\n                      <div className=\"flex items-center gap-4 mt-1\">\n                        <span className=\"text-xs text-gray-500\">شماره {magazine.issueNumber}</span>\n                        <span className=\"text-xs text-gray-500\">{magazine.publishDate}</span>\n                        <span className={`text-xs px-2 py-1 rounded-full ${\n                          magazine.isActive \n                            ? 'bg-green-100 text-green-800' \n                            : 'bg-gray-100 text-gray-800'\n                        }`}>\n                          {magazine.isActive ? 'فعال' : 'غیرفعال'}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={() => handleEdit(magazine)}\n                      className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button\n                      onClick={() => handleDelete(magazine.id)}\n                      className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                    >\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"p-8 text-center text-gray-500\">\n            <Calendar className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ مجله‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، مجله جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n\n      {/* Edit Modal */}\n      {editingMagazine && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">ویرایش مجله</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n                <input\n                  type=\"text\"\n                  value={editingMagazine.title}\n                  onChange={(e) => setEditingMagazine({...editingMagazine, title: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">توضیحات</label>\n                <textarea\n                  value={editingMagazine.description}\n                  onChange={(e) => setEditingMagazine({...editingMagazine, description: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={3}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">شماره</label>\n                <input\n                  type=\"number\"\n                  value={editingMagazine.issueNumber}\n                  onChange={(e) => setEditingMagazine({...editingMagazine, issueNumber: parseInt(e.target.value) || 1})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"1\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">تاریخ انتشار</label>\n                <input\n                  type=\"date\"\n                  value={editingMagazine.publishDate}\n                  onChange={(e) => setEditingMagazine({...editingMagazine, publishDate: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس تصویر جلد</label>\n                <input\n                  type=\"url\"\n                  value={editingMagazine.coverImageUrl}\n                  onChange={(e) => setEditingMagazine({...editingMagazine, coverImageUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={editingMagazine.isActive}\n                  onChange={(e) => setEditingMagazine({...editingMagazine, isActive: e.target.checked})}\n                  className=\"rounded\"\n                />\n                <label className=\"text-sm text-gray-700\">فعال</label>\n              </div>\n\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={handleUpdateSubmit}\n                  disabled={updateMutation.isPending}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره تغییرات'}\n                </button>\n                <button\n                  onClick={() => setEditingMagazine(null)}\n                  className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n                >\n                  لغو\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ArticlesTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingArticle, setEditingArticle] = useState<any>(null);\n  const [createData, setCreateData] = useState({\n    title: '',\n    author: '',\n    summary: '',\n    content: '',\n    magazineId: 1,\n    featuredImageUrl: '',\n    readTime: 0,\n    pdfUrl: '',\n    order: 0,\n    isPublished: true\n  });\n\n  const { data: articles, isLoading: articlesLoading } = useQuery<any[]>({\n    queryKey: ['/api/articles'],\n  });\n\n  const { data: magazines = [] } = useQuery<any[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: (data: any) => apiRequest('/api/articles', { method: 'POST', body: JSON.stringify(data) }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/articles'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        author: '',\n        summary: '',\n        content: '',\n        magazineId: 1,\n        featuredImageUrl: '',\n        readTime: 0,\n        pdfUrl: '',\n        order: 0,\n        isPublished: true\n      });\n    },\n    onError: (error) => {\n      console.error('Error creating article:', error);\n      alert('خطا در ایجاد مقاله: ' + error.message);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: (data: any) => apiRequest(`/api/articles/${editingArticle.id}`, { method: 'PUT', body: JSON.stringify(data) }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/articles'] });\n      setEditingArticle(null);\n    },\n    onError: (error) => {\n      console.error('Error updating article:', error);\n      alert('خطا در بروزرسانی مقاله: ' + error.message);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => apiRequest(`/api/articles/${id}`, { method: 'DELETE' }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/articles'] });\n    },\n    onError: (error) => {\n      console.error('Error deleting article:', error);\n      alert('خطا در حذف مقاله: ' + error.message);\n    },\n  });\n\n  const handleCreateSubmit = () => {\n    if (!createData.title.trim()) {\n      alert('لطفاً عنوان مقاله را وارد کنید');\n      return;\n    }\n    console.log('Creating article with data:', createData);\n    createMutation.mutate(createData);\n  };\n\n  const handleUpdateSubmit = () => {\n    updateMutation.mutate(editingArticle);\n  };\n\n  const handleEdit = (article: any) => {\n    setEditingArticle({ ...article });\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا از حذف این مقاله اطمینان دارید؟')) {\n      deleteMutation.mutate(id);\n    }\n  };\n\n  const getMagazineTitle = (magazineId: number) => {\n    const magazine = magazines.find(m => m.id === magazineId);\n    return magazine ? magazine.title : 'نامشخص';\n  };\n\n  if (articlesLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">مقاله‌ها</h2>\n        <button\n          onClick={() => setShowCreateForm(true)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          افزودن مقاله جدید\n        </button>\n      </div>\n\n      {/* Create Form */}\n      {showCreateForm && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">افزودن مقاله جدید</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n              <input\n                type=\"text\"\n                value={createData.title}\n                onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"عنوان مقاله\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">نویسنده</label>\n              <input\n                type=\"text\"\n                value={createData.author}\n                onChange={(e) => setCreateData({...createData, author: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"نام نویسنده\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">خلاصه</label>\n              <textarea\n                value={createData.summary}\n                onChange={(e) => setCreateData({...createData, summary: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"خلاصه مقاله\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">محتوا</label>\n              <textarea\n                value={createData.content}\n                onChange={(e) => setCreateData({...createData, content: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={8}\n                placeholder=\"محتوای مقاله\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">مجله</label>\n              <select\n                value={createData.magazineId}\n                onChange={(e) => setCreateData({...createData, magazineId: parseInt(e.target.value)})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {magazines.map(magazine => (\n                  <option key={magazine.id} value={magazine.id}>\n                    {magazine.title} - شماره {magazine.issueNumber}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">زمان مطالعه (دقیقه)</label>\n                <input\n                  type=\"number\"\n                  value={createData.readTime}\n                  onChange={(e) => setCreateData({...createData, readTime: parseInt(e.target.value) || 0})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">ترتیب</label>\n                <input\n                  type=\"number\"\n                  value={createData.order}\n                  onChange={(e) => setCreateData({...createData, order: parseInt(e.target.value) || 0})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس تصویر شاخص</label>\n              <input\n                type=\"url\"\n                value={createData.featuredImageUrl}\n                onChange={(e) => setCreateData({...createData, featuredImageUrl: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"https://example.com/image.jpg\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس PDF</label>\n              <input\n                type=\"url\"\n                value={createData.pdfUrl}\n                onChange={(e) => setCreateData({...createData, pdfUrl: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"https://example.com/article.pdf\"\n              />\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={createData.isPublished}\n                onChange={(e) => setCreateData({...createData, isPublished: e.target.checked})}\n                className=\"rounded\"\n              />\n              <label className=\"text-sm text-gray-700\">منتشر شده</label>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={handleCreateSubmit}\n                disabled={createMutation.isPending}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending ? 'در حال ایجاد...' : 'ایجاد مقاله'}\n              </button>\n              <button\n                onClick={() => setShowCreateForm(false)}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n              >\n                لغو\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Articles List */}\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">لیست مقاله‌ها</h4>\n        </div>\n        \n        {articles && articles.length > 0 ? (\n          <div className=\"divide-y\">\n            {articles.map((article) => (\n              <div key={article.id} className=\"p-4 hover:bg-gray-50\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <h3 className=\"font-semibold text-gray-900\">{article.title}</h3>\n                      <span className={`text-xs px-2 py-1 rounded-full ${\n                        article.isPublished \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {article.isPublished ? 'منتشر شده' : 'پیش‌نویس'}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-2\">{article.summary}</p>\n                    <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                      <span>نویسنده: {article.author || 'نامشخص'}</span>\n                      <span>مجله: {getMagazineTitle(article.magazineId)}</span>\n                      <span>زمان مطالعه: {article.readTime} دقیقه</span>\n                      <span>ترتیب: {article.order}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={() => handleEdit(article)}\n                      className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button\n                      onClick={() => handleDelete(article.id)}\n                      className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                    >\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"p-8 text-center text-gray-500\">\n            <File className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ مقاله‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، مقاله جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n\n      {/* Edit Modal */}\n      {editingArticle && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <h3 className=\"text-lg font-semibold mb-4\">ویرایش مقاله</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n                <input\n                  type=\"text\"\n                  value={editingArticle.title}\n                  onChange={(e) => setEditingArticle({...editingArticle, title: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">نویسنده</label>\n                <input\n                  type=\"text\"\n                  value={editingArticle.author}\n                  onChange={(e) => setEditingArticle({...editingArticle, author: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">خلاصه</label>\n                <textarea\n                  value={editingArticle.summary}\n                  onChange={(e) => setEditingArticle({...editingArticle, summary: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={3}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">محتوا</label>\n                <textarea\n                  value={editingArticle.content}\n                  onChange={(e) => setEditingArticle({...editingArticle, content: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={8}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">مجله</label>\n                <select\n                  value={editingArticle.magazineId}\n                  onChange={(e) => setEditingArticle({...editingArticle, magazineId: parseInt(e.target.value)})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  {magazines.map(magazine => (\n                    <option key={magazine.id} value={magazine.id}>\n                      {magazine.title} - شماره {magazine.issueNumber}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">زمان مطالعه (دقیقه)</label>\n                  <input\n                    type=\"number\"\n                    value={editingArticle.readTime}\n                    onChange={(e) => setEditingArticle({...editingArticle, readTime: parseInt(e.target.value) || 0})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    min=\"0\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">ترتیب</label>\n                  <input\n                    type=\"number\"\n                    value={editingArticle.order}\n                    onChange={(e) => setEditingArticle({...editingArticle, order: parseInt(e.target.value) || 0})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس تصویر شاخص</label>\n                <input\n                  type=\"url\"\n                  value={editingArticle.featuredImageUrl}\n                  onChange={(e) => setEditingArticle({...editingArticle, featuredImageUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس PDF</label>\n                <input\n                  type=\"url\"\n                  value={editingArticle.pdfUrl}\n                  onChange={(e) => setEditingArticle({...editingArticle, pdfUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={editingArticle.isPublished}\n                  onChange={(e) => setEditingArticle({...editingArticle, isPublished: e.target.checked})}\n                  className=\"rounded\"\n                />\n                <label className=\"text-sm text-gray-700\">منتشر شده</label>\n              </div>\n\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={handleUpdateSubmit}\n                  disabled={updateMutation.isPending}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره تغییرات'}\n                </button>\n                <button\n                  onClick={() => setEditingArticle(null)}\n                  className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n                >\n                  لغو\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction QuickAccessTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingItem, setEditingItem] = useState<any>(null);\n  const [createData, setCreateData] = useState({\n    title: '',\n    iconUrl: '',\n    linkUrl: '',\n    order: 0\n  });\n\n  const { data: quickAccessItems, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/quick-access'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch('/api/quick-access', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در ایجاد آیتم');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/quick-access'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        iconUrl: '',\n        linkUrl: '',\n        order: 0\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch(`/api/quick-access/${data.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در بروزرسانی آیتم');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/quick-access'] });\n      setEditingItem(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/quick-access/${id}`, {\n        method: 'DELETE'\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف آیتم');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/quick-access'] });\n    },\n  });\n\n  const handleCreateSubmit = () => {\n    if (!createData.title.trim()) {\n      alert('لطفاً عنوان را وارد کنید');\n      return;\n    }\n    createMutation.mutate(createData);\n  };\n\n  const handleUpdateSubmit = () => {\n    updateMutation.mutate(editingItem);\n  };\n\n  const handleEdit = (item: any) => {\n    setEditingItem({ ...item });\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('آیا از حذف این آیتم اطمینان دارید؟')) {\n      deleteMutation.mutate(id);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">منوی دسترسی سریع</h2>\n        <button\n          onClick={() => setShowCreateForm(true)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          افزودن آیتم جدید\n        </button>\n      </div>\n\n      {/* Create Form */}\n      {showCreateForm && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">افزودن آیتم جدید</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n              <input\n                type=\"text\"\n                value={createData.title}\n                onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"مثال: کتابخانه\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس آیکون</label>\n              <input\n                type=\"url\"\n                value={createData.iconUrl}\n                onChange={(e) => setCreateData({...createData, iconUrl: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"/uploads/icon.png\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">لینک</label>\n              <input\n                type=\"url\"\n                value={createData.linkUrl}\n                onChange={(e) => setCreateData({...createData, linkUrl: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"https://example.com\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">ترتیب نمایش</label>\n              <input\n                type=\"number\"\n                value={createData.order}\n                onChange={(e) => setCreateData({...createData, order: parseInt(e.target.value) || 0})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"0\"\n              />\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={handleCreateSubmit}\n                disabled={createMutation.isPending}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending ? 'در حال ایجاد...' : 'ایجاد آیتم'}\n              </button>\n              <button\n                onClick={() => setShowCreateForm(false)}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n              >\n                لغو\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Items List */}\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">لیست آیتم‌های منو</h4>\n        </div>\n        \n        {quickAccessItems && quickAccessItems.length > 0 ? (\n          <div className=\"divide-y\">\n            {quickAccessItems.map((item) => (\n              <div key={item.id} className=\"p-4 hover:bg-gray-50\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center overflow-hidden\">\n                      {item.iconUrl ? (\n                        <img \n                          src={item.iconUrl} \n                          alt={item.title}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      ) : (\n                        <MoreHorizontal className=\"h-8 w-8 text-gray-400\" />\n                      )}\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900\">{item.title}</h3>\n                      <p className=\"text-sm text-gray-600\">{item.linkUrl}</p>\n                      <span className=\"text-xs text-gray-500\">ترتیب: {item.order}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={() => handleEdit(item)}\n                      className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button\n                      onClick={() => handleDelete(item.id)}\n                      className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                    >\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"p-8 text-center text-gray-500\">\n            <MoreHorizontal className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ آیتمی یافت نشد</h3>\n            <p className=\"text-gray-600\">برای شروع، آیتم جدیدی اضافه کنید</p>\n          </div>\n        )}\n      </div>\n\n      {/* Edit Modal */}\n      {editingItem && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">ویرایش آیتم</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n                <input\n                  type=\"text\"\n                  value={editingItem.title}\n                  onChange={(e) => setEditingItem({...editingItem, title: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس آیکون</label>\n                <input\n                  type=\"url\"\n                  value={editingItem.iconUrl}\n                  onChange={(e) => setEditingItem({...editingItem, iconUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">لینک</label>\n                <input\n                  type=\"url\"\n                  value={editingItem.linkUrl}\n                  onChange={(e) => setEditingItem({...editingItem, linkUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">ترتیب نمایش</label>\n                <input\n                  type=\"number\"\n                  value={editingItem.order}\n                  onChange={(e) => setEditingItem({...editingItem, order: parseInt(e.target.value) || 0})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={handleUpdateSubmit}\n                  disabled={updateMutation.isPending}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره تغییرات'}\n                </button>\n                <button\n                  onClick={() => setEditingItem(null)}\n                  className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n                >\n                  لغو\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction UsersTab() {\n  return <div>کاربران</div>;\n}\n\nfunction WorkshopRegistrationsTab() {\n  const { data: registrations = [], isLoading } = useQuery<WorkshopRegistration[]>({\n    queryKey: ['/api/workshop-registrations']\n  });\n\n  const { data: workshops = [] } = useQuery<Workshop[]>({\n    queryKey: ['/api/workshops']\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => \n      fetch(`/api/workshop-registrations/${id}`, {\n        method: 'DELETE'\n      }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/workshop-registrations'] });\n    },\n  });\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  const getWorkshopName = (workshopId: number) => {\n    const workshop = workshops.find(w => w.id === workshopId);\n    return workshop?.title || 'نامشخص';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">ثبت‌نام‌های کارگاه</h2>\n        <span className=\"text-sm text-gray-600\">تعداد: {registrations.length}</span>\n      </div>\n\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">لیست ثبت‌نام‌ها</h4>\n        </div>\n        \n        {registrations.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            هنوز ثبت‌نامی انجام نشده است.\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">نام کارگاه</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">نام کاربر</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">ایمیل</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">تلفن</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">وضعیت</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">تاریخ ثبت‌نام</th>\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">عملیات</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200\">\n                {registrations.map((registration) => (\n                  <tr key={registration.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-4 py-4 text-sm text-gray-900 font-medium\">\n                      {getWorkshopName(registration.workshopId)}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userName}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userEmail}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.userPhone || '-'}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        registration.status === 'confirmed' \n                          ? 'bg-green-100 text-green-800' \n                          : registration.status === 'pending'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-red-100 text-red-800'\n                      }`}>\n                        {registration.status === 'confirmed' ? 'تایید شده' : \n                         registration.status === 'pending' ? 'در انتظار' : 'لغو شده'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900\">\n                      {registration.registrationDate \n                        ? new Date(registration.registrationDate).toLocaleDateString('fa-IR')\n                        : '-'\n                      }\n                    </td>\n                    <td className=\"px-4 py-4 text-sm\">\n                      <button\n                        onClick={() => deleteMutation.mutate(registration.id)}\n                        disabled={deleteMutation.isPending}\n                        className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction EducationalVideosTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingVideo, setEditingVideo] = useState<any>(null);\n  const [createData, setCreateData] = useState({\n    title: '',\n    videoUrl: '',\n    orderPosition: 0\n  });\n\n  const { data: videos, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/educational-videos'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch('/api/educational-videos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Create error:', errorText);\n        throw new Error('خطا در ایجاد ویدیو');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/educational-videos'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        videoUrl: '',\n        orderPosition: 0\n      });\n    }\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch(`/api/educational-videos/${editingVideo.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Update error:', errorText);\n        throw new Error('خطا در به‌روزرسانی ویدیو');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/educational-videos'] });\n      setEditingVideo(null);\n    }\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/educational-videos/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Delete error:', errorText);\n        throw new Error('خطا در حذف ویدیو');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/educational-videos'] });\n    }\n  });\n\n  const handleCreateSubmit = () => {\n    // Only require title - all other fields are optional\n    if (!createData.title.trim()) {\n      alert('عنوان الزامی است');\n      return;\n    }\n    \n    const tagsArray = createData.tags ? createData.tags.split(',').map(tag => tag.trim()).filter(tag => tag) : [];\n    createMutation.mutate({\n      ...createData,\n      tags: tagsArray\n    });\n  };\n\n  const handleUpdateSubmit = () => {\n    if (!editingVideo) return;\n    \n    const tagsArray = editingVideo.tags.split(',').map((tag: string) => tag.trim()).filter((tag: string) => tag);\n    updateMutation.mutate({\n      ...editingVideo,\n      tags: tagsArray\n    });\n  };\n\n  const handleEdit = (video: any) => {\n    setEditingVideo({\n      ...video,\n      tags: Array.isArray(video.tags) ? video.tags.join(', ') : video.tags\n    });\n  };\n\n  if (isLoading) return <div>در حال بارگذاری...</div>;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold\">ویدیوهای آموزشی</h2>\n        <button\n          onClick={() => setShowCreateForm(!showCreateForm)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          ایجاد ویدیو جدید\n        </button>\n      </div>\n\n      {showCreateForm && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">ایجاد ویدیو جدید</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                عنوان\n              </label>\n              <input\n                type=\"text\"\n                value={createData.title}\n                onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"عنوان ویدیو...\"\n              />\n            </div>\n\n\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  آدرس ویدیو\n                </label>\n                <input\n                  type=\"url\"\n                  value={createData.videoUrl}\n                  onChange={(e) => setCreateData({...createData, videoUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"https://example.com/video.mp4\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  تصویر کوچک\n                </label>\n                <input\n                  type=\"url\"\n                  value={createData.thumbnailUrl}\n                  onChange={(e) => setCreateData({...createData, thumbnailUrl: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"/uploads/thumbnail.jpg\"\n                />\n              </div>\n            </div>\n\n\n\n            <div className=\"grid grid-cols-1 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  ترتیب\n                </label>\n                <input\n                  type=\"number\"\n                  value={createData.orderPosition}\n                  onChange={(e) => setCreateData({...createData, orderPosition: parseInt(e.target.value)})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                برچسب‌ها (با کاما جدا کنید)\n              </label>\n              <input\n                type=\"text\"\n                value={createData.tags}\n                onChange={(e) => setCreateData({...createData, tags: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"کشاورزی, باغبانی, آموزش\"\n              />\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={handleCreateSubmit}\n                disabled={createMutation.isPending}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending ? 'در حال ایجاد...' : 'ایجاد ویدیو'}\n              </button>\n              <button\n                onClick={() => setShowCreateForm(false)}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n              >\n                لغو\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg border overflow-hidden\">\n        <div className=\"p-4 border-b bg-gray-50\">\n          <h4 className=\"font-semibold\">لیست ویدیوهای آموزشی</h4>\n        </div>\n        \n        {!videos || videos.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            هنوز ویدیویی اضافه نشده است.\n          </div>\n        ) : (\n          <div className=\"divide-y divide-gray-200\">\n            {videos.map((video) => (\n              <div key={video.id} className=\"p-4 hover:bg-gray-50\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex-1\">\n                    <h5 className=\"font-semibold text-gray-900\">{video.title}</h5>\n                    <div className=\"flex items-center gap-4 mt-2 text-sm text-gray-500\">\n                      <span>ترتیب: {video.orderPosition}</span>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => handleEdit(video)}\n                      className=\"text-blue-600 hover:text-blue-800\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button\n                      onClick={() => deleteMutation.mutate(video.id)}\n                      disabled={deleteMutation.isPending}\n                      className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                    >\n                      <Trash className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {editingVideo && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-semibold\">ویرایش ویدیو</h3>\n                <button\n                  onClick={() => setEditingVideo(null)}\n                  className=\"text-gray-500 hover:text-gray-700\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    عنوان\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editingVideo.title}\n                    onChange={(e) => setEditingVideo({...editingVideo, title: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      آدرس ویدیو\n                    </label>\n                    <input\n                      type=\"url\"\n                      value={editingVideo.videoUrl}\n                      onChange={(e) => setEditingVideo({...editingVideo, videoUrl: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      تصویر کوچک\n                    </label>\n                    <input\n                      type=\"url\"\n                      value={editingVideo.thumbnailUrl}\n                      onChange={(e) => setEditingVideo({...editingVideo, thumbnailUrl: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n\n\n                <div className=\"grid grid-cols-1 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      ترتیب\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={editingVideo.orderPosition}\n                      onChange={(e) => setEditingVideo({...editingVideo, orderPosition: parseInt(e.target.value)})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    برچسب‌ها (با کاما جدا کنید)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editingVideo.tags}\n                    onChange={(e) => setEditingVideo({...editingVideo, tags: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={handleUpdateSubmit}\n                    disabled={updateMutation.isPending}\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره تغییرات'}\n                  </button>\n                  <button\n                    onClick={() => setEditingVideo(null)}\n                    className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n                  >\n                    لغو\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction AboutUsTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingAbout, setEditingAbout] = useState<any>(null);\n  const [createData, setCreateData] = useState({\n    title: '',\n    mainContent: '',\n    mission: '',\n    vision: '',\n    values: '',\n    mainImageUrl: '',\n    foundingYear: '',\n    companySize: '',\n    isActive: true\n  });\n\n  const { data: aboutUsData, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/about-us'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch('/api/about-us', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در ایجاد محتوا');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/about-us'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        mainContent: '',\n        mission: '',\n        vision: '',\n        values: '',\n        mainImageUrl: '',\n        foundingYear: '',\n        companySize: '',\n        isActive: true\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch(`/api/about-us/${data.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در بروزرسانی محتوا');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/about-us'] });\n      setEditingAbout(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/about-us/${id}`, {\n        method: 'DELETE'\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف محتوا');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/about-us'] });\n    },\n  });\n\n  const handleCreateSubmit = () => {\n    if (!createData.title.trim() || !createData.mainContent.trim()) {\n      alert('لطفاً عنوان و محتوای اصلی را وارد کنید');\n      return;\n    }\n    createMutation.mutate(createData);\n  };\n\n  const handleUpdateSubmit = () => {\n    if (!editingAbout.title.trim() || !editingAbout.mainContent.trim()) {\n      alert('لطفاً عنوان و محتوای اصلی را وارد کنید');\n      return;\n    }\n    updateMutation.mutate(editingAbout);\n  };\n\n  if (isLoading) {\n    return <div className=\"flex justify-center items-center h-64\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold\">مدیریت درباره ما</h2>\n        <button\n          onClick={() => setShowCreateForm(true)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          افزودن محتوا\n        </button>\n      </div>\n\n      {showCreateForm && (\n        <div className=\"bg-white p-6 rounded-lg border\">\n          <h3 className=\"text-lg font-semibold mb-4\">افزودن محتوای جدید</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n              <input\n                type=\"text\"\n                value={createData.title}\n                onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">محتوای اصلی</label>\n              <textarea\n                value={createData.mainContent}\n                onChange={(e) => setCreateData({...createData, mainContent: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={6}\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">ماموریت</label>\n              <textarea\n                value={createData.mission}\n                onChange={(e) => setCreateData({...createData, mission: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">چشم‌انداز</label>\n              <textarea\n                value={createData.vision}\n                onChange={(e) => setCreateData({...createData, vision: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">ارزش‌ها</label>\n              <textarea\n                value={createData.values}\n                onChange={(e) => setCreateData({...createData, values: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">سال تأسیس</label>\n                <input\n                  type=\"text\"\n                  value={createData.foundingYear}\n                  onChange={(e) => setCreateData({...createData, foundingYear: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">اندازه شرکت</label>\n                <input\n                  type=\"text\"\n                  value={createData.companySize}\n                  onChange={(e) => setCreateData({...createData, companySize: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">تصویر اصلی</label>\n              <input\n                type=\"url\"\n                value={createData.mainImageUrl}\n                onChange={(e) => setCreateData({...createData, mainImageUrl: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"https://example.com/image.jpg\"\n              />\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={createData.isActive}\n                onChange={(e) => setCreateData({...createData, isActive: e.target.checked})}\n                className=\"rounded\"\n              />\n              <label className=\"text-sm text-gray-700\">فعال</label>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={handleCreateSubmit}\n                disabled={createMutation.isPending}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending ? 'در حال ایجاد...' : 'ایجاد محتوا'}\n              </button>\n              <button\n                onClick={() => setShowCreateForm(false)}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n              >\n                لغو\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg border\">\n        {aboutUsData && aboutUsData.length > 0 ? (\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">محتوای موجود</h3>\n            <div className=\"space-y-4\">\n              {aboutUsData.map((item: any) => (\n                <div key={item.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{item.title}</h4>\n                      <p className=\"text-sm text-gray-600 mt-1\">{item.mainContent.substring(0, 150)}...</p>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <span className={`px-2 py-1 rounded text-xs ${\n                        item.isActive ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {item.isActive ? 'فعال' : 'غیرفعال'}\n                      </span>\n                      <button\n                        onClick={() => setEditingAbout(item)}\n                        className=\"text-blue-600 hover:text-blue-800\"\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </button>\n                      <button\n                        onClick={() => deleteMutation.mutate(item.id)}\n                        disabled={deleteMutation.isPending}\n                        className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"p-6 text-center text-gray-500\">\n            هیچ محتوایی یافت نشد. محتوای جدید اضافه کنید.\n          </div>\n        )}\n      </div>\n\n      {editingAbout && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-semibold\">ویرایش محتوا</h3>\n                <button\n                  onClick={() => setEditingAbout(null)}\n                  className=\"text-gray-500 hover:text-gray-700\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n                  <input\n                    type=\"text\"\n                    value={editingAbout.title || ''}\n                    onChange={(e) => setEditingAbout({...editingAbout, title: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">محتوای اصلی</label>\n                  <textarea\n                    value={editingAbout.mainContent || ''}\n                    onChange={(e) => setEditingAbout({...editingAbout, mainContent: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={6}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">ماموریت</label>\n                  <textarea\n                    value={editingAbout.mission || ''}\n                    onChange={(e) => setEditingAbout({...editingAbout, mission: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={3}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">چشم‌انداز</label>\n                  <textarea\n                    value={editingAbout.vision || ''}\n                    onChange={(e) => setEditingAbout({...editingAbout, vision: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={3}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">ارزش‌ها</label>\n                  <textarea\n                    value={editingAbout.values || ''}\n                    onChange={(e) => setEditingAbout({...editingAbout, values: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={3}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">سال تأسیس</label>\n                    <input\n                      type=\"text\"\n                      value={editingAbout.foundingYear || ''}\n                      onChange={(e) => setEditingAbout({...editingAbout, foundingYear: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">اندازه شرکت</label>\n                    <input\n                      type=\"text\"\n                      value={editingAbout.companySize || ''}\n                      onChange={(e) => setEditingAbout({...editingAbout, companySize: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">تصویر اصلی</label>\n                  <input\n                    type=\"url\"\n                    value={editingAbout.mainImageUrl || ''}\n                    onChange={(e) => setEditingAbout({...editingAbout, mainImageUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://example.com/image.jpg\"\n                  />\n                </div>\n\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={editingAbout.isActive}\n                    onChange={(e) => setEditingAbout({...editingAbout, isActive: e.target.checked})}\n                    className=\"rounded\"\n                  />\n                  <label className=\"text-sm text-gray-700\">فعال</label>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={handleUpdateSubmit}\n                    disabled={updateMutation.isPending}\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره تغییرات'}\n                  </button>\n                  <button\n                    onClick={() => setEditingAbout(null)}\n                    className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n                  >\n                    لغو\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ContactUsTab() {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingContact, setEditingContact] = useState<any>(null);\n  const [createData, setCreateData] = useState({\n    title: '',\n    description: '',\n    address: '',\n    phone: '',\n    email: '',\n    workingHours: '',\n    mapUrl: '',\n    mapLatitude: '',\n    mapLongitude: '',\n    socialLinks: {\n      instagram: '',\n      telegram: '',\n      linkedin: '',\n      whatsapp: ''\n    },\n    isActive: true\n  });\n\n  const { data: contactUsData, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/contact-us'],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch('/api/contact-us', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در ایجاد اطلاعات تماس');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-us'] });\n      setShowCreateForm(false);\n      setCreateData({\n        title: '',\n        description: '',\n        address: '',\n        phone: '',\n        email: '',\n        workingHours: '',\n        mapUrl: '',\n        mapLatitude: '',\n        mapLongitude: '',\n        socialLinks: {\n          instagram: '',\n          telegram: '',\n          linkedin: '',\n          whatsapp: ''\n        },\n        isActive: true\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch(`/api/contact-us/${data.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در بروزرسانی اطلاعات تماس');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-us'] });\n      setEditingContact(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/contact-us/${id}`, {\n        method: 'DELETE'\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف اطلاعات تماس');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-us'] });\n    },\n  });\n\n  const handleCreateSubmit = () => {\n    if (!createData.title.trim()) {\n      alert('لطفاً عنوان را وارد کنید');\n      return;\n    }\n    createMutation.mutate(createData);\n  };\n\n  const handleUpdateSubmit = () => {\n    if (!editingContact.title.trim()) {\n      alert('لطفاً عنوان را وارد کنید');\n      return;\n    }\n    updateMutation.mutate(editingContact);\n  };\n\n  if (isLoading) {\n    return <div className=\"flex justify-center items-center h-64\">در حال بارگذاری...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold\">مدیریت تماس با ما</h2>\n        <button\n          onClick={() => setShowCreateForm(true)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          افزودن اطلاعات تماس\n        </button>\n      </div>\n\n      {showCreateForm && (\n        <div className=\"bg-white p-6 rounded-lg border\">\n          <h3 className=\"text-lg font-semibold mb-4\">افزودن اطلاعات تماس جدید</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n              <input\n                type=\"text\"\n                value={createData.title}\n                onChange={(e) => setCreateData({...createData, title: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">توضیحات</label>\n              <textarea\n                value={createData.description}\n                onChange={(e) => setCreateData({...createData, description: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس</label>\n              <textarea\n                value={createData.address}\n                onChange={(e) => setCreateData({...createData, address: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">تلفن</label>\n                <input\n                  type=\"text\"\n                  value={createData.phone}\n                  onChange={(e) => setCreateData({...createData, phone: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">ایمیل</label>\n                <input\n                  type=\"email\"\n                  value={createData.email}\n                  onChange={(e) => setCreateData({...createData, email: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">ساعات کاری</label>\n              <input\n                type=\"text\"\n                value={createData.workingHours}\n                onChange={(e) => setCreateData({...createData, workingHours: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"شنبه تا پنج‌شنبه، 8 صبح تا 5 عصر\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">لینک نقشه</label>\n              <input\n                type=\"url\"\n                value={createData.mapUrl}\n                onChange={(e) => setCreateData({...createData, mapUrl: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"https://maps.google.com/...\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">عرض جغرافیایی</label>\n                <input\n                  type=\"text\"\n                  value={createData.mapLatitude}\n                  onChange={(e) => setCreateData({...createData, mapLatitude: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"35.7219\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">طول جغرافیایی</label>\n                <input\n                  type=\"text\"\n                  value={createData.mapLongitude}\n                  onChange={(e) => setCreateData({...createData, mapLongitude: e.target.value})}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"51.3347\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">شبکه‌های اجتماعی</label>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-xs text-gray-500 mb-1\">اینستاگرام</label>\n                  <input\n                    type=\"url\"\n                    value={createData.socialLinks.instagram}\n                    onChange={(e) => setCreateData({...createData, socialLinks: {...createData.socialLinks, instagram: e.target.value}})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://instagram.com/...\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-xs text-gray-500 mb-1\">تلگرام</label>\n                  <input\n                    type=\"url\"\n                    value={createData.socialLinks.telegram}\n                    onChange={(e) => setCreateData({...createData, socialLinks: {...createData.socialLinks, telegram: e.target.value}})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://t.me/...\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-xs text-gray-500 mb-1\">لینکدین</label>\n                  <input\n                    type=\"url\"\n                    value={createData.socialLinks.linkedin}\n                    onChange={(e) => setCreateData({...createData, socialLinks: {...createData.socialLinks, linkedin: e.target.value}})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://linkedin.com/...\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-xs text-gray-500 mb-1\">واتساپ</label>\n                  <input\n                    type=\"url\"\n                    value={createData.socialLinks.whatsapp}\n                    onChange={(e) => setCreateData({...createData, socialLinks: {...createData.socialLinks, whatsapp: e.target.value}})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://wa.me/...\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={createData.isActive}\n                onChange={(e) => setCreateData({...createData, isActive: e.target.checked})}\n                className=\"rounded\"\n              />\n              <label className=\"text-sm text-gray-700\">فعال</label>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={handleCreateSubmit}\n                disabled={createMutation.isPending}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending ? 'در حال ایجاد...' : 'ایجاد اطلاعات'}\n              </button>\n              <button\n                onClick={() => setShowCreateForm(false)}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n              >\n                لغو\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg border\">\n        {contactUsData && contactUsData.length > 0 ? (\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">اطلاعات تماس موجود</h3>\n            <div className=\"space-y-4\">\n              {contactUsData.map((item: any) => (\n                <div key={item.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{item.title}</h4>\n                      <p className=\"text-sm text-gray-600 mt-1\">{item.description}</p>\n                      <div className=\"mt-2 text-sm text-gray-500 space-y-1\">\n                        {item.phone && <div>📞 {item.phone}</div>}\n                        {item.email && <div>✉️ {item.email}</div>}\n                        {item.address && <div>📍 {item.address}</div>}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <span className={`px-2 py-1 rounded text-xs ${\n                        item.isActive ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {item.isActive ? 'فعال' : 'غیرفعال'}\n                      </span>\n                      <button\n                        onClick={() => setEditingContact({\n                          ...item,\n                          socialLinks: item.socialLinks || {}\n                        })}\n                        className=\"text-blue-600 hover:text-blue-800\"\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </button>\n                      <button\n                        onClick={() => deleteMutation.mutate(item.id)}\n                        disabled={deleteMutation.isPending}\n                        className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"p-6 text-center text-gray-500\">\n            هیچ اطلاعات تماسی یافت نشد. اطلاعات جدید اضافه کنید.\n          </div>\n        )}\n      </div>\n\n      {editingContact && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-semibold\">ویرایش اطلاعات تماس</h3>\n                <button\n                  onClick={() => setEditingContact(null)}\n                  className=\"text-gray-500 hover:text-gray-700\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">عنوان</label>\n                  <input\n                    type=\"text\"\n                    value={editingContact.title || ''}\n                    onChange={(e) => setEditingContact({...editingContact, title: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">توضیحات</label>\n                  <textarea\n                    value={editingContact.description || ''}\n                    onChange={(e) => setEditingContact({...editingContact, description: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={3}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">آدرس</label>\n                  <textarea\n                    value={editingContact.address || ''}\n                    onChange={(e) => setEditingContact({...editingContact, address: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={2}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">تلفن</label>\n                    <input\n                      type=\"text\"\n                      value={editingContact.phone || ''}\n                      onChange={(e) => setEditingContact({...editingContact, phone: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">ایمیل</label>\n                    <input\n                      type=\"email\"\n                      value={editingContact.email || ''}\n                      onChange={(e) => setEditingContact({...editingContact, email: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">ساعات کاری</label>\n                  <input\n                    type=\"text\"\n                    value={editingContact.workingHours || ''}\n                    onChange={(e) => setEditingContact({...editingContact, workingHours: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"شنبه تا پنج‌شنبه، 8 صبح تا 5 عصر\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">لینک نقشه</label>\n                  <input\n                    type=\"url\"\n                    value={editingContact.mapUrl || ''}\n                    onChange={(e) => setEditingContact({...editingContact, mapUrl: e.target.value})}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://maps.google.com/...\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">عرض جغرافیایی</label>\n                    <input\n                      type=\"text\"\n                      value={editingContact.mapLatitude || ''}\n                      onChange={(e) => setEditingContact({...editingContact, mapLatitude: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"35.7219\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">طول جغرافیایی</label>\n                    <input\n                      type=\"text\"\n                      value={editingContact.mapLongitude || ''}\n                      onChange={(e) => setEditingContact({...editingContact, mapLongitude: e.target.value})}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"51.3347\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">شبکه‌های اجتماعی</label>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-xs text-gray-500 mb-1\">اینستاگرام</label>\n                      <input\n                        type=\"url\"\n                        value={editingContact.socialLinks?.instagram || ''}\n                        onChange={(e) => setEditingContact({\n                          ...editingContact,\n                          socialLinks: { ...editingContact.socialLinks, instagram: e.target.value }\n                        })}\n                        className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        placeholder=\"https://instagram.com/...\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs text-gray-500 mb-1\">تلگرام</label>\n                      <input\n                        type=\"url\"\n                        value={editingContact.socialLinks?.telegram || ''}\n                        onChange={(e) => setEditingContact({\n                          ...editingContact,\n                          socialLinks: { ...editingContact.socialLinks, telegram: e.target.value }\n                        })}\n                        className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        placeholder=\"https://t.me/...\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs text-gray-500 mb-1\">لینکدین</label>\n                      <input\n                        type=\"url\"\n                        value={editingContact.socialLinks?.linkedin || ''}\n                        onChange={(e) => setEditingContact({\n                          ...editingContact,\n                          socialLinks: { ...editingContact.socialLinks, linkedin: e.target.value }\n                        })}\n                        className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        placeholder=\"https://linkedin.com/...\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs text-gray-500 mb-1\">واتساپ</label>\n                      <input\n                        type=\"url\"\n                        value={editingContact.socialLinks?.whatsapp || ''}\n                        onChange={(e) => setEditingContact({\n                          ...editingContact,\n                          socialLinks: { ...editingContact.socialLinks, whatsapp: e.target.value }\n                        })}\n                        className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        placeholder=\"https://wa.me/...\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={editingContact.isActive}\n                    onChange={(e) => setEditingContact({...editingContact, isActive: e.target.checked})}\n                    className=\"rounded\"\n                  />\n                  <label className=\"text-sm text-gray-700\">فعال</label>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={handleUpdateSubmit}\n                    disabled={updateMutation.isPending}\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره تغییرات'}\n                  </button>\n                  <button\n                    onClick={() => setEditingContact(null)}\n                    className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n                  >\n                    لغو\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":188569},"client/src/pages/cart.tsx":{"content":"import { useState } from \"react\";\nimport { \n  ShoppingCart, \n  Plus, \n  Minus, \n  Trash2, \n  CreditCard,\n  Truck,\n  Tag,\n  ArrowRight\n} from \"lucide-react\";\n\ninterface CartItem {\n  id: number;\n  title: string;\n  type: 'course' | 'project' | 'document';\n  price: number;\n  originalPrice?: number;\n  quantity: number;\n  image?: string;\n  instructor?: string;\n  duration?: string;\n}\n\nexport default function Cart() {\n  const [cartItems, setCartItems] = useState<CartItem[]>([\n    {\n      id: 1,\n      title: \"دوره کامل React و TypeScript\",\n      type: \"course\",\n      price: 299000,\n      originalPrice: 399000,\n      quantity: 1,\n      instructor: \"محمد احمدی\",\n      duration: \"۱۲ ساعت\"\n    },\n    {\n      id: 2,\n      title: \"پروژه سایت فروشگاهی\",\n      type: \"project\",\n      price: 199000,\n      quantity: 1,\n      instructor: \"علی رضایی\",\n      duration: \"۸ ساعت\"\n    }\n  ]);\n\n  const [couponCode, setCouponCode] = useState(\"\");\n  const [appliedCoupon, setAppliedCoupon] = useState<string | null>(null);\n\n  const updateQuantity = (id: number, newQuantity: number) => {\n    if (newQuantity === 0) {\n      removeItem(id);\n      return;\n    }\n    \n    setCartItems(items =>\n      items.map(item =>\n        item.id === id ? { ...item, quantity: newQuantity } : item\n      )\n    );\n  };\n\n  const removeItem = (id: number) => {\n    setCartItems(items => items.filter(item => item.id !== id));\n  };\n\n  const applyCoupon = () => {\n    if (couponCode.trim()) {\n      setAppliedCoupon(couponCode.trim());\n      setCouponCode(\"\");\n    }\n  };\n\n  const subtotal = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n  const discount = appliedCoupon ? subtotal * 0.1 : 0; // 10% discount\n  const shipping = subtotal > 500000 ? 0 : 25000; // Free shipping over 500k\n  const total = subtotal - discount + shipping;\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fa-IR').format(price) + ' تومان';\n  };\n\n  const getTypeLabel = (type: string) => {\n    switch (type) {\n      case 'course': return 'دوره';\n      case 'project': return 'پروژه';\n      case 'document': return 'کتاب';\n      default: return type;\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 pb-20\" dir=\"rtl\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">سبد خرید</h1>\n        <p className=\"text-gray-600\">{cartItems.length} مورد در سبد خرید شما</p>\n      </div>\n\n      {cartItems.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <ShoppingCart className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">سبد خرید خالی است</h3>\n          <p className=\"text-gray-600 mb-4\">هنوز هیچ محصولی به سبد خرید اضافه نکرده‌اید</p>\n          <button className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\">\n            مشاهده محصولات\n          </button>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Cart Items */}\n          <div className=\"lg:col-span-2 space-y-4\">\n            {cartItems.map((item) => (\n              <div key={item.id} className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-20 h-20 bg-gray-200 rounded-lg flex items-center justify-center\">\n                    <ShoppingCart className=\"h-8 w-8 text-gray-400\" />\n                  </div>\n                  \n                  <div className=\"flex-1\">\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">\n                          {item.title}\n                        </h3>\n                        <div className=\"flex items-center gap-2 mb-2\">\n                          <span className=\"px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs\">\n                            {getTypeLabel(item.type)}\n                          </span>\n                          {item.instructor && (\n                            <span className=\"text-sm text-gray-600\">\n                              مدرس: {item.instructor}\n                            </span>\n                          )}\n                        </div>\n                        {item.duration && (\n                          <p className=\"text-sm text-gray-600\">\n                            مدت زمان: {item.duration}\n                          </p>\n                        )}\n                      </div>\n                      \n                      <button\n                        onClick={() => removeItem(item.id)}\n                        className=\"text-red-500 hover:text-red-700 p-1\"\n                      >\n                        <Trash2 className=\"h-5 w-5\" />\n                      </button>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between mt-4\">\n                      <div className=\"flex items-center gap-3\">\n                        <button\n                          onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                          className=\"w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50\"\n                        >\n                          <Minus className=\"h-4 w-4\" />\n                        </button>\n                        <span className=\"w-8 text-center font-medium\">\n                          {item.quantity}\n                        </span>\n                        <button\n                          onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                          className=\"w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50\"\n                        >\n                          <Plus className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                      \n                      <div className=\"text-left\">\n                        {item.originalPrice && (\n                          <div className=\"text-sm text-gray-500 line-through\">\n                            {formatPrice(item.originalPrice)}\n                          </div>\n                        )}\n                        <div className=\"text-lg font-semibold text-gray-900\">\n                          {formatPrice(item.price)}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Order Summary */}\n          <div className=\"space-y-6\">\n            {/* Coupon */}\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                <Tag className=\"h-5 w-5\" />\n                کد تخفیف\n              </h3>\n              \n              {appliedCoupon ? (\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-green-700 font-medium\">\n                      کد \"{appliedCoupon}\" اعمال شد\n                    </span>\n                    <button\n                      onClick={() => setAppliedCoupon(null)}\n                      className=\"text-green-600 hover:text-green-800\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex gap-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"کد تخفیف را وارد کنید\"\n                    value={couponCode}\n                    onChange={(e) => setCouponCode(e.target.value)}\n                    className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                  <button\n                    onClick={applyCoupon}\n                    className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors\"\n                  >\n                    اعمال\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {/* Order Summary */}\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">خلاصه سفارش</h3>\n              \n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">جمع کل:</span>\n                  <span className=\"font-medium\">{formatPrice(subtotal)}</span>\n                </div>\n                \n                {discount > 0 && (\n                  <div className=\"flex justify-between text-green-600\">\n                    <span>تخفیف:</span>\n                    <span>-{formatPrice(discount)}</span>\n                  </div>\n                )}\n                \n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 flex items-center gap-1\">\n                    <Truck className=\"h-4 w-4\" />\n                    هزینه ارسال:\n                  </span>\n                  <span className=\"font-medium\">\n                    {shipping === 0 ? 'رایگان' : formatPrice(shipping)}\n                  </span>\n                </div>\n                \n                <div className=\"border-t pt-3\">\n                  <div className=\"flex justify-between text-lg font-semibold\">\n                    <span>مبلغ نهایی:</span>\n                    <span className=\"text-blue-600\">{formatPrice(total)}</span>\n                  </div>\n                </div>\n              </div>\n\n              <button className=\"w-full mt-6 px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center justify-center gap-2\">\n                <CreditCard className=\"h-5 w-5\" />\n                ادامه فرآیند خرید\n                <ArrowRight className=\"h-4 w-4\" />\n              </button>\n            </div>\n\n            {/* Shipping Info */}\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Truck className=\"h-5 w-5 text-blue-600\" />\n                <span className=\"font-medium text-blue-900\">اطلاعات ارسال</span>\n              </div>\n              <p className=\"text-sm text-blue-700\">\n                برای خریدهای بالای ۵۰۰,۰۰۰ تومان، ارسال رایگان است.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":11020},"client/src/pages/categories-simple.tsx":{"content":"import { Link } from \"wouter\";\nimport { \n  BookOpen, \n  Video, \n  Users, \n  FileText,\n  ArrowRight\n} from \"lucide-react\";\n\nexport default function Categories() {\n  const categories = [\n    {\n      id: 1,\n      title: \"وبینار\",\n      description: \"آموزش‌های آنلاین و جلسات زنده\",\n      icon: Video,\n      link: \"/projects?type=webinar\",\n      color: \"bg-gradient-to-br from-red-500 to-pink-600\",\n      count: \"۱۲+ وبینار\"\n    },\n    {\n      id: 2,\n      title: \"دوره‌های آموزشی\",\n      description: \"دوره‌های جامع و تخصصی\",\n      icon: BookOpen,\n      link: \"/courses\",\n      color: \"bg-gradient-to-br from-blue-500 to-indigo-600\",\n      count: \"۸+ دوره\"\n    },\n    {\n      id: 3,\n      title: \"پروژه‌ها\",\n      description: \"پروژه‌های عملی و کاربردی\",\n      icon: FileText,\n      link: \"/projects?type=project\",\n      color: \"bg-gradient-to-br from-green-500 to-emerald-600\",\n      count: \"۱۵+ پروژه\"\n    },\n    {\n      id: 4,\n      title: \"انجمن\",\n      description: \"گفتگو و تبادل نظر با سایرین\",\n      icon: Users,\n      link: \"/community\",\n      color: \"bg-gradient-to-br from-purple-500 to-violet-600\",\n      count: \"۵۰۰+ عضو\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50/50 p-4 pb-24\" dir=\"rtl\">\n      {/* Header */}\n      <div className=\"text-center mb-12 pt-8\">\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n          دسته‌بندی‌ها\n        </h1>\n        <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n          محتوای آموزشی متنوع و با کیفیت در انتظار شماست\n        </p>\n      </div>\n\n      {/* Categories Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto\">\n        {categories.map((category) => (\n          <Link key={category.id} href={category.link}>\n            <div className=\"hover:shadow-lg transition-all duration-300 hover:-translate-y-2 cursor-pointer group bg-white rounded-xl border\">\n              <div className=\"text-center p-6\">\n                <div className={`${category.color} w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4 text-white group-hover:scale-110 transition-transform duration-300`}>\n                  <category.icon className=\"w-8 h-8\" />\n                </div>\n                <h3 className=\"text-xl mb-2 font-bold text-gray-900\">{category.title}</h3>\n                <p className=\"text-center text-gray-600 mb-4\">\n                  {category.description}\n                </p>\n              </div>\n              \n              <div className=\"px-6 pb-6\">\n                <div className=\"flex items-center justify-between text-sm text-gray-500\">\n                  <span>{category.count}</span>\n                  <div className=\"flex items-center gap-1 group-hover:text-blue-600 transition-colors\">\n                    <span>مشاهده</span>\n                    <ArrowRight className=\"h-4 w-4 group-hover:translate-x-1 transition-transform\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"mt-12 grid grid-cols-2 md:grid-cols-4 gap-4 max-w-2xl mx-auto\">\n        <div className=\"text-center p-4 bg-white rounded-lg shadow-sm border\">\n          <div className=\"text-2xl font-bold text-blue-600\">۱۲+</div>\n          <div className=\"text-sm text-gray-600\">وبینار</div>\n        </div>\n        <div className=\"text-center p-4 bg-white rounded-lg shadow-sm border\">\n          <div className=\"text-2xl font-bold text-green-600\">۸+</div>\n          <div className=\"text-sm text-gray-600\">دوره</div>\n        </div>\n        <div className=\"text-center p-4 bg-white rounded-lg shadow-sm border\">\n          <div className=\"text-2xl font-bold text-purple-600\">۱۵+</div>\n          <div className=\"text-sm text-gray-600\">پروژه</div>\n        </div>\n        <div className=\"text-center p-4 bg-white rounded-lg shadow-sm border\">\n          <div className=\"text-2xl font-bold text-red-600\">۵۰۰+</div>\n          <div className=\"text-sm text-gray-600\">کاربر</div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4327},"client/src/pages/categories.tsx":{"content":"import { Link } from \"wouter\";\nimport { \n  BookOpen, \n  Video, \n  Users, \n  FileText,\n  ArrowRight\n} from \"lucide-react\";\n\nexport default function Categories() {\n  const categories = [\n    {\n      id: 1,\n      title: \"وبینار\",\n      description: \"وبینارهای آموزشی و تخصصی\",\n      icon: <Video className=\"h-12 w-12\" />,\n      link: \"/projects\",\n      color: \"bg-blue-500\",\n      count: \"۱۲ وبینار\"\n    },\n    {\n      id: 2,\n      title: \"کارگاه\",\n      description: \"کارگاه‌های عملی و آموزشی\",\n      icon: <Users className=\"h-12 w-12\" />,\n      link: \"/courses\",\n      color: \"bg-green-500\",\n      count: \"۸ کارگاه\"\n    },\n    {\n      id: 3,\n      title: \"فصلنامه رویش سبز\",\n      description: \"مجله تخصصی کشاورزی\",\n      icon: <FileText className=\"h-12 w-12\" />,\n      link: \"/magazine\",\n      color: \"bg-purple-500\",\n      count: \"۴ شماره\"\n    },\n    {\n      id: 4,\n      title: \"کتابخانه\",\n      description: \"منابع آموزشی و اسناد\",\n      icon: <BookOpen className=\"h-12 w-12\" />,\n      link: \"/library\",\n      color: \"bg-orange-500\",\n      count: \"۸ سند\"\n    }\n  ];\n\n  return (\n    <div className=\"container mx-auto px-6 py-8\">\n      {/* Header */}\n      <div className=\"mb-8 text-center\">\n        <h1 className=\"text-3xl font-bold text-right mb-2\">دسته‌بندی‌های آموزشی</h1>\n        <p className=\"text-muted-foreground text-right\">\n          انتخاب کنید که به کدام بخش می‌خواهید بروید\n        </p>\n      </div>\n\n      {/* Categories Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto\">\n        {categories.map((category) => (\n          <Link key={category.id} href={category.link}>\n            <Card className=\"hover:shadow-lg transition-all duration-300 hover:-translate-y-2 cursor-pointer group\">\n              <CardHeader className=\"text-center\">\n                <div className={`${category.color} w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4 text-white group-hover:scale-110 transition-transform duration-300`}>\n                  {category.icon}\n                </div>\n                <CardTitle className=\"text-xl mb-2\">{category.title}</CardTitle>\n                <CardDescription className=\"text-center\">\n                  {category.description}\n                </CardDescription>\n              </CardHeader>\n              \n              <CardContent>\n                <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                  <span>{category.count}</span>\n                  <div className=\"flex items-center gap-1 group-hover:text-primary transition-colors\">\n                    <span>مشاهده</span>\n                    <ArrowRight className=\"h-4 w-4 group-hover:translate-x-1 transition-transform\" />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </Link>\n        ))}\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"mt-12 grid grid-cols-2 md:grid-cols-4 gap-4 max-w-2xl mx-auto\">\n        <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n          <div className=\"text-2xl font-bold text-blue-600\">۱۲</div>\n          <div className=\"text-sm text-blue-700\">وبینار فعال</div>\n        </div>\n        <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n          <div className=\"text-2xl font-bold text-green-600\">۸</div>\n          <div className=\"text-sm text-green-700\">کارگاه آموزشی</div>\n        </div>\n        <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n          <div className=\"text-2xl font-bold text-purple-600\">۴</div>\n          <div className=\"text-sm text-purple-700\">شماره فصلنامه</div>\n        </div>\n        <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n          <div className=\"text-2xl font-bold text-orange-600\">۸</div>\n          <div className=\"text-sm text-orange-700\">سند کتابخانه</div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4121},"client/src/pages/contact-us.tsx":{"content":"import { useQuery } from '@tanstack/react-query';\nimport { ArrowRight, Phone, Mail, MapPin, Clock, Send, User } from 'lucide-react';\n\nexport default function ContactUsPage() {\n  const { data: contactData, isLoading } = useQuery({\n    queryKey: ['/api/contact-us'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">در حال بارگذاری...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const contactInfo = contactData?.[0];\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-4xl mx-auto px-4 py-6\">\n          <div className=\"flex items-center gap-3\">\n            <button \n              onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n              className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              <ArrowRight className=\"w-5 h-5 text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold text-gray-900\">تماس با ما</h1>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        {contactInfo ? (\n          <div className=\"space-y-8\">\n            {/* Title and Description */}\n            <div className=\"bg-white rounded-lg shadow-sm p-8\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-6 text-center\">\n                {contactInfo.title}\n              </h2>\n              \n              {contactInfo.description && (\n                <div className=\"prose prose-lg max-w-none text-gray-700 leading-relaxed mb-8\">\n                  {contactInfo.description.split('\\n').map((paragraph: string, index: number) => (\n                    <p key={index} className=\"mb-4\">\n                      {paragraph}\n                    </p>\n                  ))}\n                </div>\n              )}\n\n              {/* Contact Information Grid */}\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                {/* Phone */}\n                {contactInfo.phone && (\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                        <Phone className=\"w-5 h-5 text-blue-600\" />\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">شماره تماس</h3>\n                    </div>\n                    <p className=\"text-gray-700 font-medium\" dir=\"ltr\">\n                      {contactInfo.phone}\n                    </p>\n                  </div>\n                )}\n\n                {/* Email */}\n                {contactInfo.email && (\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\n                        <Mail className=\"w-5 h-5 text-green-600\" />\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">ایمیل</h3>\n                    </div>\n                    <p className=\"text-gray-700 font-medium\" dir=\"ltr\">\n                      {contactInfo.email}\n                    </p>\n                  </div>\n                )}\n\n                {/* Address */}\n                {contactInfo.address && (\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center\">\n                        <MapPin className=\"w-5 h-5 text-orange-600\" />\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">آدرس</h3>\n                    </div>\n                    <p className=\"text-gray-700 leading-relaxed\">\n                      {contactInfo.address}\n                    </p>\n                  </div>\n                )}\n\n                {/* Working Hours */}\n                {contactInfo.workingHours && (\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n                        <Clock className=\"w-5 h-5 text-purple-600\" />\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">ساعات کاری</h3>\n                    </div>\n                    <p className=\"text-gray-700 leading-relaxed\">\n                      {contactInfo.workingHours}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Social Media */}\n            {(contactInfo.socialMedia || contactInfo.website) && (\n              <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">شبکه‌های اجتماعی</h3>\n                <div className=\"flex flex-wrap gap-4\">\n                  {contactInfo.website && (\n                    <a \n                      href={contactInfo.website} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className=\"bg-blue-50 hover:bg-blue-100 text-blue-600 px-4 py-2 rounded-lg transition-colors\"\n                    >\n                      وب‌سایت\n                    </a>\n                  )}\n                  {contactInfo.socialMedia && (\n                    <div className=\"text-gray-700\">\n                      {contactInfo.socialMedia}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Additional Info */}\n            {contactInfo.additionalInfo && (\n              <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">اطلاعات تکمیلی</h3>\n                <div className=\"text-gray-700 leading-relaxed\">\n                  {contactInfo.additionalInfo.split('\\n').map((info: string, index: number) => (\n                    <p key={index} className=\"mb-2\">\n                      {info}\n                    </p>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Contact Form */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <h3 className=\"text-xl font-bold text-gray-900 mb-6\">فرم تماس</h3>\n              <form className=\"space-y-6\">\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      نام و نام خانوادگی\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"نام خود را وارد کنید\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      ایمیل\n                    </label>\n                    <input\n                      type=\"email\"\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"ایمیل خود را وارد کنید\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    موضوع\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"موضوع پیام خود را وارد کنید\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    متن پیام\n                  </label>\n                  <textarea\n                    rows={6}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"متن پیام خود را وارد کنید\"\n                  ></textarea>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center gap-2\"\n                >\n                  <Send className=\"w-5 h-5\" />\n                  ارسال پیام\n                </button>\n              </form>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-white rounded-lg shadow-sm p-8 text-center\">\n            <div className=\"w-16 h-16 bg-gray-100 rounded-lg mx-auto mb-4 flex items-center justify-center\">\n              <Phone className=\"w-8 h-8 text-gray-300\" />\n            </div>\n            <h3 className=\"text-xl font-bold text-gray-900 mb-2\">اطلاعات تماس موجود نیست</h3>\n            <p className=\"text-gray-600 mb-6\">\n              هنوز اطلاعات تماسی برای این بخش وارد نشده است.\n            </p>\n            <button \n              onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n              className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              بازگشت به صفحه اصلی\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":10350},"client/src/pages/courses-simple.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { type Course } from \"@shared/schema\";\nimport CourseCard from \"@/components/course/CourseCard\";\nimport { Search, Filter } from \"lucide-react\";\nimport { AuthGuard } from \"@/components/AuthGuard\";\n\nexport default function Courses() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n\n  const { data: courses = [], isLoading } = useQuery<Course[]>({\n    queryKey: ['/api/courses'],\n  });\n\n  // Filter courses based on search term and category\n  const filteredCourses = courses.filter(course => {\n    const matchesSearch = course.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (course.description || '').toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = selectedCategory === \"all\" || course.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  // Get unique categories from courses\n  const categories = Array.from(new Set(courses.map(course => course.category).filter(Boolean)));\n\n  return (\n    <AuthGuard>\n      <div className=\"space-y-6\" dir=\"rtl\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">دوره‌های آموزشی</h1>\n        \n        {/* Search and Filter */}\n        <div className=\"flex flex-col md:flex-row gap-4\">\n          <div className=\"relative flex-1\">\n            <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n            <input\n              type=\"text\"\n              placeholder=\"جستجو در دوره‌ها...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pr-10 pl-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          \n          <div className=\"flex gap-4 items-center\">\n            <select \n              value={selectedCategory} \n              onChange={(e) => setSelectedCategory(e.target.value)}\n              className=\"w-40 px-3 py-3 border border-gray-300 rounded-lg bg-white text-gray-900 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"all\">همه دسته‌ها</option>\n              {categories.map(category => (\n                <option key={category} value={category || ''}>{category}</option>\n              ))}\n            </select>\n            <button className=\"border border-gray-300 hover:bg-gray-50 text-gray-700 px-4 py-3 rounded-lg flex items-center gap-2 transition-colors\">\n              <Filter className=\"h-4 w-4\" />\n              <span>فیلتر</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Course Statistics */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg p-4 text-center shadow-sm\">\n          <div className=\"text-2xl font-bold text-blue-600 mb-1\">{courses.length}</div>\n          <div className=\"text-sm text-gray-600\">کل دوره‌ها</div>\n        </div>\n        <div className=\"bg-white rounded-lg p-4 text-center shadow-sm\">\n          <div className=\"text-2xl font-bold text-green-600 mb-1\">{courses.filter(c => c.accessLevel === 'free').length}</div>\n          <div className=\"text-sm text-gray-600\">دوره‌های رایگان</div>\n        </div>\n        <div className=\"bg-white rounded-lg p-4 text-center shadow-sm\">\n          <div className=\"text-2xl font-bold text-orange-600 mb-1\">{courses.filter(c => c.accessLevel === 'premium').length}</div>\n          <div className=\"text-sm text-gray-600\">دوره‌های پریمیوم</div>\n        </div>\n        <div className=\"bg-white rounded-lg p-4 text-center shadow-sm\">\n          <div className=\"text-2xl font-bold text-purple-600 mb-1\">{courses.filter(c => c.accessLevel === 'vip').length}</div>\n          <div className=\"text-sm text-gray-600\">دوره‌های ویژه</div>\n        </div>\n      </div>\n      \n      {/* Courses Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {isLoading ? (\n          Array(6).fill(0).map((_, i) => (\n            <div key={i} className=\"bg-white rounded-xl shadow-sm overflow-hidden animate-pulse\">\n              <div className=\"w-full h-48 bg-gray-300\"></div>\n              <div className=\"p-4\">\n                <div className=\"w-3/4 h-6 bg-gray-300 rounded mb-2\"></div>\n                <div className=\"w-full h-4 bg-gray-300 rounded mb-3\"></div>\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"w-1/3 h-4 bg-gray-300 rounded\"></div>\n                  <div className=\"w-20 h-8 bg-gray-300 rounded\"></div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : filteredCourses.length > 0 ? (\n          filteredCourses.map((course) => (\n            <div key={course.id} className=\"bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-md transition-shadow\">\n              <div className=\"relative\">\n                {course.thumbnailUrl ? (\n                  <img \n                    src={course.thumbnailUrl} \n                    alt={course.title}\n                    className=\"w-full h-48 object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-full h-48 bg-gradient-to-br from-blue-400 to-purple-600 flex items-center justify-center\">\n                    <span className=\"text-white text-lg font-medium\">{course.title.charAt(0)}</span>\n                  </div>\n                )}\n                \n                {/* Access Level Badge */}\n                <div className=\"absolute top-2 right-2\">\n                  <span className={`px-2 py-1 text-xs rounded-full text-white ${\n                    course.accessLevel === 'free' ? 'bg-green-500' :\n                    course.accessLevel === 'premium' ? 'bg-orange-500' : 'bg-purple-500'\n                  }`}>\n                    {course.accessLevel === 'free' ? 'رایگان' :\n                     course.accessLevel === 'premium' ? 'پریمیوم' : 'ویژه'}\n                  </span>\n                </div>\n                \n                {course.isLocked && (\n                  <div className=\"absolute top-2 left-2\">\n                    <span className=\"px-2 py-1 text-xs rounded-full bg-red-500 text-white\">\n                      قفل شده\n                    </span>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2 line-clamp-1\">\n                  {course.title}\n                </h3>\n                <p className=\"text-gray-600 text-sm mb-4 line-clamp-2\">\n                  {course.description}\n                </p>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-sm text-gray-500\">\n                        {course.totalModules || 0} جلسه\n                      </span>\n                    </div>\n                    {course.price && course.price > 0 && (\n                      <span className=\"text-sm font-medium text-green-600\">\n                        {course.price.toLocaleString()} تومان\n                      </span>\n                    )}\n                  </div>\n                  \n                  <button \n                    className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                      course.isLocked \n                        ? 'bg-gray-100 text-gray-500 cursor-not-allowed'\n                        : 'bg-blue-600 hover:bg-blue-700 text-white'\n                    }`}\n                    disabled={course.isLocked || false}\n                  >\n                    {course.isLocked ? 'محدود شده' : 'مشاهده دوره'}\n                  </button>\n                </div>\n                \n                {/* Progress Bar */}\n                {course.progress !== null && course.progress > 0 && (\n                  <div className=\"mt-3\">\n                    <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\n                      <span>پیشرفت</span>\n                      <span>{course.progress}%</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${course.progress}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"col-span-full text-center py-12\">\n            <div className=\"text-gray-500 mb-4\">\n              <svg className=\"mx-auto h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ دوره‌ای یافت نشد</h3>\n            <p className=\"text-gray-600\">معیارهای جستجو را تغییر دهید یا دوباره تلاش کنید.</p>\n          </div>\n        )}\n      </div>\n      </div>\n    </AuthGuard>\n  );\n}","size_bytes":9961},"client/src/pages/courses.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { type Course } from \"@shared/schema\";\nimport CourseCard from \"@/components/course/CourseCard\";\n// Removed all shadcn UI imports to fix React runtime error\n\nexport default function Courses() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n  \n  const { data: courses = [], isLoading } = useQuery<Course[]>({ \n    queryKey: ['/api/courses'] \n  });\n  \n  // Filter courses based on search term and category\n  const filteredCourses = courses.filter(course => {\n    const matchesSearch = course.title.toLowerCase().includes(searchTerm.toLowerCase()) || \n                        course.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = selectedCategory === \"all\" || course.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n  \n  // Extract unique categories from courses\n  const categories = [...new Set(courses.map(course => course.category).filter(Boolean))];\n  \n  return (\n    <div id=\"course-library\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold text-neutral-500 mb-2\">کتابخانه کارگاه‌های آموزشی</h2>\n        <p className=\"text-neutral-300\">مشاهده تمام کارگاه‌های آموزشی و محتوای موجود</p>\n      </div>\n      \n      <div className=\"mb-6\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-4\">\n          <div className=\"relative flex-grow\">\n            <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none text-neutral-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </div>\n            <Input\n              type=\"text\"\n              placeholder=\"جستجوی کارگاه‌ها، اسناد یا موضوعات...\"\n              className=\"pl-10 pr-4 py-2\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"All Categories\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Categories</SelectItem>\n                {categories.map(category => (\n                  <SelectItem key={category} value={category || ''}>{category}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <Button variant=\"outline\" className=\"flex items-center\">\n              <span className=\"material-icons mr-1 text-sm\">filter_list</span>\n              <span>Filter</span>\n            </Button>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8\">\n        {isLoading ? (\n          Array(6).fill(0).map((_, i) => (\n            <div key={i} className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\n              <Skeleton className=\"w-full h-36\" />\n              <div className=\"p-4\">\n                <Skeleton className=\"w-3/4 h-6 mb-2\" />\n                <Skeleton className=\"w-full h-4 mb-3\" />\n                <div className=\"flex justify-between items-center\">\n                  <Skeleton className=\"w-1/3 h-4\" />\n                  <Skeleton className=\"w-20 h-8 rounded\" />\n                </div>\n              </div>\n            </div>\n          ))\n        ) : filteredCourses.length > 0 ? (\n          filteredCourses.map(course => (\n            <CourseCard \n              key={course.id}\n              id={course.id}\n              title={course.title}\n              description={course.description}\n              thumbnailUrl={course.thumbnailUrl || ''}\n              progress={course.progress}\n              totalModules={course.totalModules}\n              completedModules={course.completedModules}\n              category={course.category}\n              level={course.level}\n              isNew={course.isNew}\n              isPopular={course.isPopular}\n            />\n          ))\n        ) : (\n          <div className=\"col-span-full text-center py-8\">\n            <p className=\"text-neutral-400\">هیچ کارگاهی با معیارهای شما یافت نشد.</p>\n            <Button \n              variant=\"link\" \n              className=\"text-primary mt-2\"\n              onClick={() => {\n                setSearchTerm(\"\");\n                setSelectedCategory(\"all\");\n              }}\n            >\n              Reset filters\n            </Button>\n          </div>\n        )}\n      </div>\n      \n      {filteredCourses.length > 0 && (\n        <div className=\"flex justify-center\">\n          <nav className=\"flex items-center\">\n            <Button variant=\"outline\" className=\"w-10 h-10 p-0 mr-2\" disabled>\n              <span className=\"material-icons\">chevron_left</span>\n            </Button>\n            <Button className=\"w-10 h-10 p-0 bg-primary hover:bg-primary/90\">1</Button>\n            <Button variant=\"ghost\" className=\"w-10 h-10 p-0 text-neutral-400 hover:bg-neutral-100\">2</Button>\n            <Button variant=\"ghost\" className=\"w-10 h-10 p-0 text-neutral-400 hover:bg-neutral-100\">3</Button>\n            <Button variant=\"ghost\" className=\"w-10 h-10 p-0 text-neutral-400 hover:bg-neutral-100\">4</Button>\n            <Button variant=\"ghost\" className=\"w-10 h-10 p-0 text-neutral-400 hover:bg-neutral-100\">5</Button>\n            <Button variant=\"outline\" className=\"w-10 h-10 p-0 ml-2\">\n              <span className=\"material-icons\">chevron_right</span>\n            </Button>\n          </nav>\n        </div>\n      )}\n    </div>\n  );\n}\n","size_bytes":6086},"client/src/pages/document-viewer.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useParams } from \"wouter\";\nimport PDFViewer from \"@/components/document/PDFViewer\";\nimport { type Document } from \"@shared/schema\";\n\n\nexport default function DocumentViewerPage() {\n  const { id } = useParams<{ id: string }>();\n  const documentId = parseInt(id);\n  \n  const { data: document, isLoading, error } = useQuery<Document>({ \n    queryKey: ['/api/documents', documentId],\n    enabled: !isNaN(documentId)\n  });\n  \n  if (isNaN(documentId)) {\n    return (\n      <div className=\"text-center py-10\">\n        <p className=\"text-status-error font-medium\">Invalid document ID</p>\n      </div>\n    );\n  }\n  \n  if (isLoading) {\n    return (\n      <div className=\"mb-10\">\n        <div className=\"mb-4\">\n          <Skeleton className=\"w-1/3 h-8 mb-2\" />\n          <Skeleton className=\"w-1/2 h-4\" />\n        </div>\n        \n        <div className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\n          <div className=\"border-b border-neutral-200 p-4 flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <Skeleton className=\"w-8 h-8 mr-2 rounded\" />\n              <div>\n                <Skeleton className=\"w-40 h-6 mb-1\" />\n                <Skeleton className=\"w-24 h-3\" />\n              </div>\n            </div>\n            <div className=\"flex items-center\">\n              <Skeleton className=\"w-8 h-8 rounded mx-1\" />\n              <Skeleton className=\"w-8 h-8 rounded mx-1\" />\n              <Skeleton className=\"w-8 h-8 rounded mx-1\" />\n            </div>\n          </div>\n          \n          <div className=\"pdf-viewer p-4 flex flex-col items-center justify-center border-b border-neutral-200 min-h-[400px] bg-neutral-50\">\n            <Skeleton className=\"w-full max-w-2xl h-[600px] mx-auto\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error || !document) {\n    return (\n      <div className=\"text-center py-10\">\n        <p className=\"text-status-error font-medium\">Error loading document</p>\n        <p className=\"text-neutral-400 mt-2\">Please try again later</p>\n      </div>\n    );\n  }\n  \n  return (\n    <PDFViewer document={document} />\n  );\n}\n","size_bytes":2182},"client/src/pages/favorites.tsx":{"content":"import { useState } from \"react\";\nimport { \n  Heart, \n  BookOpen, \n  Users, \n  FileText,\n  Video,\n  ShoppingCart,\n  Eye,\n  Download,\n  Calendar,\n  Trash2,\n  ArrowRight\n} from \"lucide-react\";\n\nexport default function Favorites() {\n  const [activeTab, setActiveTab] = useState(\"courses\");\n\n  const favoriteItems = {\n    courses: [\n      {\n        id: 1,\n        title: \"دوره کامل React و TypeScript\",\n        description: \"یادگیری مدرن React با TypeScript\",\n        instructor: \"محمد احمدی\",\n        duration: \"۱۲ ساعت\",\n        price: \"۲۹۹,۰۰۰ تومان\",\n        image: \"/api/placeholder/300/200\"\n      }\n    ],\n    projects: [\n      {\n        id: 1,\n        title: \"پروژه سایت فروشگاهی\",\n        description: \"ساخت فروشگاه آنلاین با React\",\n        difficulty: \"پیشرفته\",\n        duration: \"۸ ساعت\",\n        price: \"۱۹۹,۰۰۰ تومان\"\n      }\n    ],\n    documents: [\n      {\n        id: 1,\n        title: \"راهنمای کامل JavaScript\",\n        description: \"مرجع جامع زبان جاوااسکریپت\",\n        author: \"علی رضایی\",\n        pages: \"۲۵۰ صفحه\",\n        format: \"PDF\"\n      }\n    ],\n    media: [\n      {\n        id: 1,\n        title: \"ویدیو آموزش Node.js\",\n        description: \"آموزش کامل Node.js از مبتدی تا پیشرفته\",\n        duration: \"۳ ساعت\",\n        quality: \"۱۰۸۰p\",\n        size: \"۲.۵ گیگابایت\"\n      }\n    ]\n  };\n\n  const tabs = [\n    { id: \"courses\", label: \"دوره‌ها\", icon: BookOpen },\n    { id: \"projects\", label: \"پروژه‌ها\", icon: Users },\n    { id: \"documents\", label: \"کتابخانه\", icon: FileText },\n    { id: \"media\", label: \"رسانه\", icon: Video }\n  ];\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 pb-20\" dir=\"rtl\">\n      <button \n        onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\n      >\n        <ArrowRight className=\"h-5 w-5\" />\n        بازگشت\n      </button>\n      \n      {/* Header */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">علاقه‌مندی‌ها</h1>\n        <p className=\"text-gray-600\">محتواهای مورد علاقه شما</p>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex gap-2 mb-6 border-b\">\n        {tabs.map(tab => {\n          const IconComponent = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex items-center gap-2 px-4 py-2 border-b-2 transition-colors ${\n                activeTab === tab.id \n                  ? 'border-blue-500 text-blue-600 font-medium' \n                  : 'border-transparent text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <IconComponent className=\"h-4 w-4\" />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Content */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {favoriteItems[activeTab as keyof typeof favoriteItems].map((item: any) => (\n          <div key={item.id} className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow p-6\">\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex-1\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  {item.title}\n                </h3>\n                <p className=\"text-gray-600 text-sm mb-3\">\n                  {item.description}\n                </p>\n              </div>\n              <button className=\"text-red-500 hover:text-red-700 p-1\">\n                <Heart className=\"h-5 w-5 fill-current\" />\n              </button>\n            </div>\n\n            {/* Item specific info */}\n            <div className=\"space-y-2 mb-4\">\n              {activeTab === \"courses\" && (\n                <>\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <Users className=\"h-4 w-4 ml-1\" />\n                    <span>{item.instructor}</span>\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <Calendar className=\"h-4 w-4 ml-1\" />\n                    <span>{item.duration}</span>\n                  </div>\n                </>\n              )}\n              \n              {activeTab === \"projects\" && (\n                <div className=\"flex items-center text-sm text-gray-600\">\n                  <span className=\"px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs\">\n                    {item.difficulty}\n                  </span>\n                  <span className=\"mr-2\">{item.duration}</span>\n                </div>\n              )}\n              \n              {activeTab === \"documents\" && (\n                <>\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <Users className=\"h-4 w-4 ml-1\" />\n                    <span>{item.author}</span>\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <FileText className=\"h-4 w-4 ml-1\" />\n                    <span>{item.pages} • {item.format}</span>\n                  </div>\n                </>\n              )}\n              \n              {activeTab === \"media\" && (\n                <div className=\"flex items-center text-sm text-gray-600\">\n                  <Video className=\"h-4 w-4 ml-1\" />\n                  <span>{item.duration} • {item.quality} • {item.size}</span>\n                </div>\n              )}\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex gap-2\">\n              <button className=\"flex-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center justify-center gap-1\">\n                <Eye className=\"h-4 w-4\" />\n                مشاهده\n              </button>\n              {(activeTab === \"courses\" || activeTab === \"projects\") && (\n                <button className=\"flex-1 px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors flex items-center justify-center gap-1\">\n                  <ShoppingCart className=\"h-4 w-4\" />\n                  خرید\n                </button>\n              )}\n              {(activeTab === \"documents\" || activeTab === \"media\") && (\n                <button className=\"flex-1 px-3 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors flex items-center justify-center gap-1\">\n                  <Download className=\"h-4 w-4\" />\n                  دانلود\n                </button>\n              )}\n              <button className=\"px-3 py-2 bg-red-50 text-red-600 rounded-md hover:bg-red-100 transition-colors\">\n                <Trash2 className=\"h-4 w-4\" />\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Empty State */}\n      {favoriteItems[activeTab as keyof typeof favoriteItems].length === 0 && (\n        <div className=\"text-center py-12\">\n          <Heart className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ موردی یافت نشد</h3>\n          <p className=\"text-gray-600\">شما هنوز هیچ {tabs.find(t => t.id === activeTab)?.label} را به علاقه‌مندی‌ها اضافه نکرده‌اید</p>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":7635},"client/src/pages/home-simple-backup.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type Slide } from \"@shared/schema\";\n\nexport default function HomePage() {\n  const { data: slides, isLoading } = useQuery<Slide[]>({\n    queryKey: ['/api/slides'],\n  });\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  \n  // Filter active slides and sort by order\n  const activeSlides = slides?.filter(slide => slide.isActive)?.sort((a, b) => (a.order || 0) - (b.order || 0)) || [];\n  const currentSlideData = activeSlides[currentSlide];\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % activeSlides.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + activeSlides.length) % activeSlides.length);\n  };\n\n  return (\n    <div className=\"space-y-6 rtl\">\n      {/* Hero Slider */}\n      <div className=\"rounded-2xl text-center relative overflow-hidden\" style={{backgroundColor: 'hsl(118, 45%, 90%)'}}>\n        {/* Background Image */}\n        {activeSlides.length > 0 && currentSlideData?.imageUrl && (\n          <div \n            className=\"absolute inset-0 bg-cover bg-center opacity-30\"\n            style={{backgroundImage: `url(${currentSlideData.imageUrl})`}}\n          />\n        )}\n        \n        <div className=\"relative z-10 p-8\">\n          {isLoading ? (\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded mb-4 mx-auto w-3/4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded mb-6 mx-auto w-1/2\"></div>\n            </div>\n          ) : activeSlides.length > 0 && currentSlideData ? (\n            <>\n              <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">\n                {currentSlideData.title}\n              </h1>\n              <p className=\"text-gray-600 mb-6\">\n                {currentSlideData.description}\n              </p>\n            </>\n          ) : (\n            <>\n              <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">\n                به مرکز پیستاط خوش آمدید\n              </h1>\n              <p className=\"text-gray-600 mb-6\">\n                بهترین دوره‌های آموزشی در حوزه کشاورزی\n              </p>\n            </>\n          )}\n          \n          <div className=\"flex gap-4 justify-center mb-6\">\n            <button className=\"bg-white text-gray-700 px-4 py-2 rounded-lg border hover:bg-gray-50\">\n              درباره ما\n            </button>\n            <button className=\"text-white px-4 py-2 rounded-lg hover:opacity-90 flex items-center gap-2\" style={{backgroundColor: 'hsl(118, 54%, 40%)'}}>\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n              </svg>\n              مشاهده دوره‌ها\n            </button>\n          </div>\n\n          <div className=\"w-24 h-24 mx-auto bg-white rounded-full flex items-center justify-center shadow-lg\">\n            <div className=\"w-16 h-16 rounded-full flex items-center justify-center\" style={{backgroundColor: 'hsl(118, 54%, 40%)'}}>\n              <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        {/* Slide Navigation */}\n        {activeSlides.length > 1 && (\n          <>\n            <div className=\"absolute top-1/2 transform -translate-y-1/2 left-4\">\n              <button \n                onClick={prevSlide}\n                className=\"bg-white bg-opacity-70 hover:bg-opacity-100 rounded-full p-2 transition-all z-20\"\n              >\n                <svg className=\"w-5 h-5 text-gray-700\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n              </button>\n            </div>\n            \n            <div className=\"absolute top-1/2 transform -translate-y-1/2 right-4\">\n              <button \n                onClick={nextSlide}\n                className=\"bg-white bg-opacity-70 hover:bg-opacity-100 rounded-full p-2 transition-all z-20\"\n              >\n                <svg className=\"w-5 h-5 text-gray-700\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </button>\n            </div>\n            \n            {/* Slide Indicators */}\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-20\">\n              {activeSlides.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentSlide(index)}\n                  className={`w-2 h-2 rounded-full transition-all ${\n                    index === currentSlide ? 'bg-gray-700' : 'bg-gray-400'\n                  }`}\n                />\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Quick Access Section - Circular Icons */}\n      <div className=\"grid grid-cols-4 gap-4 px-4\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-2 rounded-full flex items-center justify-center shadow-lg\" style={{backgroundColor: 'hsl(270, 60%, 95%)'}}>\n            <svg className=\"w-8 h-8\" style={{color: 'hsl(270, 70%, 60%)'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n            </svg>\n          </div>\n          <p className=\"text-xs text-gray-700 font-medium\">کتابخانه</p>\n        </div>\n\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-2 rounded-full flex items-center justify-center shadow-lg\" style={{backgroundColor: 'hsl(25, 100%, 92%)'}}>\n            <svg className=\"w-8 h-8\" style={{color: 'hsl(25, 85%, 65%)'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n            </svg>\n          </div>\n          <p className=\"text-xs text-gray-700 font-medium\">ویدیوهای آموزشی</p>\n        </div>\n\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-2 rounded-full flex items-center justify-center shadow-lg\" style={{backgroundColor: 'hsl(140, 50%, 92%)'}}>\n            <svg className=\"w-8 h-8\" style={{color: 'hsl(140, 60%, 50%)'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n          </div>\n          <p className=\"text-xs text-gray-700 font-medium\">فصلنامه رویش سبز</p>\n        </div>\n\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-2 bg-gray-100 rounded-full flex items-center justify-center shadow-lg border\">\n            <svg className=\"w-8 h-8 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n            </svg>\n          </div>\n          <p className=\"text-xs text-gray-700 font-medium\">تماس با ما</p>\n        </div>\n      </div>\n\n      {/* Workshops Section */}\n      <div>\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\n            <span className=\"ml-2\" style={{color: 'hsl(118, 54%, 40%)'}}>🎓</span>\n            کارگاه‌های آموزشی\n          </h2>\n        </div>\n        \n        <div className=\"grid grid-cols-3 gap-4 mb-4\">\n          <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n            <div className=\"w-full h-24 bg-gray-100 rounded-lg mb-3 flex items-center justify-center\">\n              <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n              </svg>\n            </div>\n            <h3 className=\"font-medium text-gray-800 text-sm mb-1\">کشاورزی هوشمند</h3>\n            <p className=\"text-xs text-gray-500\">یادگیری تکنیک‌های نوین</p>\n          </div>\n          \n          <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n            <div className=\"w-full h-24 bg-gray-100 rounded-lg mb-3 flex items-center justify-center\">\n              <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n              </svg>\n            </div>\n            <h3 className=\"font-medium text-gray-800 text-sm mb-1\">مدیریت مزرعه</h3>\n            <p className=\"text-xs text-gray-500\">برنامه‌ریزی و نظارت</p>\n          </div>\n          \n          <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n            <div className=\"w-full h-24 bg-gray-100 rounded-lg mb-3 flex items-center justify-center\">\n              <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z\" />\n              </svg>\n            </div>\n            <h3 className=\"font-medium text-gray-800 text-sm mb-1\">کنترل آفات</h3>\n            <p className=\"text-xs text-gray-500\">روش‌های طبیعی</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":11404},"client/src/pages/home-simple.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type Slide } from \"@shared/schema\";\nimport { useAuth } from \"@/hooks/useAuth\";\n\nexport default function HomePage() {\n  const { isAuthenticated } = useAuth();\n  \n  const { data: slides } = useQuery<Slide[]>({\n    queryKey: ['/api/slides'],\n  });\n\n  const { data: quickAccessItems } = useQuery<any[]>({\n    queryKey: ['/api/quick-access'],\n  });\n\n  const { data: workshops } = useQuery<any[]>({\n    queryKey: ['/api/workshops'],\n  });\n\n  const { data: webinars } = useQuery<any[]>({\n    queryKey: ['/api/webinars'],\n  });\n\n  const { data: educationalVideos } = useQuery<any[]>({\n    queryKey: ['/api/educational-videos/active'],\n  });\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  \n  const activeSlides = slides?.filter(slide => slide.isActive) || [];\n  const currentSlideData = activeSlides[currentSlide];\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % activeSlides.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + activeSlides.length) % activeSlides.length);\n  };\n\n  const homeContent = (\n    <div className=\"space-y-6 rtl\">\n      <div className=\"rounded-2xl text-center relative overflow-hidden min-h-[400px] flex items-center\" style={{backgroundColor: currentSlideData?.imageUrl ? 'transparent' : 'hsl(118, 45%, 90%)'}}>\n        {currentSlideData?.imageUrl && (\n          <>\n            <div \n              className=\"absolute inset-0 bg-cover bg-center\"\n              style={{backgroundImage: `url(${currentSlideData.imageUrl})`}}\n            />\n            <div className=\"absolute inset-0 bg-black bg-opacity-40\"></div>\n          </>\n        )}\n        \n        <div className=\"relative z-10 p-8 w-full\">\n          <h1 className={`text-2xl font-bold mb-2 ${currentSlideData?.imageUrl ? 'text-white' : 'text-gray-800'}`}>\n            {currentSlideData?.title || \"به مرکز پیستاط خوش آمدید\"}\n          </h1>\n          <p className={`mb-6 ${currentSlideData?.imageUrl ? 'text-gray-100' : 'text-gray-600'}`}>\n            {currentSlideData?.description || \"بهترین دوره‌های آموزشی در حوزه کشاورزی\"}\n          </p>\n          \n          {/* Buttons - conditional rendering */}\n          {(currentSlideData ? (currentSlideData as any).showButtons !== false : true) && (\n            <div className=\"flex gap-4 justify-center mb-6\">\n              {currentSlideData?.buttonText && currentSlideData?.buttonUrl ? (\n                <button className=\"text-white px-4 py-2 rounded-lg hover:opacity-90 flex items-center gap-2\" style={{backgroundColor: 'hsl(118, 54%, 40%)'}}>\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                  </svg>\n                  {currentSlideData.buttonText}\n                </button>\n              ) : (\n                <button className=\"text-white px-4 py-2 rounded-lg hover:opacity-90 flex items-center gap-2\" style={{backgroundColor: 'hsl(118, 54%, 40%)'}}>\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                  </svg>\n                  مشاهده دوره‌ها\n                </button>\n              )}\n              \n              {(currentSlideData as any)?.secondButtonText && (currentSlideData as any)?.secondButtonUrl ? (\n                <button className=\"bg-white text-gray-700 px-4 py-2 rounded-lg border hover:bg-gray-50\">\n                  {(currentSlideData as any).secondButtonText}\n                </button>\n              ) : !currentSlideData ? (\n                <button className=\"bg-white text-gray-700 px-4 py-2 rounded-lg border hover:bg-gray-50\">\n                  درباره ما\n                </button>\n              ) : null}\n            </div>\n          )}\n\n          {/* Icon - conditional rendering */}\n          {currentSlideData && (currentSlideData as any).showIcon !== false && (\n            <div className=\"w-24 h-24 mx-auto bg-white rounded-full flex items-center justify-center shadow-lg\">\n              <div className=\"w-16 h-16 rounded-full flex items-center justify-center\" style={{backgroundColor: 'hsl(118, 54%, 40%)'}}>\n                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                </svg>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {activeSlides.length > 1 && (\n          <>\n            <button \n              onClick={prevSlide}\n              className=\"absolute top-1/2 left-4 transform -translate-y-1/2 bg-white bg-opacity-70 hover:bg-opacity-100 rounded-full p-2 transition-all z-20\"\n            >\n              <svg className=\"w-5 h-5 text-gray-700\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n            </button>\n            \n            <button \n              onClick={nextSlide}\n              className=\"absolute top-1/2 right-4 transform -translate-y-1/2 bg-white bg-opacity-70 hover:bg-opacity-100 rounded-full p-2 transition-all z-20\"\n            >\n              <svg className=\"w-5 h-5 text-gray-700\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </button>\n            \n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-20\">\n              {activeSlides.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentSlide(index)}\n                  className={`w-2 h-2 rounded-full transition-all ${\n                    index === currentSlide ? 'bg-gray-700' : 'bg-gray-400'\n                  }`}\n                />\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-4 gap-4 px-4\">\n        {quickAccessItems?.filter((item: any) => item.isActive).slice(0, 4).map((item: any) => (\n          <div key={item.id} className=\"text-center\">\n            <button \n              onClick={() => {\n                // Navigate based on exact item title matching section titles\n                if (item.title === 'فصلنامه رویش سبز' || item.title.includes('فصلنامه') || item.title.includes('مجله')) {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'magazines' }, '*');\n                } else if (item.title === 'ویدیو آموزشی' || item.title === 'ویدیوهای آموزشی' || item.title === 'آموزشی' || item.title.includes('ویدیو') || item.title.includes('آموزشی')) {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'videos' }, '*');\n                } else if (item.title === 'آرشیو پیستاط' || item.title === 'کتابخانه' || item.title.includes('آرشیف') || item.title.includes('کتابخانه')) {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'library' }, '*');\n                } else if (item.title === 'کارگاه‌های آموزشی' || item.title.includes('کارگاه')) {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'workshops' }, '*');\n                } else if (item.title === 'وبینارهای آموزشی' || item.title.includes('وبینار')) {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'webinars' }, '*');\n                } else if (item.title === 'درباره ما' || item.title.includes('درباره')) {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'about-us' }, '*');\n                } else if (item.title === 'تماس با ما' || item.title.includes('تماس')) {\n                  window.postMessage({ type: 'SWITCH_TAB', tab: 'contact-us' }, '*');\n                } else if (item.linkUrl) {\n                  window.open(item.linkUrl, '_blank');\n                }\n              }}\n              className=\"block guest-allowed\"\n            >\n              <div className=\"w-16 h-16 mx-auto mb-2 rounded-full flex items-center justify-center shadow-lg bg-gray-100 border overflow-hidden\">\n                {item.iconUrl ? (\n                  <img \n                    src={item.iconUrl} \n                    alt={item.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <svg className=\"w-8 h-8 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-700 font-medium\">{item.title}</p>\n            </button>\n          </div>\n        ))}\n        \n        {/* Fallback items if no quick access items exist */}\n        {(!quickAccessItems || quickAccessItems?.filter((item: any) => item.isActive).length === 0) && (\n          <>\n            <div className=\"text-center\">\n              <button onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'library' }, '*')} className=\"block\">\n                <div className=\"w-16 h-16 mx-auto mb-2 rounded-full flex items-center justify-center shadow-lg\" style={{backgroundColor: 'hsl(270, 60%, 95%)'}}>\n                  <svg className=\"w-8 h-8\" style={{color: 'hsl(270, 70%, 60%)'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                  </svg>\n                </div>\n                <p className=\"text-xs text-gray-700 font-medium\">کتابخانه</p>\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <button onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'videos' }, '*')} className=\"block\">\n                <div className=\"w-16 h-16 mx-auto mb-2 rounded-full flex items-center justify-center shadow-lg\" style={{backgroundColor: 'hsl(25, 100%, 92%)'}}>\n                  <svg className=\"w-8 h-8\" style={{color: 'hsl(25, 85%, 65%)'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                  </svg>\n                </div>\n                <p className=\"text-xs text-gray-700 font-medium\">ویدیوهای آموزشی</p>\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <button onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'magazines' }, '*')} className=\"block\">\n                <div className=\"w-16 h-16 mx-auto mb-2 rounded-full flex items-center justify-center shadow-lg\" style={{backgroundColor: 'hsl(140, 50%, 92%)'}}>\n                  <svg className=\"w-8 h-8\" style={{color: 'hsl(140, 60%, 50%)'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                </div>\n                <p className=\"text-xs text-gray-700 font-medium\">فصلنامه رویش سبز</p>\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 mx-auto mb-2 bg-gray-100 rounded-full flex items-center justify-center shadow-lg border\">\n                <svg className=\"w-8 h-8 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                </svg>\n              </div>\n              <p className=\"text-xs text-gray-700 font-medium\">تماس با ما</p>\n            </div>\n          </>\n        )}\n      </div>\n\n      <div>\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\n            <svg className=\"ml-2 h-6 w-6\" fill=\"none\" stroke=\"hsl(118, 54%, 40%)\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n            </svg>\n            کارگاه‌های آموزشی\n          </h2>\n          <button \n            onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'workshops' }, '*')}\n            className=\"text-sm font-medium text-green-600 hover:text-green-700 transition-colors\"\n          >\n            مشاهده بیشتر\n          </button>\n        </div>\n        \n        <div className=\"grid grid-cols-4 gap-4 mb-4\">\n          {workshops && workshops\n            .filter((workshop: any) => workshop.isActive)\n            .slice(0, 4)\n            .map((workshop: any) => (\n            <div \n              key={workshop.id} \n              className=\"bg-white rounded-xl p-4 shadow-sm border cursor-pointer hover:shadow-lg transition-shadow card-interactive\"\n              onClick={() => {\n                // Switch to workshops tab to show workshop details\n                window.parent.postMessage({ type: 'SWITCH_TAB', tab: 'workshops' }, '*');\n              }}\n            >\n              <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center overflow-hidden\">\n                {workshop.posterUrl ? (\n                  <img \n                    src={workshop.posterUrl} \n                    alt={workshop.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\" />\n                  </svg>\n                )}\n              </div>\n              <h3 className=\"font-medium text-gray-800 text-sm mb-1\" title={workshop.title}>\n                {workshop.title.length > 25 ? `${workshop.title.substring(0, 25)}...` : workshop.title}\n              </h3>\n              <p className=\"text-xs text-gray-500\" title={workshop.description}>\n                {workshop.description ? \n                  (workshop.description.length > 30 ? `${workshop.description.substring(0, 30)}...` : workshop.description) \n                  : 'کارگاه آموزشی'}\n              </p>\n              <div className=\"flex items-center justify-between mt-2\">\n                {workshop.eventDate && (\n                  <p className=\"text-xs text-blue-600\">📅 {workshop.eventDate}</p>\n                )}\n                {workshop.registrationOpen && (\n                  <div className=\"text-xs text-green-600 bg-green-50 px-2 py-1 rounded-full flex items-center\">\n                    <svg className=\"w-3 h-3 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                    </svg>\n                    ثبت‌نام\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n          \n          {/* Fallback when no workshops exist */}\n          {(!workshops || workshops.filter((w: any) => w.isActive).length === 0) && (\n            <>\n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">کشاورزی هوشمند</h3>\n                <p className=\"text-xs text-gray-500\">یادگیری تکنیک‌های نوین</p>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">مدیریت مزرعه</h3>\n                <p className=\"text-xs text-gray-500\">برنامه‌ریزی و نظارت</p>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">کنترل آفات</h3>\n                <p className=\"text-xs text-gray-500\">روش‌های طبیعی</p>\n              </div>\n              \n\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* بخش وبینارهای آموزشی */}\n      <div>\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\n            <svg className=\"ml-2 h-6 w-6\" fill=\"none\" stroke=\"hsl(118, 54%, 40%)\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n            </svg>\n            وبینارهای آموزشی\n          </h2>\n          <button \n            onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'webinars' }, '*')}\n            className=\"text-sm font-medium text-green-600 hover:text-green-700 transition-colors\"\n          >\n            مشاهده بیشتر\n          </button>\n        </div>\n        \n        <div className=\"grid grid-cols-4 gap-4 mb-4\">\n          {webinars && webinars\n            .filter((webinar: any) => webinar.isActive)\n            .slice(0, 4)\n            .map((webinar: any) => (\n            <div \n              key={webinar.id} \n              className=\"bg-white rounded-xl p-4 shadow-sm border cursor-pointer hover:shadow-lg transition-shadow card-interactive\"\n              onClick={() => {\n                // Switch to a dedicated webinar view\n                window.parent.postMessage({ \n                  type: 'OPEN_WEBINAR', \n                  webinarId: webinar.id \n                }, '*');\n              }}\n            >\n              <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center overflow-hidden bg-gray-100\">\n                {webinar.posterUrl ? (\n                  <img \n                    src={webinar.posterUrl} \n                    alt={webinar.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                  </svg>\n                )}\n              </div>\n              <h3 className=\"font-medium text-gray-800 text-sm mb-1\" title={webinar.title}>\n                {webinar.title.length > 25 ? `${webinar.title.substring(0, 25)}...` : webinar.title}\n              </h3>\n              <p className=\"text-xs text-gray-500\" title={webinar.description}>\n                {webinar.description ? \n                  (webinar.description.length > 30 ? `${webinar.description.substring(0, 30)}...` : webinar.description) \n                  : 'وبینار آموزشی'}\n              </p>\n              <div className=\"flex items-center justify-between mt-2\">\n                {webinar.instructor && (\n                  <p className=\"text-xs text-purple-600\">👨‍🏫 {webinar.instructor}</p>\n                )}\n                {webinar.duration && (\n                  <p className=\"text-xs text-orange-600\">⏱️ {webinar.duration}</p>\n                )}\n              </div>\n              {webinar.eventDate && (\n                <p className=\"text-xs text-blue-600 mt-1\">📅 {webinar.eventDate}</p>\n              )}\n            </div>\n          ))}\n          \n          {/* Fallback when no webinars exist */}\n          {(!webinars || webinars.filter((w: any) => w.isActive).length === 0) && (\n            <>\n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">وبینار کشاورزی هوشمند</h3>\n                <p className=\"text-xs text-gray-500\">آخرین تکنولوژی‌های کشاورزی</p>\n                <p className=\"text-xs text-purple-600 mt-1\">👨‍🏫 محمد رضایی</p>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">وبینار مدیریت مزرعه</h3>\n                <p className=\"text-xs text-gray-500\">تکنیک‌های مدیریت مزرعه</p>\n                <p className=\"text-xs text-purple-600 mt-1\">👩‍🏫 فاطمه احمدی</p>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">وبینار کنترل آفات</h3>\n                <p className=\"text-xs text-gray-500\">روش‌های طبیعی کنترل آفات</p>\n                <p className=\"text-xs text-purple-600 mt-1\">👨‍🏫 احمد کریمی</p>\n              </div>\n              \n\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* بخش ویدیوهای آموزشی */}\n      <div>\n        {/* Green container box with side-by-side layout */}\n        <div className=\"relative rounded-2xl overflow-hidden p-4 flex gap-4\" style={{backgroundColor: 'hsl(140, 60%, 35%)'}}>\n          {/* Right side - Title, Logo, and \"View More\" in vertical column */}\n          <div className=\"flex flex-col items-center justify-center text-center text-white min-w-[120px] space-y-4\">\n            {/* Title */}\n            <div>\n              <h2 className=\"text-2xl font-bold mb-1\">ویدیو</h2>\n              <h3 className=\"text-xl\">آموزشی</h3>\n            </div>\n            \n            {/* Logo */}\n            <div className=\"w-24 h-24 flex items-center justify-center\">\n              <img \n                src=\"/uploads/logo-white.png\" \n                alt=\"Pistat Logo\" \n                className=\"w-20 h-20\"\n              />\n            </div>\n            \n            {/* View More */}\n            <button \n              onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'videos' }, '*')}\n              className=\"text-xs font-bold cursor-pointer hover:opacity-80 transition-opacity\"\n            >\n              مشاهده بیشتر &gt;\n            </button>\n          </div>\n          \n          {/* Left side - Videos */}\n          <div className=\"flex-1\">\n            <div className=\"flex gap-3 overflow-x-auto pb-2\">\n            {educationalVideos && educationalVideos\n              .slice(0, 4)\n              .map((video: any) => (\n              <div \n                key={video.id} \n                className=\"flex-shrink-0 w-48 bg-white rounded-xl shadow-sm border cursor-pointer hover:shadow-lg transition-shadow overflow-hidden\"\n                onClick={() => {\n                  // Switch to video view\n                  window.parent.postMessage({ \n                    type: 'OPEN_VIDEO', \n                    videoId: video.id \n                  }, '*');\n                }}\n              >\n                <div className=\"w-full h-32 bg-gray-100 flex items-center justify-center overflow-hidden\">\n                  {video.thumbnailUrl ? (\n                    <img \n                      src={video.thumbnailUrl} \n                      alt={video.title}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  ) : (\n                    <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  )}\n                </div>\n                <div className=\"p-3\">\n                  <h3 className=\"font-semibold text-gray-800 text-sm mb-1\" title={video.title}>\n                    {video.title.length > 25 ? `${video.title.substring(0, 25)}...` : video.title}\n                  </h3>\n                  <p className=\"text-xs text-gray-500 mb-2\" title={video.description}>\n                    {video.description ? \n                      (video.description.length > 35 ? `${video.description.substring(0, 35)}...` : video.description) \n                      : 'ویدیو آموزشی'}\n                  </p>\n                  <div className=\"flex items-center justify-between text-xs\">\n                    {video.duration && (\n                      <span className=\"text-orange-600\">⏱️ {video.duration}</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n            \n            {/* Fallback when no educational videos exist */}\n            {(!educationalVideos || educationalVideos.length === 0) && (\n              <>\n                <div className=\"flex-shrink-0 w-48 bg-white rounded-xl shadow-sm border cursor-pointer hover:shadow-lg transition-shadow overflow-hidden\">\n                  <div className=\"w-full h-32 bg-gray-100 flex items-center justify-center\">\n                    <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div className=\"p-3\">\n                    <h3 className=\"font-semibold text-gray-800 text-sm mb-1\">آموزش کشت گلخانه‌ای</h3>\n                    <p className=\"text-xs text-gray-500 mb-2\">تکنیک‌های نوین کشت</p>\n                    <div className=\"flex items-center justify-between text-xs\">\n                      <span className=\"text-orange-600\">⏱️ ۱۵ دقیقه</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex-shrink-0 w-48 bg-white rounded-xl shadow-sm border cursor-pointer hover:shadow-lg transition-shadow overflow-hidden\">\n                  <div className=\"w-full h-32 bg-gray-100 flex items-center justify-center\">\n                    <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                    </svg>\n                  </div>\n                  <div className=\"p-3\">\n                    <h3 className=\"font-semibold text-gray-800 text-sm mb-1\">آموزش آبیاری قطره‌ای</h3>\n                    <p className=\"text-xs text-gray-500 mb-2\">صرفه‌جویی در مصرف آب</p>\n                    <div className=\"flex items-center justify-between text-xs\">\n                      <span className=\"text-orange-600\">⏱️ ۲۰ دقیقه</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex-shrink-0 w-48 bg-white rounded-xl shadow-sm border cursor-pointer hover:shadow-lg transition-shadow overflow-hidden\">\n                  <div className=\"w-full h-32 bg-gray-100 flex items-center justify-center\">\n                    <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\" />\n                    </svg>\n                  </div>\n                  <div className=\"p-3\">\n                    <h3 className=\"font-semibold text-gray-800 text-sm mb-1\">مدیریت خاک</h3>\n                    <p className=\"text-xs text-gray-500 mb-2\">تشخیص و درمان مشکلات خاک</p>\n                    <div className=\"flex items-center justify-between text-xs\">\n                      <span className=\"text-orange-600\">⏱️ ۳۰ دقیقه</span>\n                    </div>\n                  </div>\n                </div>\n                \n\n              </>\n            )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      {homeContent}\n      {/* Magazine Section */}\n      <div className=\"mt-8\">\n        <MagazineSection />\n      </div>\n      \n      {/* Archive Section */}\n      <div className=\"mt-8\">\n        <ArchiveSection />\n      </div>\n    </div>\n  );\n}\n\nfunction MagazineSection() {\n  const { data: magazines, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  const handleMagazineClick = (magazineId: number) => {\n    window.postMessage({ \n      type: 'OPEN_MAGAZINE', \n      magazineId: magazineId \n    }, '*');\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"py-8\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"flex items-center justify-center h-32\">\n            <div className=\"text-gray-500\">در حال بارگذاری...</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const activeMagazines = magazines?.filter(magazine => magazine.isActive) || [];\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\n          <svg className=\"ml-2 h-6 w-6\" fill=\"none\" stroke=\"hsl(118, 54%, 40%)\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n          </svg>\n          فصلنامه رویش سبز\n        </h2>\n        <button \n          onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'magazines' }, '*')}\n          className=\"text-sm font-medium text-green-600 hover:text-green-700 transition-colors\"\n        >\n          مشاهده بیشتر\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-4 gap-4 mb-4\">\n          {activeMagazines.slice(0, 4).map((magazine) => (\n            <div \n              key={magazine.id} \n              className=\"bg-white rounded-xl p-4 shadow-sm border cursor-pointer hover:shadow-lg transition-shadow card-interactive\"\n              onClick={() => handleMagazineClick(magazine.id)}\n            >\n              <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center overflow-hidden\">\n                {magazine.coverImageUrl ? (\n                  <img \n                    src={magazine.coverImageUrl} \n                    alt={magazine.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n                  </svg>\n                )}\n              </div>\n              <h3 className=\"font-medium text-gray-800 text-sm mb-1\" title={magazine.title}>\n                {magazine.title.length > 25 ? `${magazine.title.substring(0, 25)}...` : magazine.title}\n              </h3>\n              <p className=\"text-xs text-gray-500\" title={magazine.description}>\n                {magazine.description ? \n                  (magazine.description.length > 30 ? `${magazine.description.substring(0, 30)}...` : magazine.description) \n                  : 'توضیحات مجله'}\n              </p>\n              <div className=\"flex items-center justify-between mt-2\">\n                <span className=\"text-xs text-blue-600\">شماره {magazine.issueNumber}</span>\n                <span className=\"text-xs text-gray-500\">{new Date(magazine.publishDate).toLocaleDateString('fa-IR')}</span>\n              </div>\n            </div>\n          ))}\n          \n          {/* Fallback when no magazines exist */}\n          {(!magazines || magazines.length === 0) && (\n            <>\n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">مجله کشاورزی نوین</h3>\n                <p className=\"text-xs text-gray-500\">آخرین تکنیک‌های کشاورزی و باغبانی</p>\n                <div className=\"flex items-center justify-between mt-2\">\n                  <span className=\"text-xs text-blue-600\">شماره ۱۲</span>\n                  <span className=\"text-xs text-gray-500\">۱۴۰۳/۰۴/۲۰</span>\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">مجله تکنولوژی سبز</h3>\n                <p className=\"text-xs text-gray-500\">نوآوری‌های سبز در کشاورزی</p>\n                <div className=\"flex items-center justify-between mt-2\">\n                  <span className=\"text-xs text-blue-600\">شماره ۸</span>\n                  <span className=\"text-xs text-gray-500\">۱۴۰۳/۰۴/۱۵</span>\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">مجله مدیریت مزرعه</h3>\n                <p className=\"text-xs text-gray-500\">راهکارهای مدیریت مزرعه و تولید</p>\n                <div className=\"flex items-center justify-between mt-2\">\n                  <span className=\"text-xs text-blue-600\">شماره ۵</span>\n                  <span className=\"text-xs text-gray-500\">۱۴۰۳/۰۴/۱۰</span>\n                </div>\n              </div>\n              \n\n            </>\n          )}\n        </div>\n        \n\n    </div>\n  );\n}\n\nfunction ArchiveSection() {\n  const { data: documents, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/documents'],\n  });\n\n  const handleDocumentClick = (documentId: number) => {\n    window.postMessage({ \n      type: 'OPEN_DOCUMENT', \n      documentId: documentId \n    }, '*');\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"py-8\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"flex items-center justify-center h-32\">\n            <div className=\"text-gray-500\">در حال بارگذاری...</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const publishedDocuments = documents?.filter(doc => doc.status === 'published') || [];\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\n          <svg className=\"ml-2 h-6 w-6\" fill=\"none\" stroke=\"hsl(118, 54%, 40%)\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2v0a2 2 0 002-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z\" />\n          </svg>\n          آرشیو پیستاط\n        </h2>\n        <button \n          onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'library' }, '*')}\n          className=\"text-sm font-medium text-green-600 hover:text-green-700 transition-colors\"\n        >\n          مشاهده بیشتر\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-4 gap-4 mb-4\">\n          {publishedDocuments.slice(0, 4).map((document) => (\n            <div \n              key={document.id} \n              className=\"bg-white rounded-xl p-4 shadow-sm border cursor-pointer hover:shadow-lg transition-shadow card-interactive\"\n              onClick={() => handleDocumentClick(document.id)}\n            >\n              <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center overflow-hidden bg-gray-100\">\n                {document.featuredImage ? (\n                  <img \n                    src={document.featuredImage} \n                    alt={document.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2v0a2 2 0 002-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z\" />\n                  </svg>\n                )}\n              </div>\n              <h3 className=\"font-medium text-gray-800 text-sm mb-1\" title={document.title}>\n                {document.title.length > 25 ? `${document.title.substring(0, 25)}...` : document.title}\n              </h3>\n              <p className=\"text-xs text-gray-500\" title={document.excerpt}>\n                {document.excerpt ? \n                  (document.excerpt.length > 30 ? `${document.excerpt.substring(0, 30)}...` : document.excerpt) \n                  : 'خلاصه مقاله'}\n              </p>\n              <div className=\"flex items-center justify-between mt-2\">\n                <span className=\"text-xs text-blue-600\">{document.category}</span>\n                <span className=\"text-xs text-gray-500\">{new Date(document.publishDate).toLocaleDateString('fa-IR')}</span>\n              </div>\n            </div>\n          ))}\n          \n          {/* Fallback when no documents exist */}\n          {(!documents || documents.length === 0) && (\n            <>\n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2v0a2 2 0 002-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">کشاورزی ارگانیک</h3>\n                <p className=\"text-xs text-gray-500\">روش‌های کشاورزی ارگانیک و مزایای آن</p>\n                <div className=\"flex items-center justify-between mt-2\">\n                  <span className=\"text-xs text-blue-600\">کشاورزی</span>\n                  <span className=\"text-xs text-gray-500\">۱۴۰۳/۰۴/۲۰</span>\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2v0a2 2 0 002-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">مدیریت آب</h3>\n                <p className=\"text-xs text-gray-500\">تکنیک‌های نوین آبیاری و صرفه‌جویی</p>\n                <div className=\"flex items-center justify-between mt-2\">\n                  <span className=\"text-xs text-blue-600\">آبیاری</span>\n                  <span className=\"text-xs text-gray-500\">۱۴۰۳/۰۴/۱۵</span>\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 shadow-sm border\">\n                <div className=\"w-full h-32 rounded-lg mb-3 flex items-center justify-center bg-gray-100\">\n                  <svg className=\"w-10 h-10 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2v0a2 2 0 002-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-medium text-gray-800 text-sm mb-1\">تولید گلخانه‌ای</h3>\n                <p className=\"text-xs text-gray-500\">نوآوری‌های تولید در گلخانه</p>\n                <div className=\"flex items-center justify-between mt-2\">\n                  <span className=\"text-xs text-blue-600\">گلخانه</span>\n                  <span className=\"text-xs text-gray-500\">۱۴۰۳/۰۴/۱۰</span>\n                </div>\n              </div>\n              \n\n            </>\n          )}\n        </div>\n        \n\n    </div>\n  );\n}","size_bytes":48054},"client/src/pages/home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport {\n  Search,\n  Calendar,\n  Book,\n  Users,\n  Video,\n  FileText,\n  Star,\n  GraduationCap,\n  BookOpen,\n  Rocket,\n  Trophy,\n  Target,\n  Lightbulb,\n  Heart,\n  Globe,\n} from \"lucide-react\";\n\n// Define interfaces for the data fetched from the API\ninterface QuickAccessItem {\n  id: string;\n  title: string;\n  link?: string;\n  iconUrl?: string;\n  backgroundColor?: string;\n  iconColor?: string;\n  description?: string;\n  isActive?: boolean;\n}\n\n// Helper function to get icon components based on name\nconst getIconComponent = (iconName: string) => {\n  const iconMap: Record<string, any> = {\n    GraduationCap,\n    BookOpen,\n    Rocket,\n    Star,\n    Trophy,\n    Target,\n    Lightbulb,\n    Heart,\n    Globe,\n  };\n\n  const IconComponent = iconMap[iconName] || Star;\n  return <IconComponent size={200} />;\n};\n\nexport default function Home() {\n  // State for the current slide in the hero carousel\n  const [currentSlide, setCurrentSlide] = React.useState(0);\n\n  // Fetch data for quick access items\n  const { data: quickAccessItems, isLoading: quickAccessLoading } = useQuery<QuickAccessItem[]>({\n    queryKey: ['/api/quick-access'],\n  });\n\n  // Fetch data for slides\n  const { data: slides, isLoading: slidesLoading } = useQuery<any[]>({\n    queryKey: ['/api/slides/active'],\n  });\n\n  // Fetch data for courses\n  const { data: courses, isLoading: coursesLoading } = useQuery<any[]>({\n    queryKey: ['/api/courses'],\n  });\n\n  // Fetch data for projects\n  const { data: projects, isLoading: projectsLoading } = useQuery<any[]>({\n    queryKey: ['/api/projects'],\n  });\n\n  // Fetch data for workshops\n  const { data: workshops, isLoading: workshopsLoading } = useQuery<any[]>({\n    queryKey: ['/api/workshops'],\n  });\n\n  // Fetch data for magazines\n  const { data: magazines, isLoading: magazinesLoading } = useQuery<any[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  // Effect to automatically advance the carousel\n  React.useEffect(() => {\n    if (slides && slides.length > 0) {\n      const interval = setInterval(() => {\n        setCurrentSlide((prev) => (prev + 1) % slides.length);\n      }, 5000); // Change slide every 5 seconds\n\n      return () => clearInterval(interval); // Cleanup interval on component unmount\n    }\n  }, [slides]);\n\n  return (\n    <main className=\"container mx-auto px-4 py-8\">\n      {/* Hero Slider */}\n      <section className=\"relative h-96 md:h-[500px] overflow-hidden rounded-xl mb-8\">\n        <div className=\"relative w-full h-full\">\n          {slides && slides.length > 0 ? (\n            slides.map((slide, index) => (\n              <div\n                key={slide.id}\n                className={`absolute inset-0 transition-opacity duration-500 ${\n                  index === currentSlide ? \"opacity-100\" : \"opacity-0\"\n                }`}\n              >\n                <div\n                  className={`relative w-full h-full ${\n                    slide.gradientFrom && slide.gradientTo\n                      ? `bg-gradient-to-r from-${slide.gradientFrom} to-${slide.gradientTo}`\n                      : \"bg-gradient-to-r from-blue-600 to-purple-700\"\n                  } flex items-center justify-between px-8 md:px-16`}\n                  style={{\n                    backgroundImage: slide.imageUrl\n                      ? `url(${slide.imageUrl})`\n                      : undefined,\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                  }}\n                >\n                  {slide.imageUrl && (\n                    <div className=\"absolute inset-0 bg-black bg-opacity-40\"></div>\n                  )}\n\n                  <div className=\"flex-1 text-white z-10\">\n                    <h1 className=\"text-3xl md:text-5xl font-bold mb-4 leading-tight\">\n                      {slide.title}\n                    </h1>\n                    <p className=\"text-lg md:text-xl mb-6 opacity-90 max-w-2xl\">\n                      {slide.description}\n                    </p>\n\n                    {slide.showButtons && (\n                      <div className=\"flex flex-col sm:flex-row gap-4\">\n                        {slide.buttonText && slide.buttonUrl && (\n                          <Link\n                            to={slide.buttonUrl}\n                            className=\"bg-white text-blue-600 px-8 py-3 rounded-full font-semibold hover:bg-gray-100 transition-colors text-center\"\n                          >\n                            {slide.buttonText}\n                          </Link>\n                        )}\n                        {slide.secondButtonText && slide.secondButtonUrl && (\n                          <Link\n                            to={slide.secondButtonUrl}\n                            className=\"border-2 border-white text-white px-8 py-3 rounded-full font-semibold hover:bg-white hover:text-blue-600 transition-colors text-center\"\n                          >\n                            {slide.secondButtonText}\n                          </Link>\n                        )}\n                      </div>\n                    )}\n                  </div>\n\n                  {slide.showIcon && slide.iconName && (\n                    <div className=\"hidden md:flex flex-1 justify-center items-center\">\n                      <div className=\"text-white/20 transform scale-150\">\n                        {getIconComponent(slide.iconName)}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))\n          ) : (\n            // Default slide if no slides are configured\n            <div className=\"absolute inset-0\">\n              <div className=\"relative w-full h-full bg-gradient-to-r from-blue-600 to-purple-700 flex items-center justify-between px-8 md:px-16\">\n                <div className=\"flex-1 text-white z-10\">\n                  <h1 className=\"text-3xl md:text-5xl font-bold mb-4 leading-tight\">\n                    به پیستاط خوش آمدید\n                  </h1>\n                  <p className=\"text-lg md:text-xl mb-6 opacity-90 max-w-2xl\">\n                    بهترین منبع آموزشی برای یادگیری و پیشرفت\n                  </p>\n                  <div className=\"flex flex-col sm:flex-row gap-4\">\n                    <Link\n                      to=\"/courses\"\n                      className=\"bg-white text-blue-600 px-8 py-3 rounded-full font-semibold hover:bg-gray-100 transition-colors text-center\"\n                    >\n                      شروع یادگیری\n                    </Link>\n                    <Link\n                      to=\"/about\"\n                      className=\"border-2 border-white text-white px-8 py-3 rounded-full font-semibold hover:bg-white hover:text-blue-600 transition-colors text-center\"\n                    >\n                      درباره ما\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Navigation Dots */}\n        {slides && slides.length > 1 && (\n          <div className=\"absolute bottom-6 left-1/2 transform -translate-x-1/2 flex space-x-2\">\n            {slides.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentSlide(index)}\n                className={`w-3 h-3 rounded-full transition-colors ${\n                  index === currentSlide ? \"bg-white\" : \"bg-white/50\"\n                }`}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n\n      {/* Quick Access */}\n      <section className=\"mb-12\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">دسترسی سریع</h2>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n          {!quickAccessLoading && quickAccessItems && quickAccessItems.filter(item => item.isActive).length > 0 ?\n            quickAccessItems.filter(item => item.isActive).map((item) => (\n            <Link\n              key={item.id}\n              to={item.link || '#'}\n              className=\"group bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-200 border border-gray-100\"\n            >\n              <div className=\"flex flex-col items-center text-center space-y-3\">\n                <div\n                  className=\"w-12 h-12 rounded-xl flex items-center justify-center\"\n                  style={{\n                    backgroundColor: item.backgroundColor || \"hsl(270, 60%, 95%)\",\n                  }}\n                >\n                  {item.iconUrl ? (\n                    <img\n                      src={item.iconUrl}\n                      alt={item.title}\n                      className=\"w-8 h-8 object-contain\"\n                    />\n                  ) : (\n                    <FileText\n                      className=\"w-6 h-6\"\n                      style={{ color: item.iconColor || \"hsl(270, 70%, 60%)\" }}\n                    />\n                  )}\n                </div>\n                <span className=\"text-sm font-medium text-gray-900 group-hover:text-blue-600 transition-colors\">\n                  {item.title}\n                </span>\n                {item.description && (\n                  <span className=\"text-xs text-gray-500 line-clamp-2\">\n                    {item.description}\n                  </span>\n                )}\n              </div>\n            </Link>\n          )) : (\n            // Default quick access items\n            [\n              { icon: Book, label: \"کتابخانه\", href: \"/library\", bg: \"hsl(220, 60%, 95%)\", color: \"hsl(220, 70%, 60%)\" },\n              { icon: Video, label: \"دوره‌ها\", href: \"/courses\", bg: \"hsl(270, 60%, 95%)\", color: \"hsl(270, 70%, 60%)\" },\n              { icon: Calendar, label: \"مجله‌ها\", href: \"/magazines\", bg: \"hsl(120, 60%, 95%)\", color: \"hsl(120, 70%, 60%)\" },\n              { icon: Users, label: \"کارگاه‌ها\", href: \"/workshops\", bg: \"hsl(30, 60%, 95%)\", color: \"hsl(30, 70%, 60%)\" },\n              { icon: FileText, label: \"پروژه‌ها\", href: \"/projects\", bg: \"hsl(0, 60%, 95%)\", color: \"hsl(0, 70%, 60%)\" },\n              { icon: Star, label: \"وبینارها\", href: \"/webinars\", bg: \"hsl(180, 60%, 95%)\", color: \"hsl(180, 70%, 60%)\" }\n            ].map((item, index) => (\n              <Link\n                key={index}\n                to={item.href}\n                className=\"group bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-200 border border-gray-100\"\n              >\n                <div className=\"flex flex-col items-center text-center space-y-3\">\n                  <div\n                    className=\"w-12 h-12 rounded-xl flex items-center justify-center\"\n                    style={{ backgroundColor: item.bg }}\n                  >\n                    <item.icon className=\"w-6 h-6\" style={{ color: item.color }} />\n                  </div>\n                  <span className=\"text-sm font-medium text-gray-900 group-hover:text-blue-600 transition-colors\">\n                    {item.label}\n                  </span>\n                </div>\n              </Link>\n            ))\n          )}\n        </div>\n      </section>\n\n      {/* Featured Courses */}\n      <section className=\"mb-12\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-900\">دوره‌های ویژه</h2>\n          <Link\n            to=\"/courses\"\n            className=\"text-blue-600 hover:text-blue-700 font-semibold flex items-center gap-1\"\n          >\n            مشاهده همه دوره‌ها\n            <ArrowRight size={16} />\n          </Link>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {!coursesLoading && courses && courses.length > 0 ? (\n            courses.slice(0, 3).map((course) => (\n              <Link\n                key={course.id}\n                to={`/courses/${course.id}`}\n                className=\"group bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-200 border border-gray-100 flex flex-col\"\n              >\n                <div className=\"relative w-full h-48 rounded-lg overflow-hidden mb-4\">\n                  <img\n                    src={course.thumbnailUrl || \"/placeholder-course.jpg\"}\n                    alt={course.title}\n                    className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                  />\n                  {course.isPremium && (\n                    <span className=\"absolute top-2 left-2 bg-yellow-400 text-black text-xs font-bold px-3 py-1 rounded-full\">\n                       ویژه\n                    </span>\n                  )}\n                </div>\n                <div className=\"flex-grow flex flex-col justify-between\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                      {course.title}\n                    </h3>\n                    <p className=\"text-sm text-gray-600 line-clamp-3\">\n                      {course.description}\n                    </p>\n                  </div>\n                  <div className=\"mt-4 flex justify-between items-center\">\n                    <span className=\"text-lg font-bold text-gray-900\">\n                      {course.price === 0 ? \"رایگان\" : `${course.price} تومان`}\n                    </span>\n                    <div className=\"flex items-center gap-1 text-gray-500 text-sm\">\n                      <GraduationCap size={16} />\n                      {course.studentsEnrolled || 0} دانشجو\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            ))\n          ) : (\n            // Default course cards\n            [\n              { title: \"مقدمه‌ای بر برنامه نویسی پایتون\", description: \"یادگیری اصول اولیه برنامه نویسی با پایتون.\", price: \"رایگان\", students: 1500, premium: false },\n              { title: \"طراحی رابط کاربری با فیگما\", description: \"آموزش جامع طراحی UI/UX با نرم افزار فیگما.\", price: \"250,000\", students: 800, premium: true },\n              { title: \"یادگیری عمیق با تنسور فلو\", description: \"پروژه‌های عملی در یادگیری عمیق.\", price: \"400,000\", students: 500, premium: true },\n            ].map((course, index) => (\n              <div\n                key={index}\n                className=\"group bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-200 border border-gray-100 flex flex-col\"\n              >\n                <div className=\"relative w-full h-48 rounded-lg overflow-hidden mb-4\">\n                  <img\n                    src={`/placeholder-course-${index + 1}.jpg`}\n                    alt={course.title}\n                    className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                  />\n                  {course.premium && (\n                    <span className=\"absolute top-2 left-2 bg-yellow-400 text-black text-xs font-bold px-3 py-1 rounded-full\">\n                      ویژه\n                    </span>\n                  )}\n                </div>\n                <div className=\"flex-grow flex flex-col justify-between\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                      {course.title}\n                    </h3>\n                    <p className=\"text-sm text-gray-600 line-clamp-3\">\n                      {course.description}\n                    </p>\n                  </div>\n                  <div className=\"mt-4 flex justify-between items-center\">\n                    <span className=\"text-lg font-bold text-gray-900\">\n                      {course.price} تومان\n                    </span>\n                    <div className=\"flex items-center gap-1 text-gray-500 text-sm\">\n                      <GraduationCap size={16} />\n                      {course.students} دانشجو\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </section>\n\n      {/* Featured Webinars */}\n      <section className=\"mb-12\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-900\">وبینارهای ویژه</h2>\n          <Link\n            to=\"/webinars\"\n            className=\"text-blue-600 hover:text-blue-700 font-semibold flex items-center gap-1\"\n          >\n            مشاهده همه وبینارها\n            <ArrowRight size={16} />\n          </Link>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {/* Placeholder for webinar cards - replace with actual data fetching */}\n          {[\n            { title: \"هوش مصنوعی در کسب و کار\", description: \"راهکارهای عملی هوش مصنوعی برای رشد کسب و کار.\", date: \"1403/05/10\", instructor: \"دکتر احمدی\" },\n            { title: \"بازاریابی محتوایی دیجیتال\", description: \"استراتژی‌های موثر بازاریابی محتوایی.\", date: \"1403/05/15\", instructor: \"مهندس کریمی\" },\n            { title: \"امنیت سایبری در دنیای امروز\", description: \"حفاظت از داده‌ها و سیستم‌ها در برابر تهدیدات.\", date: \"1403/05/20\", instructor: \"مهندس رضایی\" },\n          ].map((webinar, index) => (\n            <div\n              key={index}\n              className=\"group bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-200 border border-gray-100 flex flex-col\"\n            >\n              <div className=\"relative w-full h-48 rounded-lg overflow-hidden mb-4\">\n                <img\n                  src={`/placeholder-webinar-${index + 1}.jpg`}\n                  alt={webinar.title}\n                  className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                />\n                <span className=\"absolute top-2 left-2 bg-purple-500 text-white text-xs font-bold px-3 py-1 rounded-full\">\n                  وبینار\n                </span>\n              </div>\n              <div className=\"flex-grow flex flex-col justify-between\">\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {webinar.title}\n                  </h3>\n                  <p className=\"text-sm text-gray-600 line-clamp-2\">\n                    {webinar.description}\n                  </p>\n                </div>\n                <div className=\"mt-4 flex justify-between items-center\">\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm text-gray-500\">تاریخ برگزاری</span>\n                    <span className=\"text-base font-semibold text-gray-900\">\n                      {webinar.date}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1 text-gray-500 text-sm\">\n                    <User size={16} />\n                    {webinar.instructor}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* About Us Section */}\n      <section className=\"bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl text-white py-12 px-8 md:px-16 flex flex-col md:flex-row items-center gap-8\">\n        <div className=\"md:w-1/2\">\n          <h2 className=\"text-3xl font-bold mb-4\">درباره پیستاط</h2>\n          <p className=\"text-lg opacity-90 mb-6\">\n            پیستاط یک پلتفرم آموزشی پیشرو است که با هدف توانمندسازی افراد از طریق\n            یادگیری فراهم شده است. ما دوره‌ها و محتوای آموزشی با کیفیتی را در\n            حوزه‌های مختلف ارائه می‌دهیم.\n          </p>\n          <Link\n            to=\"/about\"\n            className=\"bg-white text-blue-600 px-8 py-3 rounded-full font-semibold hover:bg-gray-100 transition-colors\"\n          >\n            بیشتر بدانید\n          </Link>\n        </div>\n        <div className=\"md:w-1/2 flex justify-center\">\n          <img\n            src=\"/about-us-hero.png\"\n            alt=\"About Us\"\n            className=\"max-w-full h-auto rounded-lg shadow-lg\"\n          />\n        </div>\n      </section>\n    </main>\n  );\n}","size_bytes":20749},"client/src/pages/library-simple.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { \n  Search, \n  Download, \n  Eye, \n  FileText, \n  Calendar,\n  User,\n  Tag,\n  Star,\n  BookOpen,\n  FileType,\n  Clock,\n  TrendingUp,\n  ArrowRight\n} from \"lucide-react\";\nimport { type Document } from \"@shared/schema\";\nimport { AuthGuard } from \"@/components/AuthGuard\";\n\nexport default function Library() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [sortBy, setSortBy] = useState(\"newest\");\n\n  interface Document {\n    id: number;\n    title: string;\n    author?: string;\n    fileType?: string;\n    fileName?: string;\n    publishedAt?: Date;\n    content?: string;\n    excerpt?: string;\n    featuredImageUrl?: string;\n    fileUrl?: string;\n    fileSize?: number;\n    totalPages?: number;\n    categoryId?: number;\n    status?: string;\n    allowDownload?: boolean;\n    downloadCount?: number;\n    viewCount?: number;\n    isFeatured?: boolean;\n    createdAt?: Date;\n    updatedAt?: Date;\n    slug?: string;\n    lastUpdated?: string;\n  }\n\n  const { data: documents = [], isLoading } = useQuery<Document[]>({\n    queryKey: ['/api/documents'],\n  });\n\n  const filteredDocuments = documents.filter((doc: Document) => {\n    const matchesSearch = doc.title.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesSearch;\n  });\n\n  return (\n    <AuthGuard>\n      <div className=\"p-4 pb-24\" dir=\"rtl\">\n      {/* Header */}\n      <div className=\"mb-6\">\n        <button \n          onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n          className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\n        >\n          <ArrowRight className=\"h-5 w-5\" />\n          بازگشت\n        </button>\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">کتابخانه دیجیتال</h1>\n        <p className=\"text-gray-600\">مجموعه کامل منابع و مستندات</p>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"mb-6 space-y-4\">\n        <div className=\"relative\">\n          <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n          <input\n            type=\"text\"\n            placeholder=\"جستجو در اسناد...\"\n            className=\"w-full pr-10 pl-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n\n        <div className=\"flex flex-wrap gap-3\">\n          <select \n            value={selectedCategory} \n            onChange={(e) => setSelectedCategory(e.target.value)}\n            className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">همه دسته‌ها</option>\n            <option value=\"book\">کتاب</option>\n            <option value=\"article\">مقاله</option>\n            <option value=\"report\">گزارش</option>\n            <option value=\"manual\">راهنما</option>\n          </select>\n\n          <select \n            value={sortBy} \n            onChange={(e) => setSortBy(e.target.value)}\n            className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"newest\">جدیدترین</option>\n            <option value=\"oldest\">قدیمی‌ترین</option>\n            <option value=\"popular\">محبوب‌ترین</option>\n            <option value=\"title\">عنوان</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-white p-4 rounded-lg border text-center\">\n          <BookOpen className=\"w-8 h-8 text-blue-600 mx-auto mb-2\" />\n          <div className=\"text-2xl font-bold text-gray-900\">{documents.length}</div>\n          <div className=\"text-sm text-gray-600\">کل اسناد</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg border text-center\">\n          <FileText className=\"w-8 h-8 text-green-600 mx-auto mb-2\" />\n          <div className=\"text-2xl font-bold text-gray-900\">25</div>\n          <div className=\"text-sm text-gray-600\">مقالات</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg border text-center\">\n          <Star className=\"w-8 h-8 text-yellow-600 mx-auto mb-2\" />\n          <div className=\"text-2xl font-bold text-gray-900\">12</div>\n          <div className=\"text-sm text-gray-600\">محبوب</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg border text-center\">\n          <TrendingUp className=\"w-8 h-8 text-purple-600 mx-auto mb-2\" />\n          <div className=\"text-2xl font-bold text-gray-900\">8</div>\n          <div className=\"text-sm text-gray-600\">جدید</div>\n        </div>\n      </div>\n\n      {/* Documents Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {isLoading ? (\n          Array(6).fill(0).map((_, i) => (\n            <div key={i} className=\"bg-white rounded-lg border p-6 animate-pulse\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"w-12 h-12 bg-gray-200 rounded-lg\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"w-3/4 h-5 bg-gray-200 rounded mb-2\"></div>\n                  <div className=\"w-1/2 h-4 bg-gray-200 rounded mb-4\"></div>\n                  <div className=\"flex gap-2\">\n                    <div className=\"w-16 h-8 bg-gray-200 rounded\"></div>\n                    <div className=\"w-16 h-8 bg-gray-200 rounded\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : filteredDocuments.length > 0 ? (\n          filteredDocuments.map((doc: Document) => (\n            <div key={doc.id} className=\"bg-white rounded-lg border p-6 hover:shadow-lg transition-shadow\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                  <FileText className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <h3 className=\"font-semibold text-gray-900 mb-1 line-clamp-2\">{doc.title}</h3>\n                  <p className=\"text-sm text-gray-600 mb-2\">{doc.fileName}</p>\n                  \n                  <div className=\"flex items-center gap-4 text-xs text-gray-500 mb-4\">\n                    <div className=\"flex items-center gap-1\">\n                      <Calendar className=\"w-3 h-3\" />\n                      <span>{doc.lastUpdated}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <FileType className=\"w-3 h-3\" />\n                      <span>PDF</span>\n                    </div>\n                  </div>\n\n                  <div className=\"flex gap-2\">\n                    <button className=\"flex items-center gap-1 px-3 py-1.5 bg-blue-50 text-blue-600 rounded-lg text-sm hover:bg-blue-100 transition-colors\">\n                      <Eye className=\"w-4 h-4\" />\n                      <span>مشاهده</span>\n                    </button>\n                    {doc.allowDownload && (\n                      <button className=\"flex items-center gap-1 px-3 py-1.5 bg-green-50 text-green-600 rounded-lg text-sm hover:bg-green-100 transition-colors\">\n                        <Download className=\"w-4 h-4\" />\n                        <span>دانلود</span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"col-span-full text-center py-12\">\n            <FileText className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ سندی یافت نشد</h3>\n            <p className=\"text-gray-600\">لطفاً جستجوی خود را تغییر دهید یا دسته‌بندی دیگری انتخاب کنید.</p>\n          </div>\n        )}\n      </div>\n      </div>\n    </AuthGuard>\n  );\n}","size_bytes":8301},"client/src/pages/library.tsx":{"content":"import React, { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { \n  Search, \n  Download, \n  Eye, \n  FileText, \n  Calendar,\n  User,\n  Tag,\n  Star,\n  BookOpen,\n  FileType,\n  Clock,\n  TrendingUp\n} from \"lucide-react\";\n\ninterface Document {\n  id: number;\n  title: string;\n  slug: string;\n  content?: string;\n  excerpt?: string;\n  author?: string;\n  category?: string;\n  tags?: string[];\n  publishedAt?: string;\n  fileUrl?: string;\n  downloadCount?: number;\n  rating?: number;\n  fileType?: string;\n  fileSize?: string;\n  readTime?: string;\n  featured?: boolean;\n}\n\nexport default function Library() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [selectedTag, setSelectedTag] = useState(\"all\");\n  const [activeTab, setActiveTab] = useState(\"all\");\n\n  const { data: documents, isLoading } = useQuery<Document[]>({\n    queryKey: ['/api/documents'],\n  });\n\n  const { data: categories } = useQuery<string[]>({\n    queryKey: ['/api/documents/categories'],\n  });\n\n  const { data: tags } = useQuery<string[]>({\n    queryKey: ['/api/documents/tags'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {[1, 2, 3, 4, 5, 6].map((i) => (\n            <div key={i} className=\"animate-pulse\">\n              <div className=\"bg-gray-200 h-48 rounded-lg mb-4\"></div>\n              <div className=\"bg-gray-200 h-4 rounded mb-2\"></div>\n              <div className=\"bg-gray-200 h-3 rounded mb-2\"></div>\n              <div className=\"bg-gray-200 h-3 rounded w-2/3\"></div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  const filteredDocuments = documents?.filter((doc: Document) => {\n    const matchesSearch = doc.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         doc.excerpt?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = selectedCategory === \"all\" || doc.category === selectedCategory;\n    const matchesTag = selectedTag === \"all\" || doc.tags?.includes(selectedTag);\n    \n    return matchesSearch && matchesCategory && matchesTag;\n  }) || [];\n\n  const featuredDocuments = filteredDocuments.filter((doc: Document) => doc.featured);\n  const popularDocuments = filteredDocuments\n    .sort((a: Document, b: Document) => (b.downloadCount || 0) - (a.downloadCount || 0))\n    .slice(0, 6);\n\n  const getTabDocuments = () => {\n    switch (activeTab) {\n      case \"featured\":\n        return featuredDocuments;\n      case \"popular\":\n        return popularDocuments;\n      case \"recent\":\n        return filteredDocuments\n          .sort((a: Document, b: Document) => \n            new Date(b.publishedAt || '').getTime() - new Date(a.publishedAt || '').getTime()\n          );\n      default:\n        return filteredDocuments;\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 pb-20\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">کتابخانه دیجیتال</h1>\n        <p className=\"text-gray-600\">مجموعه‌ای جامع از منابع آموزشی و تخصصی</p>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"flex flex-col sm:flex-row gap-4 mb-6\">\n        <div className=\"relative flex-1\">\n          <Search className=\"absolute right-3 top-3 h-4 w-4 text-gray-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"جستجو در کتابخانه...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full pr-9 pl-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <select \n            value={selectedCategory} \n            onChange={(e) => setSelectedCategory(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 bg-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">همه دسته‌ها</option>\n            {categories?.map((category: string) => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n          \n          <select \n            value={selectedTag} \n            onChange={(e) => setSelectedTag(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 bg-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">همه برچسب‌ها</option>\n            {tags?.map((tag: string) => (\n              <option key={tag} value={tag}>\n                {tag}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Statistics */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n        <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n          <BookOpen className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\n          <div className=\"text-2xl font-bold text-blue-600\">{documents?.length || 0}</div>\n          <div className=\"text-sm text-gray-600\">کل اسناد</div>\n        </div>\n        \n        <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n          <Star className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n          <div className=\"text-2xl font-bold text-green-600\">{featuredDocuments.length}</div>\n          <div className=\"text-sm text-gray-600\">ویژه</div>\n        </div>\n        \n        <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n          <Tag className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n          <div className=\"text-2xl font-bold text-purple-600\">{categories?.length || 0}</div>\n          <div className=\"text-sm text-gray-600\">دسته‌بندی</div>\n        </div>\n        \n        <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n          <TrendingUp className=\"h-8 w-8 text-orange-600 mx-auto mb-2\" />\n          <div className=\"text-2xl font-bold text-orange-600\">\n            {documents?.reduce((acc: number, doc: Document) => acc + (doc.downloadCount || 0), 0)}\n          </div>\n          <div className=\"text-sm text-gray-600\">دانلود</div>\n        </div>\n      </div>\n\n      {/* Simple Tab Navigation */}\n      <div className=\"flex gap-2 mb-6 border-b\">\n        {[\n          { id: \"all\", label: \"همه\" },\n          { id: \"featured\", label: \"ویژه\" },\n          { id: \"popular\", label: \"محبوب\" },\n          { id: \"recent\", label: \"جدید\" }\n        ].map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id)}\n            className={`px-4 py-2 border-b-2 transition-colors ${\n              activeTab === tab.id \n                ? 'border-blue-500 text-blue-600 font-medium' \n                : 'border-transparent text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* Documents Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {getTabDocuments().map((doc: Document) => (\n          <div key={doc.id} className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 p-6\">\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex-1\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2 line-clamp-2\">\n                  {doc.title}\n                </h3>\n                <p className=\"text-gray-600 text-sm line-clamp-2\">\n                  {doc.excerpt}\n                </p>\n              </div>\n              {doc.featured && (\n                <Star className=\"h-5 w-5 text-yellow-500 fill-current flex-shrink-0 mr-2\" />\n              )}\n            </div>\n            \n            <div className=\"space-y-4\">\n              {/* Meta Information */}\n              <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                <div className=\"flex items-center gap-1\">\n                  <User className=\"h-4 w-4\" />\n                  <span>{doc.author || 'نامشخص'}</span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <Calendar className=\"h-4 w-4\" />\n                  <span>\n                    {doc.publishedAt \n                      ? new Date(doc.publishedAt).toLocaleDateString('fa-IR')\n                      : 'نامشخص'\n                    }\n                  </span>\n                </div>\n              </div>\n\n              {/* Tags */}\n              {doc.tags && doc.tags.length > 0 && (\n                <div className=\"flex flex-wrap gap-1\">\n                  {doc.tags.slice(0, 3).map((tag: string) => (\n                    <span key={tag} className=\"px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs\">\n                      {tag}\n                    </span>\n                  ))}\n                  {doc.tags.length > 3 && (\n                    <span className=\"px-2 py-1 bg-gray-200 text-gray-600 rounded-full text-xs\">\n                      +{doc.tags.length - 3}\n                    </span>\n                  )}\n                </div>\n              )}\n\n              {/* File Info */}\n              <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                <div className=\"flex items-center gap-1\">\n                  <FileType className=\"h-4 w-4\" />\n                  <span>{doc.fileType || 'PDF'}</span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <Clock className=\"h-4 w-4\" />\n                  <span>{doc.readTime || '۵ دقیقه'}</span>\n                </div>\n              </div>\n\n              {/* Stats */}\n              <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                <div className=\"flex items-center gap-1\">\n                  <Download className=\"h-4 w-4\" />\n                  <span>{doc.downloadCount || 0} دانلود</span>\n                </div>\n                {doc.rating && (\n                  <div className=\"flex items-center gap-1\">\n                    <Star className=\"h-4 w-4 text-yellow-500\" />\n                    <span>{doc.rating.toFixed(1)}</span>\n                  </div>\n                )}\n              </div>\n\n              {/* Actions */}\n              <div className=\"flex gap-2 pt-2\">\n                <button className=\"flex-1 px-3 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors flex items-center justify-center gap-1\">\n                  <Eye className=\"h-4 w-4\" />\n                  مشاهده\n                </button>\n                <button className=\"flex-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center justify-center gap-1\">\n                  <Download className=\"h-4 w-4\" />\n                  دانلود\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Empty State */}\n      {getTabDocuments().length === 0 && (\n        <div className=\"text-center py-12\">\n          <FileText className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ سندی یافت نشد</h3>\n          <p className=\"text-gray-600\">سعی کنید با کلمات کلیدی دیگری جستجو کنید</p>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":11656},"client/src/pages/login.tsx":{"content":"import { useState } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useAuth } from '@/hooks/useAuth';\n\nexport default function LoginPage() {\n  const { refetch } = useAuth();\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n    name: ''\n  });\n  const [error, setError] = useState<string | null>(null);\n\n  const loginMutation = useMutation({\n    mutationFn: async (data: { username: string; password: string }) => {\n      const response = await apiRequest('/api/login', {\n        method: 'POST',\n        body: JSON.stringify(data)\n      });\n      return response;\n    },\n    onSuccess: (data) => {\n      setError(null);\n      refetch();\n      \n      // Check if user is admin\n      if (data.user.role === 'admin') {\n        // Redirect admin to admin panel\n        window.location.href = \"/admin\";\n      } else {\n        // Redirect normal user to home\n        window.location.href = \"/\";\n      }\n    },\n    onError: (error: any) => {\n      setError(error.message || 'خطا در ورود');\n    }\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    \n    if (isLogin) {\n      if (!formData.username || !formData.password) {\n        setError('لطفاً تمام فیلدها را پر کنید');\n        return;\n      }\n      loginMutation.mutate({\n        username: formData.username,\n        password: formData.password\n      });\n    } else {\n      // Handle registration logic here\n      setError('ثبت‌نام فعلاً در دسترس نیست');\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 to-blue-50 px-4\" dir=\"rtl\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-green-100\">\n            <svg className=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </div>\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n            {isLogin ? 'ورود به حساب کاربری' : 'ثبت‌نام'}\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            {isLogin ? 'برای دسترسی به محتوای آموزشی وارد شوید' : 'حساب کاربری جدید ایجاد کنید'}\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            {!isLogin && (\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                  نام کامل\n                </label>\n                <input\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  required={!isLogin}\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"نام و نام خانوادگی\"\n                />\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n                نام کاربری\n              </label>\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                required\n                value={formData.username}\n                onChange={handleInputChange}\n                className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\n                placeholder=\"نام کاربری\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                رمز عبور\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                value={formData.password}\n                onChange={handleInputChange}\n                className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\n                placeholder=\"رمز عبور\"\n              />\n            </div>\n\n            {!isLogin && (\n              <div>\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                  تکرار رمز عبور\n                </label>\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  required={!isLogin}\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"تکرار رمز عبور\"\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex items-center justify-between\">\n            {isLogin && (\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-green-600 hover:text-green-500\">\n                  رمز عبور را فراموش کرده‌اید؟\n                </a>\n              </div>\n            )}\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loginMutation.isPending}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50\"\n            >\n              {loginMutation.isPending ? 'در حال ورود...' : (isLogin ? 'ورود' : 'ثبت‌نام')}\n            </button>\n          </div>\n\n          {error && (\n            <div className=\"text-center\">\n              <p className=\"text-red-600 text-sm\">{error}</p>\n            </div>\n          )}\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              {isLogin ? (\n                <>\n                  حساب کاربری ندارید؟{\" \"}\n                  <button\n                    type=\"button\"\n                    onClick={() => window.location.href = \"/register\"}\n                    className=\"font-medium text-green-600 hover:text-green-500\"\n                  >\n                    ثبت‌نام کنید\n                  </button>\n                </>\n              ) : (\n                <>\n                  حساب کاربری دارید؟{\" \"}\n                  <button\n                    type=\"button\"\n                    onClick={() => setIsLogin(true)}\n                    className=\"font-medium text-green-600 hover:text-green-500\"\n                  >\n                    وارد شوید\n                  </button>\n                </>\n              )}\n            </p>\n          </div>\n        </form>\n\n        <div className=\"mt-6\">\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300\" />\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-gradient-to-br from-green-50 to-blue-50 text-gray-500\">یا</span>\n            </div>\n          </div>\n\n          <div className=\"mt-6 grid grid-cols-2 gap-3\">\n            <div>\n              <a\n                href=\"#\"\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n              >\n                <svg className=\"h-5 w-5 text-blue-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\" clipRule=\"evenodd\" />\n                </svg>\n                <span className=\"mr-2\">فیسبوک</span>\n              </a>\n            </div>\n\n            <div>\n              <a\n                href=\"#\"\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n              >\n                <svg className=\"h-5 w-5 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M15.545 6.558a9.42 9.42 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.689 7.689 0 0 1 5.352 2.082l-2.284 2.284A4.347 4.347 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.792 4.792 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.702 3.702 0 0 0 1.599-2.431H8v-3.08h7.545z\" />\n                </svg>\n                <span className=\"mr-2\">گوگل</span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":10351},"client/src/pages/magazine-detail.tsx":{"content":"import { useQuery } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport { \n  Calendar, \n  BookOpen, \n  Download, \n  ArrowRight, \n  Clock, \n  User,\n  FileText,\n  Eye,\n  ChevronDown,\n  ChevronUp\n} from 'lucide-react';\n\ninterface Article {\n  id: number;\n  title: string;\n  author: string;\n  summary: string;\n  publishDate: string;\n  content: string;\n  featuredImageUrl: string;\n  readTime: number;\n  magazineId: number;\n  pdfUrl: string;\n  order: number;\n  isPublished: boolean;\n}\n\ninterface Magazine {\n  id: number;\n  title: string;\n  description: string;\n  coverImageUrl: string;\n  issueNumber: number;\n  publishDate: string;\n  season: string;\n  year: number;\n  totalPages: number;\n  pdfUrl: string;\n  isActive: boolean;\n}\n\ninterface MagazineDetailPageProps {\n  magazineId: number;\n}\n\nexport default function MagazineDetailPage({ magazineId }: MagazineDetailPageProps) {\n  const [expandedArticle, setExpandedArticle] = useState<number | null>(null);\n  \n  const { data: magazine, isLoading: magazineLoading } = useQuery<Magazine>({\n    queryKey: [`/api/magazines/${magazineId}`],\n    enabled: !!magazineId,\n  });\n\n  const { data: articles = [], isLoading: articlesLoading } = useQuery<Article[]>({\n    queryKey: [`/api/articles/magazine/${magazineId}`],\n    enabled: !!magazineId,\n  });\n\n  const isLoading = magazineLoading || articlesLoading;\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">در حال بارگذاری...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!magazine) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <BookOpen className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">مجله یافت نشد</h2>\n          <p className=\"text-gray-600\">مجله مورد نظر شما وجود ندارد یا حذف شده است.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const toggleArticleExpansion = (articleId: number) => {\n    setExpandedArticle(expandedArticle === articleId ? null : articleId);\n  };\n\n  const publishedArticles = articles.filter(article => article.isPublished).sort((a, b) => a.order - b.order);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm\">\n        <div className=\"max-w-4xl mx-auto px-4 py-6\">\n          <div className=\"flex items-center gap-4 mb-6\">\n            <button \n              onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n              className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900\"\n            >\n              <ArrowRight className=\"h-5 w-5\" />\n              بازگشت\n            </button>\n          </div>\n\n          <div className=\"flex flex-col md:flex-row gap-6\">\n            {/* Magazine Cover */}\n            <div className=\"md:w-1/3\">\n              <div className=\"bg-gray-100 rounded-lg overflow-hidden aspect-[3/4]\">\n                {magazine.coverImageUrl ? (\n                  <img \n                    src={magazine.coverImageUrl} \n                    alt={magazine.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-full h-full flex items-center justify-center\">\n                    <BookOpen className=\"h-16 w-16 text-gray-400\" />\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Magazine Info */}\n            <div className=\"md:w-2/3\">\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">{magazine.title}</h1>\n              \n              <div className=\"flex flex-wrap gap-4 mb-4\">\n                <div className=\"flex items-center gap-2 text-gray-600\">\n                  <Calendar className=\"h-4 w-4\" />\n                  <span>شماره {magazine.issueNumber}</span>\n                </div>\n                <div className=\"flex items-center gap-2 text-gray-600\">\n                  <Clock className=\"h-4 w-4\" />\n                  <span>{magazine.publishDate}</span>\n                </div>\n                {magazine.totalPages > 0 && (\n                  <div className=\"flex items-center gap-2 text-gray-600\">\n                    <FileText className=\"h-4 w-4\" />\n                    <span>{magazine.totalPages} صفحه</span>\n                  </div>\n                )}\n              </div>\n\n              <p className=\"text-gray-700 mb-6 leading-relaxed\">\n                {magazine.description}\n              </p>\n\n              {/* Download Button */}\n              {magazine.pdfUrl && (\n                <div className=\"flex gap-4\">\n                  <a\n                    href={magazine.pdfUrl}\n                    download\n                    className=\"flex items-center gap-2 bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors\"\n                  >\n                    <Download className=\"h-5 w-5\" />\n                    دانلود PDF\n                  </a>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Articles Section */}\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"bg-white rounded-lg shadow-sm\">\n          <div className=\"p-6 border-b\">\n            <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n              <BookOpen className=\"h-6 w-6\" />\n              فهرست مطالب\n            </h2>\n          </div>\n\n          <div className=\"divide-y\">\n            {publishedArticles.length > 0 ? (\n              publishedArticles.map((article) => (\n                <div key={article.id} className=\"p-6\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                        {article.title}\n                      </h3>\n                      \n                      <div className=\"flex flex-wrap gap-4 mb-3\">\n                        {article.author && (\n                          <div className=\"flex items-center gap-1 text-gray-600\">\n                            <User className=\"h-4 w-4\" />\n                            <span>{article.author}</span>\n                          </div>\n                        )}\n                        {article.readTime > 0 && (\n                          <div className=\"flex items-center gap-1 text-gray-600\">\n                            <Clock className=\"h-4 w-4\" />\n                            <span>{article.readTime} دقیقه مطالعه</span>\n                          </div>\n                        )}\n                      </div>\n\n                      <p className=\"text-gray-700 mb-4\">{article.summary}</p>\n\n                      {/* Article Actions */}\n                      <div className=\"flex items-center gap-4\">\n                        <button\n                          onClick={() => toggleArticleExpansion(article.id)}\n                          className=\"flex items-center gap-2 text-blue-600 hover:text-blue-700\"\n                        >\n                          <Eye className=\"h-4 w-4\" />\n                          {expandedArticle === article.id ? 'بستن' : 'مطالعه'}\n                          {expandedArticle === article.id ? (\n                            <ChevronUp className=\"h-4 w-4\" />\n                          ) : (\n                            <ChevronDown className=\"h-4 w-4\" />\n                          )}\n                        </button>\n                        \n                        {article.pdfUrl && (\n                          <a\n                            href={article.pdfUrl}\n                            download\n                            className=\"flex items-center gap-2 text-green-600 hover:text-green-700\"\n                          >\n                            <Download className=\"h-4 w-4\" />\n                            دانلود PDF\n                          </a>\n                        )}\n                      </div>\n                    </div>\n\n                    {article.featuredImageUrl && (\n                      <div className=\"w-24 h-24 bg-gray-100 rounded-lg overflow-hidden ml-4\">\n                        <img \n                          src={article.featuredImageUrl} \n                          alt={article.title}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Expanded Article Content */}\n                  {expandedArticle === article.id && (\n                    <div className=\"mt-6 pt-6 border-t\">\n                      <div className=\"prose max-w-none\">\n                        <div \n                          className=\"text-gray-700 leading-relaxed\"\n                          dangerouslySetInnerHTML={{ __html: article.content }}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))\n            ) : (\n              <div className=\"p-12 text-center text-gray-500\">\n                <BookOpen className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">مقاله‌ای یافت نشد</h3>\n                <p className=\"text-gray-600\">هنوز مقاله‌ای برای این شماره مجله منتشر نشده است.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":9857},"client/src/pages/magazine.tsx":{"content":"\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { type Magazine } from \"@shared/schema\";\n\n\n\n\nimport { BookOpen, Calendar, FileText } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function MagazinePage() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  \n  const { data: magazines = [], isLoading } = useQuery<Magazine[]>({ \n    queryKey: ['/api/magazines'] \n  });\n  \n  // Filter magazines based on search\n  const filteredMagazines = magazines.filter(magazine => {\n    const matchesSearch = magazine.title.toLowerCase().includes(searchTerm.toLowerCase()) || \n                        (magazine.description && magazine.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    return matchesSearch && magazine.isActive;\n  });\n  \n  return (\n    <div>\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold text-neutral-500 mb-2 flex items-center\">\n          <BookOpen className=\"ml-2 h-6 w-6 text-primary\" />\n          فصلنامه رویش سبز\n        </h2>\n        <p className=\"text-neutral-300\">مطالعه شماره‌های فصلنامه رویش سبز</p>\n      </div>\n      \n      <div className=\"mb-6\">\n        <div className=\"relative mb-6\">\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none text-neutral-300\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n          <Input\n            type=\"text\"\n            placeholder=\"جستجوی شماره‌های مجله...\"\n            className=\"pl-10 pr-4 py-2\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8\">\n        {isLoading ? (\n          Array(6).fill(0).map((_, i) => (\n            <Card key={i} className=\"hover:shadow-md transition-shadow\">\n              <CardHeader>\n                <Skeleton className=\"w-3/4 h-6 mb-2\" />\n                <Skeleton className=\"w-full h-4\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"w-full h-20 mb-3\" />\n                <div className=\"flex justify-between items-center\">\n                  <Skeleton className=\"w-1/3 h-4\" />\n                  <Skeleton className=\"w-20 h-6 rounded-full\" />\n                </div>\n              </CardContent>\n            </Card>\n          ))\n        ) : filteredMagazines.length > 0 ? (\n          filteredMagazines.map(magazine => (\n            <Card key={magazine.id} className=\"hover:shadow-md transition-shadow cursor-pointer\">\n              {magazine.coverImageUrl && (\n                <div className=\"aspect-[3/4] overflow-hidden\">\n                  <img \n                    src={magazine.coverImageUrl} \n                    alt={magazine.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n              )}\n              <CardHeader>\n                <CardTitle className=\"text-lg text-neutral-700 line-clamp-2\">\n                  {magazine.title}\n                </CardTitle>\n                <CardDescription className=\"flex items-center gap-2 text-sm text-neutral-400\">\n                  <Calendar className=\"h-4 w-4\" />\n                  {magazine.publishDate ? new Date(magazine.publishDate).toLocaleDateString('fa-IR') : 'تاریخ نامشخص'}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                {magazine.description && (\n                  <p className=\"text-neutral-600 text-sm line-clamp-3 mb-4\">\n                    {magazine.description}\n                  </p>\n                )}\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"flex items-center gap-4 text-sm text-neutral-400\">\n                    {magazine.issueNumber && (\n                      <div className=\"flex items-center gap-1\">\n                        <span>شماره {magazine.issueNumber}</span>\n                      </div>\n                    )}\n                    {magazine.totalPages && (\n                      <div className=\"flex items-center gap-1\">\n                        <FileText className=\"h-4 w-4\" />\n                        <span>{magazine.totalPages} صفحه</span>\n                      </div>\n                    )}\n                  </div>\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    {magazine.season && magazine.year ? `${magazine.season} ${magazine.year}` : 'فصلنامه'}\n                  </Badge>\n                </div>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <div className=\"col-span-full text-center py-12\">\n            <BookOpen className=\"h-16 w-16 text-neutral-300 mx-auto mb-4\" />\n            <p className=\"text-neutral-400 text-lg mb-2\">هیچ شماره‌ای یافت نشد</p>\n            <p className=\"text-neutral-300 text-sm\">\n              {searchTerm ? \"معیارهای جستجوی خود را تغییر دهید\" : \"هنوز شماره‌ای منتشر نشده است\"}\n            </p>\n            {searchTerm && (\n              <button \n                className=\"text-primary hover:underline mt-2\"\n                onClick={() => setSearchTerm(\"\")}\n              >\n                پاک کردن جستجو\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":5756},"client/src/pages/magazines.tsx":{"content":"import { useQuery } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport { ArrowRight } from 'lucide-react';\n\nexport default function MagazinesPage() {\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  const { data: magazines, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/magazines'],\n  });\n\n  const handleMagazineClick = (magazineId: number) => {\n    window.postMessage({ \n      type: 'OPEN_MAGAZINE', \n      magazineId: magazineId \n    }, '*');\n  };\n\n  const filteredMagazines = magazines?.filter(magazine => \n    magazine.isActive && \n    magazine.title.toLowerCase().includes(searchTerm.toLowerCase())\n  ) || [];\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">در حال بارگذاری...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-6\">\n        <button \n          onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n          className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\n        >\n          <ArrowRight className=\"h-5 w-5\" />\n          بازگشت\n        </button>\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">فصلنامه رویش سبز</h1>\n        \n        <div className=\"flex gap-4 mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"جستجو در مجلات...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n        {filteredMagazines.map((magazine) => (\n          <div \n            key={magazine.id} \n            className=\"bg-white rounded-xl p-4 shadow-sm border cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => handleMagazineClick(magazine.id)}\n          >\n            <div className=\"w-full h-48 rounded-lg mb-3 flex items-center justify-center overflow-hidden\">\n              {magazine.coverImageUrl ? (\n                <img \n                  src={magazine.coverImageUrl} \n                  alt={magazine.title}\n                  className=\"w-full h-full object-cover\"\n                />\n              ) : (\n                <svg className=\"w-12 h-12 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n                </svg>\n              )}\n            </div>\n            <h3 className=\"font-medium text-gray-800 mb-2\">{magazine.title}</h3>\n            <p className=\"text-sm text-gray-500 mb-3\">{magazine.description}</p>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-blue-600\">شماره {magazine.issueNumber}</span>\n              <span className=\"text-sm text-gray-500\">\n                {new Date(magazine.publishDate).toLocaleDateString('fa-IR')}\n              </span>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {filteredMagazines.length === 0 && (\n        <div className=\"text-center py-8 text-gray-500\">\n          هیچ مجله‌ای پیدا نشد.\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":3540},"client/src/pages/media-library.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Search, Upload, X, Image, Video, File, Trash2, Eye, Copy } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface MediaFile {\n  id: number;\n  filename: string;\n  originalName: string;\n  size: number;\n  type: string;\n  url: string;\n  uploadedAt: string;\n}\n\nexport default function MediaLibraryPage() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState<MediaFile | null>(null);\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const { data: mediaFiles, isLoading } = useQuery<MediaFile[]>({\n    queryKey: [\"/api/media-library\", searchQuery],\n  });\n\n  const uploadMutation = useMutation({\n    mutationFn: async (file: File) => {\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در آپلود فایل');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/media-library\"] });\n      setUploadDialogOpen(false);\n      toast({\n        title: \"موفقیت\",\n        description: \"فایل با موفقیت آپلود شد\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"خطا\",\n        description: \"خطا در آپلود فایل\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/media-library/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف فایل');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/media-library\"] });\n      setSelectedFile(null);\n      toast({\n        title: \"موفقیت\",\n        description: \"فایل حذف شد\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"خطا\",\n        description: \"خطا در حذف فایل\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 بایت';\n    const k = 1024;\n    const sizes = ['بایت', 'کیلوبایت', 'مگابایت', 'گیگابایت'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getFileIcon = (type: string) => {\n    if (type.startsWith('image/')) return <Image className=\"h-5 w-5\" />;\n    if (type.startsWith('video/')) return <Video className=\"h-5 w-5\" />;\n    return <File className=\"h-5 w-5\" />;\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      uploadMutation.mutate(file);\n    }\n  };\n\n  const copyUrl = (url: string) => {\n    navigator.clipboard.writeText(url);\n    toast({\n      title: \"کپی شد\",\n      description: \"آدرس فایل کپی شد\",\n    });\n  };\n\n  // Sample data for demonstration\n  const sampleMediaFiles: MediaFile[] = [\n    {\n      id: 1,\n      filename: \"logo-pistach.png\",\n      originalName: \"لوگو پیستاط.png\",\n      size: 45632,\n      type: \"image/png\",\n      url: \"/uploads/logo-pistach.png\",\n      uploadedAt: \"2024-01-15T10:30:00Z\"\n    },\n    {\n      id: 2,\n      filename: \"course-agriculture.jpg\",\n      originalName: \"دوره کشاورزی.jpg\",\n      size: 234567,\n      type: \"image/jpeg\",\n      url: \"/uploads/course-agriculture.jpg\",\n      uploadedAt: \"2024-01-14T15:45:00Z\"\n    },\n    {\n      id: 3,\n      filename: \"video-irrigation.mp4\",\n      originalName: \"آموزش آبیاری.mp4\",\n      size: 15678901,\n      type: \"video/mp4\",\n      url: \"/uploads/video-irrigation.mp4\",\n      uploadedAt: \"2024-01-13T09:20:00Z\"\n    }\n  ];\n\n  const displayFiles = (mediaFiles as MediaFile[]) || sampleMediaFiles;\n  const filteredFiles = displayFiles.filter((file: MediaFile) =>\n    file.originalName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    file.filename.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-sm border\">\n          {/* Header */}\n          <div className=\"border-b p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">کتابخانه رسانه</h1>\n                <p className=\"text-gray-600 mt-1\">مدیریت تصاویر، ویدیوها و فایل‌ها</p>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                <div className=\"relative\">\n                  <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"جستجو در فایل‌ها...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pr-10 pl-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <label className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 cursor-pointer\">\n                  <Upload className=\"h-4 w-4\" />\n                  آپلود فایل\n                  <input\n                    type=\"file\"\n                    accept=\"image/*,video/*,.pdf,.doc,.docx\"\n                    onChange={handleFileUpload}\n                    className=\"hidden\"\n                  />\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex\">\n            {/* File Grid */}\n            <div className=\"flex-1 p-6\">\n              {isLoading ? (\n                <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n                  {Array.from({ length: 12 }).map((_, i) => (\n                    <div key={i} className=\"aspect-square bg-gray-200 rounded-lg animate-pulse\"></div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n                  {filteredFiles.map((file: MediaFile) => (\n                    <div\n                      key={file.id}\n                      className={`group relative border rounded-lg overflow-hidden cursor-pointer transition-all hover:shadow-md ${\n                        selectedFile?.id === file.id ? 'ring-2 ring-blue-500' : ''\n                      }`}\n                      onClick={() => setSelectedFile(file)}\n                    >\n                      <div className=\"aspect-square bg-gray-100 flex items-center justify-center\">\n                        {file.type.startsWith('image/') ? (\n                          <img\n                            src={file.url}\n                            alt={file.originalName}\n                            className=\"w-full h-full object-cover\"\n                          />\n                        ) : (\n                          <div className=\"text-gray-400\">\n                            {getFileIcon(file.type)}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"p-2\">\n                        <p className=\"text-xs text-gray-900 truncate font-medium\">\n                          {file.originalName}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">\n                          {formatFileSize(file.size)}\n                        </p>\n                      </div>\n                      \n                      {/* Action buttons */}\n                      <div className=\"absolute top-2 left-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                        <div className=\"flex gap-1\">\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              copyUrl(file.url);\n                            }}\n                            className=\"p-1 bg-black/50 text-white rounded hover:bg-black/70\"\n                          >\n                            <Copy className=\"h-3 w-3\" />\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              deleteMutation.mutate(file.id);\n                            }}\n                            className=\"p-1 bg-red-500/80 text-white rounded hover:bg-red-600\"\n                          >\n                            <Trash2 className=\"h-3 w-3\" />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Sidebar */}\n            {selectedFile && (\n              <div className=\"w-80 border-r bg-gray-50 p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-semibold\">جزئیات فایل</h3>\n                  <button\n                    onClick={() => setSelectedFile(null)}\n                    className=\"p-1 hover:bg-gray-200 rounded\"\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </button>\n                </div>\n\n                <div className=\"space-y-4\">\n                  {/* Preview */}\n                  <div className=\"aspect-square bg-white rounded-lg border p-4 flex items-center justify-center\">\n                    {selectedFile.type.startsWith('image/') ? (\n                      <img\n                        src={selectedFile.url}\n                        alt={selectedFile.originalName}\n                        className=\"max-w-full max-h-full object-contain\"\n                      />\n                    ) : (\n                      <div className=\"text-gray-400\">\n                        {getFileIcon(selectedFile.type)}\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Details */}\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-700\">نام فایل</label>\n                      <p className=\"text-sm text-gray-900 mt-1\">{selectedFile.originalName}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-700\">نوع فایل</label>\n                      <p className=\"text-sm text-gray-900 mt-1\">{selectedFile.type}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-700\">حجم</label>\n                      <p className=\"text-sm text-gray-900 mt-1\">{formatFileSize(selectedFile.size)}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-700\">آدرس فایل</label>\n                      <div className=\"flex items-center gap-2 mt-1\">\n                        <input\n                          type=\"text\"\n                          value={selectedFile.url}\n                          readOnly\n                          className=\"flex-1 text-sm bg-gray-100 px-2 py-1 rounded border\"\n                        />\n                        <button\n                          onClick={() => copyUrl(selectedFile.url)}\n                          className=\"p-1 text-gray-600 hover:text-gray-800\"\n                        >\n                          <Copy className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Actions */}\n                  <div className=\"flex gap-2 pt-4 border-t\">\n                    <button\n                      onClick={() => copyUrl(selectedFile.url)}\n                      className=\"flex-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n                    >\n                      کپی آدرس\n                    </button>\n                    <button\n                      onClick={() => deleteMutation.mutate(selectedFile.id)}\n                      className=\"px-3 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\n                    >\n                      حذف\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":13148},"client/src/pages/media-player.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useParams } from \"wouter\";\nimport MediaPlayer from \"@/components/media/MediaPlayer\";\nimport { type MediaContent, type Module } from \"@shared/schema\";\n\n\nexport default function MediaPlayerPage() {\n  const { id } = useParams<{ id: string }>();\n  const mediaId = parseInt(id);\n  \n  const { data: media, isLoading: isLoadingMedia, error: mediaError } = useQuery<MediaContent>({ \n    queryKey: ['/api/media', mediaId],\n    enabled: !isNaN(mediaId)\n  });\n  \n  const { data: modules = [], isLoading: isLoadingModules } = useQuery<Module[]>({ \n    queryKey: ['/api/courses/1/modules'], // Use proper course ID when available\n    enabled: !isNaN(mediaId)\n  });\n  \n  if (isNaN(mediaId)) {\n    return (\n      <div className=\"text-center py-10\">\n        <p className=\"text-status-error font-medium\">Invalid media ID</p>\n      </div>\n    );\n  }\n  \n  if (isLoadingMedia || isLoadingModules) {\n    return (\n      <div className=\"mb-10\">\n        <div className=\"mb-4\">\n          <Skeleton className=\"w-1/3 h-8 mb-2\" />\n          <Skeleton className=\"w-1/2 h-4\" />\n        </div>\n        \n        <div className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\n          <Skeleton className=\"w-full aspect-video\" />\n          \n          <div className=\"p-4\">\n            <Skeleton className=\"w-1/2 h-6 mb-1\" />\n            <Skeleton className=\"w-full h-4 mb-4\" />\n            \n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between mb-4\">\n              <div className=\"flex items-center mb-2 sm:mb-0\">\n                <Skeleton className=\"w-10 h-10 rounded-full\" />\n                <div className=\"ml-3\">\n                  <Skeleton className=\"w-32 h-4 mb-1\" />\n                  <Skeleton className=\"w-24 h-3\" />\n                </div>\n              </div>\n              <div className=\"flex space-x-2\">\n                <Skeleton className=\"w-20 h-8 rounded\" />\n                <Skeleton className=\"w-20 h-8 rounded\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (mediaError || !media) {\n    return (\n      <div className=\"text-center py-10\">\n        <p className=\"text-status-error font-medium\">Error loading media content</p>\n        <p className=\"text-neutral-400 mt-2\">Please try again later</p>\n      </div>\n    );\n  }\n  \n  // Transform modules to match the expected interface\n  const moduleItems = modules.map(module => ({\n    id: module.id,\n    title: module.title,\n    duration: module.duration || '',\n    isLocked: module.isLocked,\n    isActive: module.id === 1 // Assuming first module is active\n  }));\n  \n  return (\n    <MediaPlayer \n      media={media} \n      modules={moduleItems}\n    />\n  );\n}\n","size_bytes":2743},"client/src/pages/not-found.tsx":{"content":"import { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\" dir=\"rtl\">\n      <div className=\"w-full max-w-md mx-4 bg-white rounded-lg shadow-sm border\">\n        <div className=\"p-6\">\n          <div className=\"flex mb-4 gap-2 items-center\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">۴۰۴ - صفحه پیدا نشد</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            صفحه‌ای که دنبال آن می‌گردید وجود ندارد.\n          </p>\n          \n          <button \n            onClick={() => window.history.back()} \n            className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors\"\n          >\n            بازگشت\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":986},"client/src/pages/profile-simple.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useState, useEffect } from \"react\";\nimport { LoginModal } from \"@/components/LoginModal\";\nimport { \n  User, \n  Mail, \n  Calendar,\n  Settings,\n  LogOut,\n  BookOpen,\n  Download,\n  Eye,\n  Award,\n  Heart,\n  Bell,\n  FileText,\n  ArrowRight\n} from \"lucide-react\";\n\ninterface User {\n  id?: number;\n  username?: string;\n  email?: string;\n  name?: string;\n  role?: string;\n  progress?: number;\n  membershipType?: string;\n}\n\nexport default function Profile() {\n  const { user, isLoading, isAuthenticated } = useAuth();\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  \n  // Check if user is admin and redirect to admin panel\n  useEffect(() => {\n    if (isAuthenticated && user?.role === 'admin') {\n      window.parent.postMessage({ type: 'SWITCH_TAB', tab: 'admin' }, '*');\n    }\n  }, [isAuthenticated, user]);\n  \n  // If not authenticated, show login modal\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      setShowLoginModal(true);\n    }\n  }, [isLoading, isAuthenticated]);\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      });\n      window.parent.postMessage({ type: 'SWITCH_TAB', tab: 'home' }, '*');\n      window.location.reload();\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"p-4 pb-24\" dir=\"rtl\">\n        <div className=\"animate-pulse\">\n          <div className=\"w-32 h-32 bg-gray-200 rounded-full mx-auto mb-4\"></div>\n          <div className=\"w-48 h-6 bg-gray-200 rounded mx-auto mb-2\"></div>\n          <div className=\"w-32 h-4 bg-gray-200 rounded mx-auto\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show login modal if not authenticated\n  if (!isAuthenticated) {\n    return (\n      <div className=\"p-4 pb-24\" dir=\"rtl\">\n        <div className=\"text-center py-12\">\n          <User className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-bold text-gray-900 mb-2\">پروفایل کاربری</h2>\n          <p className=\"text-gray-600 mb-4\">برای مشاهده پروفایل خود وارد شوید</p>\n        </div>\n        \n        {showLoginModal && (\n          <LoginModal \n            isOpen={showLoginModal} \n            onClose={() => setShowLoginModal(false)} \n            message=\"برای مشاهده پروفایل خود وارد شوید\"\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 pb-24\" dir=\"rtl\">\n      <button \n        onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\n      >\n        <ArrowRight className=\"h-5 w-5\" />\n        بازگشت\n      </button>\n      \n      {/* Profile Header */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\n        <div className=\"text-center\">\n          <div className=\"w-24 h-24 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <User className=\"w-12 h-12 text-blue-600\" />\n          </div>\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            {user?.name || user?.username || \"کاربر\"}\n          </h1>\n          <p className=\"text-gray-600 mb-4\">{user?.email || \"user@example.com\"}</p>\n          <div className=\"inline-flex items-center px-3 py-1 bg-green-100 text-green-800 text-sm rounded-full\">\n            <span>فعال</span>\n          </div>\n        </div>\n\n        <div className=\"mt-6 pt-6 border-t\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">12</div>\n              <div className=\"text-sm text-gray-600\">دوره تکمیل شده</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">45</div>\n              <div className=\"text-sm text-gray-600\">ساعت یادگیری</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-6 flex gap-3\">\n          <button className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\">\n            <Settings className=\"w-4 h-4 inline ml-2\" />\n            ویرایش پروفایل\n          </button>\n          <button \n            onClick={handleLogout}\n            className=\"flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-200 transition-colors\"\n          >\n            <LogOut className=\"w-4 h-4 inline ml-2\" />\n            خروج\n          </button>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-white p-4 rounded-lg border text-center\">\n          <BookOpen className=\"w-8 h-8 text-blue-600 mx-auto mb-2\" />\n          <div className=\"text-xl font-bold text-gray-900\">8</div>\n          <div className=\"text-sm text-gray-600\">دوره‌ها</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg border text-center\">\n          <Eye className=\"w-8 h-8 text-green-600 mx-auto mb-2\" />\n          <div className=\"text-xl font-bold text-gray-900\">156</div>\n          <div className=\"text-sm text-gray-600\">بازدید</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg border text-center\">\n          <Download className=\"w-8 h-8 text-purple-600 mx-auto mb-2\" />\n          <div className=\"text-xl font-bold text-gray-900\">23</div>\n          <div className=\"text-sm text-gray-600\">دانلود</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg border text-center\">\n          <Award className=\"w-8 h-8 text-yellow-600 mx-auto mb-2\" />\n          <div className=\"text-xl font-bold text-gray-900\">5</div>\n          <div className=\"text-sm text-gray-600\">جایزه</div>\n        </div>\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">فعالیت‌های اخیر</h2>\n        <div className=\"space-y-4\">\n          {[\n            { action: \"تکمیل دوره\", title: \"آموزش React\", time: \"2 ساعت پیش\" },\n            { action: \"دانلود فایل\", title: \"راهنمای پروژه\", time: \"5 ساعت پیش\" },\n            { action: \"شرکت در وبینار\", title: \"طراحی UI/UX\", time: \"1 روز پیش\" }\n          ].map((activity, index) => (\n            <div key={index} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg\">\n              <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm text-gray-900\">\n                  <span className=\"font-medium\">{activity.action}:</span> {activity.title}\n                </p>\n                <p className=\"text-xs text-gray-500\">{activity.time}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* User Profile Sections */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n        {/* Favorites */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <Heart className=\"w-5 h-5 text-red-500\" />\n            <h2 className=\"text-lg font-semibold text-gray-900\">علاقه‌مندی‌ها</h2>\n          </div>\n          <div className=\"space-y-3\">\n            {[\n              { title: \"دوره React پیشرفته\", type: \"course\" },\n              { title: \"وبینار طراحی UI\", type: \"webinar\" },\n              { title: \"مقاله آموزش Node.js\", type: \"article\" }\n            ].map((item, index) => (\n              <div key={index} className=\"flex items-center gap-3 p-2 bg-gray-50 rounded-lg\">\n                <div className=\"w-2 h-2 bg-red-500 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">{item.title}</p>\n                  <p className=\"text-xs text-gray-500\">{item.type}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Notifications */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <Bell className=\"w-5 h-5 text-blue-500\" />\n            <h2 className=\"text-lg font-semibold text-gray-900\">اعلانات</h2>\n          </div>\n          <div className=\"space-y-3\">\n            {[\n              { title: \"دوره جدید اضافه شد\", time: \"2 ساعت پیش\" },\n              { title: \"وبینار فردا برگزار می‌شود\", time: \"5 ساعت پیش\" },\n              { title: \"آپدیت سیستم\", time: \"1 روز پیش\" }\n            ].map((notification, index) => (\n              <div key={index} className=\"flex items-center gap-3 p-2 bg-gray-50 rounded-lg\">\n                <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">{notification.title}</p>\n                  <p className=\"text-xs text-gray-500\">{notification.time}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Downloads */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <Download className=\"w-5 h-5 text-green-500\" />\n            <h2 className=\"text-lg font-semibold text-gray-900\">دانلودها</h2>\n          </div>\n          <div className=\"space-y-3\">\n            {[\n              { title: \"راهنمای پروژه.pdf\", size: \"2.5 MB\", date: \"امروز\" },\n              { title: \"کتاب آموزش React.pdf\", size: \"15 MB\", date: \"دیروز\" },\n              { title: \"فایل تمرین.zip\", size: \"800 KB\", date: \"3 روز پیش\" }\n            ].map((download, index) => (\n              <div key={index} className=\"flex items-center gap-3 p-2 bg-gray-50 rounded-lg\">\n                <FileText className=\"w-4 h-4 text-green-500\" />\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">{download.title}</p>\n                  <p className=\"text-xs text-gray-500\">{download.size} • {download.date}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":10660},"client/src/pages/profile.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n// کامپوننت‌های ساده\nimport { \n  User, \n  Mail, \n  Calendar,\n  Settings,\n  LogOut,\n  BookOpen,\n  Download,\n  Eye,\n  Award\n} from \"lucide-react\";\n\nexport default function Profile() {\n  const { data: user, isLoading } = useQuery({\n    queryKey: [\"/api/user/1\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-6 py-8\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"mt-4 text-muted-foreground\">در حال بارگذاری پروفایل...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-6 py-8\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-right mb-2\">پروفایل کاربری</h1>\n        <p className=\"text-muted-foreground text-right\">\n          مدیریت اطلاعات شخصی و تنظیمات حساب کاربری\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Profile Info */}\n        <div className=\"lg:col-span-1\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <div className=\"w-24 h-24 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n                <User className=\"h-12 w-12 text-white\" />\n              </div>\n              <CardTitle className=\"text-xl\">{user?.username || 'کاربر'}</CardTitle>\n              <CardDescription>مدیر سیستم</CardDescription>\n              <Badge variant=\"default\" className=\"w-fit mx-auto\">\n                <Award className=\"h-3 w-3 ml-1\" />\n                کاربر فعال\n              </Badge>\n            </CardHeader>\n            \n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center gap-3 text-sm\">\n                <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                <span>admin@pistach.ir</span>\n              </div>\n              <div className=\"flex items-center gap-3 text-sm\">\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                <span>عضو از: ۱۴۰۳/۰۱/۰۱</span>\n              </div>\n              \n              <Separator />\n              \n              <div className=\"space-y-2\">\n                <Button variant=\"outline\" className=\"w-full justify-start\">\n                  <Settings className=\"h-4 w-4 ml-2\" />\n                  تنظیمات حساب\n                </Button>\n                <Button variant=\"outline\" className=\"w-full justify-start text-red-600 hover:text-red-700\">\n                  <LogOut className=\"h-4 w-4 ml-2\" />\n                  خروج از حساب\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Activity Stats */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Stats Cards */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <BookOpen className=\"h-8 w-8 text-blue-500 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold\">۸</div>\n                <div className=\"text-sm text-muted-foreground\">اسناد مطالعه شده</div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <Download className=\"h-8 w-8 text-green-500 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold\">۱۵</div>\n                <div className=\"text-sm text-muted-foreground\">فایل دانلود شده</div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <Eye className=\"h-8 w-8 text-purple-500 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold\">۲۳</div>\n                <div className=\"text-sm text-muted-foreground\">ساعت مطالعه</div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <Award className=\"h-8 w-8 text-orange-500 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold\">۵</div>\n                <div className=\"text-sm text-muted-foreground\">کارگاه تکمیل شده</div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Recent Activity */}\n          <Card>\n            <CardHeader>\n              <CardTitle>فعالیت‌های اخیر</CardTitle>\n              <CardDescription>\n                آخرین فعالیت‌های شما در پلتفرم\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-4 p-3 border rounded-lg\">\n                  <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                    <BookOpen className=\"h-5 w-5 text-blue-600\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <p className=\"font-medium\">مطالعه راهنمای کشت گلخانه‌ای</p>\n                    <p className=\"text-sm text-muted-foreground\">۲ ساعت پیش</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-4 p-3 border rounded-lg\">\n                  <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                    <Download className=\"h-5 w-5 text-green-600\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <p className=\"font-medium\">دانلود گزارش آبیاری قطره‌ای</p>\n                    <p className=\"text-sm text-muted-foreground\">۱ روز پیش</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-4 p-3 border rounded-lg\">\n                  <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center\">\n                    <User className=\"h-5 w-5 text-purple-600\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <p className=\"font-medium\">شرکت در کارگاه کود آلی</p>\n                    <p className=\"text-sm text-muted-foreground\">۳ روز پیش</p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Achievements */}\n          <Card>\n            <CardHeader>\n              <CardTitle>دستاوردها</CardTitle>\n              <CardDescription>\n                نشان‌ها و مدارک کسب شده\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                <div className=\"text-center p-4 border rounded-lg\">\n                  <div className=\"w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                    <Award className=\"h-6 w-6 text-yellow-600\" />\n                  </div>\n                  <p className=\"font-medium\">خواننده فعال</p>\n                  <p className=\"text-xs text-muted-foreground\">۱۰ سند مطالعه شده</p>\n                </div>\n                \n                <div className=\"text-center p-4 border rounded-lg\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                    <BookOpen className=\"h-6 w-6 text-blue-600\" />\n                  </div>\n                  <p className=\"font-medium\">علاقه‌مند به یادگیری</p>\n                  <p className=\"text-xs text-muted-foreground\">۵ کارگاه تکمیل</p>\n                </div>\n                \n                <div className=\"text-center p-4 border rounded-lg opacity-50\">\n                  <div className=\"w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                    <Award className=\"h-6 w-6 text-gray-600\" />\n                  </div>\n                  <p className=\"font-medium\">کارشناس</p>\n                  <p className=\"text-xs text-muted-foreground\">۲۰ کارگاه تکمیل</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8669},"client/src/pages/projects-simple.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { type Project } from \"@shared/schema\";\nimport ProjectCard from \"@/components/project/ProjectCard\";\nimport { AuthGuard } from \"@/components/AuthGuard\";\n\nexport default function Projects() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"all\");\n  \n  interface Project {\n    id: number;\n    title: string;\n    description?: string;\n    type?: string;\n    dueDate?: string;\n    thumbnailUrl?: string;\n    pages?: number;\n    isLocked?: boolean;\n  }\n\n  const { data: projects = [], isLoading } = useQuery<Project[]>({\n    queryKey: ['/api/projects'],\n  });\n\n  const filteredProjects = projects.filter((project: Project) => {\n    const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (project.description || '').toLowerCase().includes(searchTerm.toLowerCase());\n    \n    if (activeTab === \"all\") return matchesSearch;\n    return matchesSearch && project.type === activeTab;\n  });\n\n  const webinars = filteredProjects.filter((p: Project) => p.type === \"webinar\");\n\n  return (\n    <AuthGuard>\n      <div className=\"p-4 pb-24\" dir=\"rtl\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">پروژه‌ها و وبینارها</h1>\n        \n        {/* Search */}\n        <div className=\"mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"جستجو در پروژه‌ها...\"\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n\n        {/* Tabs */}\n        <div className=\"flex space-x-1 space-x-reverse bg-gray-100 p-1 rounded-lg mb-4\">\n          <button\n            onClick={() => setActiveTab(\"all\")}\n            className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n              activeTab === \"all\" \n                ? \"bg-white text-blue-600 shadow-sm\" \n                : \"text-gray-500 hover:text-gray-700\"\n            }`}\n          >\n            همه\n          </button>\n          <button\n            onClick={() => setActiveTab(\"project\")}\n            className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n              activeTab === \"project\" \n                ? \"bg-white text-blue-600 shadow-sm\" \n                : \"text-gray-500 hover:text-gray-700\"\n            }`}\n          >\n            پروژه‌ها\n          </button>\n          <button\n            onClick={() => setActiveTab(\"webinar\")}\n            className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n              activeTab === \"webinar\" \n                ? \"bg-white text-blue-600 shadow-sm\" \n                : \"text-gray-500 hover:text-gray-700\"\n            }`}\n          >\n            وبینارها\n          </button>\n          <button\n            onClick={() => setActiveTab(\"magazine\")}\n            className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n              activeTab === \"magazine\" \n                ? \"bg-white text-blue-600 shadow-sm\" \n                : \"text-gray-500 hover:text-gray-700\"\n            }`}\n          >\n            مجله‌ها\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8\">\n        {isLoading ? (\n          Array(3).fill(0).map((_, i) => (\n            <div key={i} className=\"bg-white rounded-xl shadow-sm overflow-hidden animate-pulse\">\n              <div className=\"w-full h-36 bg-gray-200\"></div>\n              <div className=\"p-4\">\n                <div className=\"w-3/4 h-6 bg-gray-200 rounded mb-2\"></div>\n                <div className=\"w-full h-4 bg-gray-200 rounded mb-3\"></div>\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"w-1/3 h-4 bg-gray-200 rounded\"></div>\n                  <div className=\"w-20 h-8 bg-gray-200 rounded\"></div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : filteredProjects.length > 0 ? (\n          filteredProjects.map((project: Project) => (\n            <ProjectCard\n              key={project.id}\n              id={project.id}\n              title={project.title}\n              description={project.description || ''}\n              thumbnailUrl={project.thumbnailUrl || ''}\n              type={project.type as \"project\" | \"magazine\"}\n              dueDate={project.dueDate || ''}\n              pages={project.pages || 0}\n              isLocked={project.isLocked || false}\n            />\n          ))\n        ) : (\n          <div className=\"col-span-full text-center py-8\">\n            <p className=\"text-neutral-400\">هیچ پروژه‌ای با معیارهای شما یافت نشد.</p>\n            <button \n              className=\"text-blue-600 hover:underline mt-2\"\n              onClick={() => setSearchTerm(\"\")}\n            >\n              پاک کردن جستجو\n            </button>\n          </div>\n        )}\n      </div>\n      </div>\n    </AuthGuard>\n  );\n}","size_bytes":5277},"client/src/pages/projects.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { type Project } from \"@shared/schema\";\nimport ProjectCard from \"@/components/project/ProjectCard\";\n// کامپوننت‌های ساده بدون UI library\n\nexport default function Projects() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  \n  const { data: projects = [], isLoading } = useQuery<Project[]>({ \n    queryKey: ['/api/projects'] \n  });\n  \n  // Filter only webinars (projects with type \"project\")\n  const webinars = projects.filter(project => {\n    const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) || \n                        project.description.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesSearch && isWebinar;\n  });\n  \n  return (\n    <div>\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold text-neutral-500 mb-2\">وبینارهای آموزشی پیستاط</h2>\n        <p className=\"text-neutral-300\">مشاهده تمام وبینارهای آموزشی موجود</p>\n      </div>\n      \n      <div className=\"mb-6\">\n        <div className=\"relative mb-6\">\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none text-neutral-300\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n          <Input\n            type=\"text\"\n            placeholder=\"جستجوی وبینارها...\"\n            className=\"pl-10 pr-4 py-2\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8\">\n        {isLoading ? (\n          Array(3).fill(0).map((_, i) => (\n            <div key={i} className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\n              <Skeleton className=\"w-full h-36\" />\n              <div className=\"p-4\">\n                <Skeleton className=\"w-3/4 h-6 mb-2\" />\n                <Skeleton className=\"w-full h-4 mb-3\" />\n                <div className=\"flex justify-between items-center\">\n                  <Skeleton className=\"w-1/3 h-4\" />\n                  <Skeleton className=\"w-20 h-8 rounded\" />\n                </div>\n              </div>\n            </div>\n          ))\n        ) : webinars.length > 0 ? (\n          webinars.map(project => (\n            <ProjectCard\n              key={project.id}\n              id={project.id}\n              title={project.title}\n              description={project.description}\n              thumbnailUrl={project.thumbnailUrl || ''}\n              type={project.type as \"project\" | \"magazine\"}\n              dueDate={project.dueDate}\n              pages={project.pages}\n              isLocked={project.isLocked}\n            />\n          ))\n        ) : (\n          <div className=\"col-span-full text-center py-8\">\n            <p className=\"text-neutral-400\">هیچ وبیناری با معیارهای شما یافت نشد.</p>\n            <button \n              className=\"text-primary hover:underline mt-2\"\n              onClick={() => setSearchTerm(\"\")}\n            >\n              پاک کردن جستجو\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":3494},"client/src/pages/protected-content.tsx":{"content":"import { useState } from 'react';\nimport ContentProtection, { useDownloadControl } from '../components/protection/ContentProtection';\nimport { Download, Eye, Copy, Printer, Shield, ArrowRight, FileText, Video, BookOpen } from 'lucide-react';\n\n// نمونه محتوای آموزشی\nconst sampleContent = {\n  course: {\n    id: 1,\n    title: 'آموزش کاشت گوجه فرنگی',\n    description: 'راهنمای کامل کاشت و پرورش گوجه فرنگی',\n    allowDownload: false,\n    allowScreenshot: false,\n    allowCopy: true,\n    allowPrint: false,\n    watermarkText: 'پیستاط - آموزش کشاورزی',\n    protectionLevel: 'strict' as 'none' | 'basic' | 'strict'\n  },\n  document: {\n    id: 1,\n    title: 'کتاب راهنمای کاشت',\n    fileName: 'planting-guide.pdf',\n    allowDownload: true,\n    allowScreenshot: true,\n    allowCopy: false,\n    allowPrint: true,\n    watermarkText: 'کپی رایت محفوظ - پیستاط',\n    protectionLevel: 'basic' as 'none' | 'basic' | 'strict'\n  },\n  workshop: {\n    id: 1,\n    title: 'کارگاه عملی کاشت',\n    videoUrl: 'sample-video.mp4',\n    allowDownload: false,\n    allowScreenshot: true,\n    allowCopy: true,\n    allowPrint: false,\n    watermarkText: '',\n    protectionLevel: 'none' as 'none' | 'basic' | 'strict'\n  }\n};\n\nexport default function ProtectedContentDemo() {\n  const [selectedContent, setSelectedContent] = useState<'course' | 'document' | 'workshop'>('course');\n  \n  const currentContent = sampleContent[selectedContent];\n  const { downloadFile } = useDownloadControl(currentContent.allowDownload);\n\n  const handleDownload = () => {\n    const fileName = selectedContent === 'course' ? 'course-materials.zip' :\n                    selectedContent === 'document' ? 'planting-guide.pdf' :\n                    'workshop-video.mp4';\n    \n    downloadFile(`/downloads/${fileName}`, fileName);\n  };\n\n  const getProtectionLevelText = (level: string) => {\n    switch(level) {\n      case 'none': return 'بدون حفاظت';\n      case 'basic': return 'حفاظت پایه';\n      case 'strict': return 'حفاظت سخت';\n      default: return 'نامشخص';\n    }\n  };\n\n  const getProtectionLevelColor = (level: string) => {\n    switch(level) {\n      case 'none': return 'bg-gray-100 text-gray-800';\n      case 'basic': return 'bg-yellow-100 text-yellow-800';\n      case 'strict': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\" dir=\"rtl\">\n      <div className=\"max-w-6xl mx-auto space-y-6\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <Shield className=\"h-8 w-8 text-blue-600\" />\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">نمایش محتوای محافظت‌شده</h1>\n              <p className=\"text-gray-600\">مثال از سیستم کنترل دسترسی و حفاظت محتوا</p>\n            </div>\n          </div>\n\n          {/* Content Type Selector */}\n          <div className=\"flex gap-4\">\n            <button\n              onClick={() => setSelectedContent('course')}\n              className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n                selectedContent === 'course' \n                  ? 'bg-blue-100 border-blue-300 text-blue-800' \n                  : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\n              }`}\n            >\n              <BookOpen className=\"h-4 w-4\" />\n              دوره آموزشی\n            </button>\n            <button\n              onClick={() => setSelectedContent('document')}\n              className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n                selectedContent === 'document' \n                  ? 'bg-blue-100 border-blue-300 text-blue-800' \n                  : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\n              }`}\n            >\n              <FileText className=\"h-4 w-4\" />\n              سند آموزشی\n            </button>\n            <button\n              onClick={() => setSelectedContent('workshop')}\n              className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n                selectedContent === 'workshop' \n                  ? 'bg-blue-100 border-blue-300 text-blue-800' \n                  : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\n              }`}\n            >\n              <Video className=\"h-4 w-4\" />\n              کارگاه عملی\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Protection Settings Info */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <Shield className=\"h-5 w-5 text-gray-600\" />\n              <h3 className=\"font-semibold text-gray-900\">تنظیمات حفاظت</h3>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-700\">سطح حفاظت:</span>\n                <span className={`px-2 py-1 rounded text-xs font-medium ${getProtectionLevelColor(currentContent.protectionLevel)}`}>\n                  {getProtectionLevelText(currentContent.protectionLevel)}\n                </span>\n              </div>\n\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Download className=\"h-4 w-4 text-gray-500\" />\n                    <span className=\"text-sm text-gray-700\">دانلود</span>\n                  </div>\n                  <div className={`w-3 h-3 rounded-full ${currentContent.allowDownload ? 'bg-green-500' : 'bg-red-500'}`}></div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Eye className=\"h-4 w-4 text-gray-500\" />\n                    <span className=\"text-sm text-gray-700\">اسکرین‌شات</span>\n                  </div>\n                  <div className={`w-3 h-3 rounded-full ${currentContent.allowScreenshot ? 'bg-green-500' : 'bg-red-500'}`}></div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Copy className=\"h-4 w-4 text-gray-500\" />\n                    <span className=\"text-sm text-gray-700\">کپی متن</span>\n                  </div>\n                  <div className={`w-3 h-3 rounded-full ${currentContent.allowCopy ? 'bg-green-500' : 'bg-red-500'}`}></div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Printer className=\"h-4 w-4 text-gray-500\" />\n                    <span className=\"text-sm text-gray-700\">چاپ</span>\n                  </div>\n                  <div className={`w-3 h-3 rounded-full ${currentContent.allowPrint ? 'bg-green-500' : 'bg-red-500'}`}></div>\n                </div>\n              </div>\n\n              {currentContent.watermarkText && (\n                <div className=\"pt-3 border-t\">\n                  <span className=\"text-sm text-gray-700\">واتر مارک:</span>\n                  <p className=\"text-xs text-gray-500 mt-1\">{currentContent.watermarkText}</p>\n                </div>\n              )}\n            </div>\n\n            <button\n              onClick={handleDownload}\n              disabled={!currentContent.allowDownload}\n              className={`w-full mt-4 px-4 py-2 rounded-lg flex items-center justify-center gap-2 transition-colors ${\n                currentContent.allowDownload\n                  ? 'bg-blue-600 text-white hover:bg-blue-700'\n                  : 'bg-gray-200 text-gray-400 cursor-not-allowed'\n              }`}\n            >\n              <Download className=\"h-4 w-4\" />\n              دانلود محتوا\n            </button>\n          </div>\n\n          {/* Protected Content */}\n          <div className=\"lg:col-span-2\">\n            <ContentProtection\n              allowScreenshot={currentContent.allowScreenshot}\n              allowCopy={currentContent.allowCopy}\n              allowPrint={currentContent.allowPrint}\n              watermarkText={currentContent.watermarkText}\n              protectionLevel={currentContent.protectionLevel}\n            >\n              <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n                <div className=\"p-6 border-b\">\n                  <h2 className=\"text-xl font-semibold text-gray-900\">{currentContent.title}</h2>\n                  {selectedContent === 'course' && (\n                    <p className=\"text-gray-600 mt-1\">{'description' in currentContent ? currentContent.description : ''}</p>\n                  )}\n                </div>\n\n                <div className=\"p-6\">\n                  {selectedContent === 'course' && (\n                    <div className=\"space-y-4\">\n                      <h3 className=\"font-medium text-gray-900\">محتوای دوره:</h3>\n                      <div className=\"prose max-w-none text-gray-700\">\n                        <p>در این دوره آموزشی شما با مراحل کامل کاشت گوجه فرنگی آشنا خواهید شد:</p>\n                        <ul className=\"list-disc mr-5 space-y-1\">\n                          <li>انتخاب بذر مناسب</li>\n                          <li>آماده‌سازی خاک</li>\n                          <li>زمان‌بندی کاشت</li>\n                          <li>آبیاری صحیح</li>\n                          <li>کنترل آفات</li>\n                          <li>برداشت محصول</li>\n                        </ul>\n                        <p>این محتوا تحت حفاظت کپی رایت قرار دارد و هرگونه کپی برداری غیرمجاز پیگرد قانونی دارد.</p>\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedContent === 'document' && (\n                    <div className=\"space-y-4\">\n                      <div className=\"bg-gray-100 p-4 rounded-lg\">\n                        <div className=\"flex items-center gap-3\">\n                          <FileText className=\"h-12 w-12 text-blue-600\" />\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">کتاب راهنمای کاشت</h4>\n                            <p className=\"text-sm text-gray-600\">PDF - 150 صفحه</p>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"prose max-w-none text-gray-700\">\n                        <p>این کتاب راهنمای جامع شامل:</p>\n                        <ul className=\"list-disc mr-5 space-y-1\">\n                          <li>اصول پایه کشاورزی</li>\n                          <li>تکنیک‌های کاشت مدرن</li>\n                          <li>مدیریت آب و خاک</li>\n                          <li>کنترل بیولوژیکی آفات</li>\n                        </ul>\n                        <p className=\"text-sm text-gray-500 mt-4\">\n                          محتوای این سند محفوظ است و تحت قوانین کپی رایت قرار دارد.\n                        </p>\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedContent === 'workshop' && (\n                    <div className=\"space-y-4\">\n                      <div className=\"bg-gray-100 p-4 rounded-lg\">\n                        <div className=\"flex items-center gap-3\">\n                          <Video className=\"h-12 w-12 text-green-600\" />\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">کارگاه عملی کاشت</h4>\n                            <p className=\"text-sm text-gray-600\">ویدیو آموزشی - 45 دقیقه</p>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"prose max-w-none text-gray-700\">\n                        <p>در این کارگاه عملی شاهد خواهید بود:</p>\n                        <ul className=\"list-disc mr-5 space-y-1\">\n                          <li>نمایش عملی کاشت بذر</li>\n                          <li>تکنیک‌های آبیاری</li>\n                          <li>شناسایی مراحل رشد</li>\n                          <li>حل مشکلات رایج</li>\n                        </ul>\n                        <p className=\"text-sm text-gray-500 mt-4\">\n                          این ویدیو جهت استفاده شخصی در اختیار شما قرار می‌گیرد.\n                        </p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </ContentProtection>\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-start gap-3\">\n            <div className=\"bg-yellow-100 rounded-full p-1\">\n              <ArrowRight className=\"h-4 w-4 text-yellow-600\" />\n            </div>\n            <div className=\"text-sm\">\n              <h4 className=\"font-medium text-yellow-800 mb-1\">راهنمای استفاده:</h4>\n              <ul className=\"text-yellow-700 space-y-1\">\n                <li>• محتوای بالا تحت حفاظت قرار دارد</li>\n                <li>• بسته به تنظیمات، امکانات مختلف محدود شده‌اند</li>\n                <li>• برای تست، سعی کنید اسکرین‌شات بگیرید یا متن را کپی کنید</li>\n                <li>• در حالت سخت، ابزارهای توسعه‌دهنده نیز محدود می‌شوند</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":14474},"client/src/pages/register.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { User, Mail, Lock, Eye, EyeOff } from \"lucide-react\";\n\nexport default function Register() {\n  const { refetch } = useAuth();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    name: \"\",\n    email: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const registerMutation = useMutation({\n    mutationFn: async (userData: typeof formData) => {\n      const response = await apiRequest(\"/api/register\", {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n      });\n      return response;\n    },\n    onSuccess: () => {\n      refetch();\n      window.parent.postMessage({ type: 'SWITCH_TAB', tab: 'home' }, '*');\n    },\n    onError: (error: any) => {\n      if (error.message.includes(\"نام کاربری\")) {\n        setErrors({ username: \"این نام کاربری قبلاً استفاده شده است\" });\n      } else if (error.message.includes(\"ایمیل\")) {\n        setErrors({ email: \"این ایمیل قبلاً استفاده شده است\" });\n      } else {\n        setErrors({ general: error.message || \"خطا در ثبت‌نام\" });\n      }\n    },\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n    if (errors[name]) {\n      setErrors((prev) => ({ ...prev, [name]: \"\" }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.username.trim()) {\n      newErrors.username = \"نام کاربری الزامی است\";\n    } else if (formData.username.length < 3) {\n      newErrors.username = \"نام کاربری باید حداقل ۳ کاراکتر باشد\";\n    }\n\n    if (!formData.password) {\n      newErrors.password = \"رمز عبور الزامی است\";\n    } else if (formData.password.length < 6) {\n      newErrors.password = \"رمز عبور باید حداقل ۶ کاراکتر باشد\";\n    }\n\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = \"تکرار رمز عبور الزامی است\";\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = \"رمز عبور و تکرار آن یکسان نیست\";\n    }\n\n    if (!formData.name.trim()) {\n      newErrors.name = \"نام الزامی است\";\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = \"ایمیل الزامی است\";\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = \"فرمت ایمیل صحیح نیست\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (validateForm()) {\n      registerMutation.mutate(formData);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\" dir=\"rtl\">\n      <div className=\"w-full max-w-md\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8\">\n          <div className=\"text-center mb-8\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <User className=\"w-8 h-8 text-green-600\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              ثبت‌نام در پیستاط\n            </h2>\n            <p className=\"text-gray-600\">\n              حساب کاربری جدید ایجاد کنید\n            </p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                نام کامل *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                  placeholder=\"نام کامل خود را وارد کنید\"\n                />\n                <User className=\"absolute left-3 top-3.5 w-5 h-5 text-gray-400\" />\n              </div>\n              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                نام کاربری *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                  placeholder=\"نام کاربری خود را انتخاب کنید\"\n                />\n                <User className=\"absolute left-3 top-3.5 w-5 h-5 text-gray-400\" />\n              </div>\n              {errors.username && <p className=\"text-red-500 text-sm mt-1\">{errors.username}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                ایمیل *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                  placeholder=\"ایمیل خود را وارد کنید\"\n                />\n                <Mail className=\"absolute left-3 top-3.5 w-5 h-5 text-gray-400\" />\n              </div>\n              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                رمز عبور *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                  placeholder=\"رمز عبور خود را وارد کنید\"\n                />\n                <Lock className=\"absolute left-10 top-3.5 w-5 h-5 text-gray-400\" />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute left-3 top-3.5 text-gray-400 hover:text-gray-600\"\n                >\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                تکرار رمز عبور *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                  placeholder=\"رمز عبور خود را دوباره وارد کنید\"\n                />\n                <Lock className=\"absolute left-10 top-3.5 w-5 h-5 text-gray-400\" />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  className=\"absolute left-3 top-3.5 text-gray-400 hover:text-gray-600\"\n                >\n                  {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n              {errors.confirmPassword && <p className=\"text-red-500 text-sm mt-1\">{errors.confirmPassword}</p>}\n            </div>\n\n            {errors.general && (\n              <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\n                <p className=\"text-sm text-red-800\">{errors.general}</p>\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={registerMutation.isPending}\n              className=\"w-full bg-green-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {registerMutation.isPending ? \"در حال ثبت‌نام...\" : \"ثبت‌نام\"}\n            </button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-sm text-gray-600\">\n              قبلاً حساب کاربری دارید؟{\" \"}\n              <button\n                onClick={() => {\n                  window.location.href = \"/login\";\n                }}\n                className=\"text-green-600 hover:text-green-700 font-medium\"\n              >\n                وارد شوید\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":10157},"client/src/pages/test-simple.tsx":{"content":"export default function TestSimple() {\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold\">Test Page</h1>\n      <p>This is a simple test page to check if React is working.</p>\n    </div>\n  );\n}","size_bytes":219},"client/src/pages/videos.tsx":{"content":"import { useQuery } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport { ArrowRight } from 'lucide-react';\n\nexport default function VideosPage() {\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  const { data: videos, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/educational-videos/active'],\n  });\n\n  const handleVideoClick = (videoId: number) => {\n    window.postMessage({ \n      type: 'OPEN_VIDEO', \n      videoId: videoId \n    }, '*');\n  };\n\n  const filteredVideos = videos?.filter(video => \n    video.title.toLowerCase().includes(searchTerm.toLowerCase())\n  ) || [];\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">در حال بارگذاری...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-6\">\n        <button \n          onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n          className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\n        >\n          <ArrowRight className=\"h-5 w-5\" />\n          بازگشت\n        </button>\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">ویدیوهای آموزشی</h1>\n        \n        <div className=\"flex gap-4 mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"جستجو در ویدیوها...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n        {filteredVideos.map((video) => (\n          <div \n            key={video.id} \n            className=\"bg-white rounded-xl p-4 shadow-sm border cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => handleVideoClick(video.id)}\n          >\n            <div className=\"w-full h-48 rounded-lg mb-3 flex items-center justify-center overflow-hidden bg-gray-100\">\n              {video.thumbnailUrl ? (\n                <img \n                  src={video.thumbnailUrl} \n                  alt={video.title}\n                  className=\"w-full h-full object-cover\"\n                />\n              ) : (\n                <svg className=\"w-12 h-12 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              )}\n            </div>\n            <h3 className=\"font-medium text-gray-800 mb-2\">{video.title}</h3>\n            <p className=\"text-sm text-gray-500 mb-3\">{video.description}</p>\n            <div className=\"flex items-center justify-between\">\n              {video.duration && (\n                <span className=\"text-sm text-orange-600\">⏱️ {video.duration}</span>\n              )}\n              {video.instructor && (\n                <span className=\"text-sm text-purple-600\">👨‍🏫 {video.instructor}</span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {filteredVideos.length === 0 && (\n        <div className=\"text-center py-8 text-gray-500\">\n          هیچ ویدیویی پیدا نشد.\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":3470},"client/src/pages/webinar-detail.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type Webinar, type WebinarSection } from \"@shared/schema\";\nimport { ArrowRight, Clock, User, Calendar, Play, FileText, Video } from \"lucide-react\";\n\ninterface WebinarDetailProps {\n  webinarId: number;\n}\n\nexport default function WebinarDetail({ webinarId }: WebinarDetailProps) {\n  const [activeSection, setActiveSection] = useState(1);\n\n  const { data: webinar } = useQuery<Webinar>({\n    queryKey: [`/api/webinars/${webinarId}`],\n  });\n\n  const { data: sections = [] } = useQuery<WebinarSection[]>({\n    queryKey: [`/api/webinars/${webinarId}/sections`],\n  });\n\n  if (!webinar) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">در حال بارگذاری...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const currentSection = sections.find(section => section.order === activeSection);\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <button \n            onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n            className=\"flex items-center text-blue-600 hover:text-blue-800 mb-4\"\n          >\n            <ArrowRight className=\"h-4 w-4 ml-2\" />\n            بازگشت\n          </button>\n          \n          <div className=\"flex flex-col md:flex-row gap-6\">\n            {/* Webinar Poster */}\n            <div className=\"w-full md:w-1/3\">\n              <div className=\"aspect-video bg-gray-200 rounded-lg overflow-hidden\">\n                {webinar.posterUrl ? (\n                  <img \n                    src={webinar.posterUrl} \n                    alt={webinar.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-full h-full flex items-center justify-center\">\n                    <Video className=\"h-16 w-16 text-gray-400\" />\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Webinar Info */}\n            <div className=\"flex-1\">\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">{webinar.title}</h1>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                {webinar.instructor && (\n                  <div className=\"flex items-center text-gray-600\">\n                    <User className=\"h-5 w-5 ml-2 text-purple-600\" />\n                    <span>{webinar.instructor}</span>\n                  </div>\n                )}\n                \n                {webinar.duration && (\n                  <div className=\"flex items-center text-gray-600\">\n                    <Clock className=\"h-5 w-5 ml-2 text-orange-600\" />\n                    <span>{webinar.duration}</span>\n                  </div>\n                )}\n                \n                {webinar.eventDate && (\n                  <div className=\"flex items-center text-gray-600\">\n                    <Calendar className=\"h-5 w-5 ml-2 text-blue-600\" />\n                    <span>{webinar.eventDate}</span>\n                  </div>\n                )}\n              </div>\n\n              <p className=\"text-gray-700 leading-relaxed\">\n                {webinar.description}\n              </p>\n\n              {webinar.level && (\n                <div className=\"mt-4\">\n                  <span className=\"inline-flex px-3 py-1 text-sm font-medium bg-green-100 text-green-800 rounded-full\">\n                    سطح: {webinar.level}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Section Navigation */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg border p-4 sticky top-4\">\n              <h3 className=\"font-semibold text-gray-900 mb-4\">بخش‌های وبینار</h3>\n              <nav className=\"space-y-2\">\n                {sections.map((section) => (\n                  <button\n                    key={section.id}\n                    onClick={() => setActiveSection(section.order)}\n                    className={`w-full text-right px-3 py-2 rounded-lg transition-colors ${\n                      activeSection === section.order\n                        ? 'bg-blue-50 text-blue-600 border border-blue-200'\n                        : 'text-gray-600 hover:bg-gray-50'\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">{section.title}</span>\n                      <span className=\"text-xs text-gray-400\">بخش {section.order}</span>\n                    </div>\n                  </button>\n                ))}\n              </nav>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"lg:col-span-3\">\n            {currentSection ? (\n              <div className=\"bg-white rounded-lg border p-6\">\n                <div className=\"mb-6\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                    {currentSection.title}\n                  </h2>\n                  {currentSection.description && (\n                    <p className=\"text-gray-600\">{currentSection.description}</p>\n                  )}\n                </div>\n\n                {/* Video Content */}\n                {currentSection.videoUrl && (\n                  <div className=\"mb-6\">\n                    <div className=\"aspect-video bg-gray-100 rounded-lg flex items-center justify-center\">\n                      <div className=\"text-center\">\n                        <Play className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n                        <p className=\"text-gray-600\">ویدئو در دسترس است</p>\n                        <p className=\"text-xs text-gray-500 mt-1\">{currentSection.videoUrl}</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Presentation Content */}\n                {currentSection.presentationUrl && (\n                  <div className=\"mb-6\">\n                    <div className=\"bg-gray-50 rounded-lg p-4 flex items-center\">\n                      <FileText className=\"h-8 w-8 text-red-600 ml-3\" />\n                      <div>\n                        <h4 className=\"font-medium text-gray-900\">فایل ارائه</h4>\n                        <p className=\"text-sm text-gray-600\">PDF ارائه این بخش</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Text Content */}\n                {currentSection.content && (\n                  <div className=\"prose prose-lg max-w-none\">\n                    <div className=\"bg-gray-50 rounded-lg p-6\">\n                      <h4 className=\"font-semibold text-gray-900 mb-3\">محتوای آموزشی</h4>\n                      <div className=\"text-gray-700 leading-relaxed whitespace-pre-wrap\">\n                        {currentSection.content}\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Navigation */}\n                <div className=\"flex justify-between mt-8 pt-6 border-t\">\n                  <button\n                    onClick={() => setActiveSection(Math.max(1, activeSection - 1))}\n                    disabled={activeSection === 1}\n                    className=\"flex items-center px-4 py-2 text-blue-600 hover:text-blue-800 disabled:text-gray-400 disabled:cursor-not-allowed\"\n                  >\n                    <ArrowRight className=\"h-4 w-4 ml-2\" />\n                    بخش قبل\n                  </button>\n                  \n                  <button\n                    onClick={() => setActiveSection(Math.min(sections.length, activeSection + 1))}\n                    disabled={activeSection === sections.length}\n                    className=\"flex items-center px-4 py-2 text-blue-600 hover:text-blue-800 disabled:text-gray-400 disabled:cursor-not-allowed\"\n                  >\n                    بخش بعد\n                    <ArrowRight className=\"h-4 w-4 mr-2 rotate-180\" />\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-white rounded-lg border p-6 text-center\">\n                <p className=\"text-gray-600\">بخشی انتخاب نشده است.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8948},"client/src/pages/webinars.tsx":{"content":"import { useQuery } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport { ArrowRight } from 'lucide-react';\n\nexport default function WebinarsPage() {\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  const { data: webinars, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/webinars'],\n  });\n\n  const handleWebinarClick = (webinarId: number) => {\n    window.postMessage({ \n      type: 'OPEN_WEBINAR', \n      webinarId: webinarId \n    }, '*');\n  };\n\n  const filteredWebinars = webinars?.filter(webinar => \n    webinar.isActive && \n    webinar.title.toLowerCase().includes(searchTerm.toLowerCase())\n  ) || [];\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">در حال بارگذاری...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-6\">\n        <button \n          onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n          className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\n        >\n          <ArrowRight className=\"h-5 w-5\" />\n          بازگشت\n        </button>\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">وبینارهای آموزشی</h1>\n        \n        <div className=\"flex gap-4 mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"جستجو در وبینارها...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n        {filteredWebinars.map((webinar) => (\n          <div \n            key={webinar.id} \n            className=\"bg-white rounded-xl p-4 shadow-sm border cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => handleWebinarClick(webinar.id)}\n          >\n            <div className=\"w-full h-48 rounded-lg mb-3 flex items-center justify-center overflow-hidden bg-gray-100\">\n              {webinar.posterUrl ? (\n                <img \n                  src={webinar.posterUrl} \n                  alt={webinar.title}\n                  className=\"w-full h-full object-cover\"\n                />\n              ) : (\n                <svg className=\"w-12 h-12 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                </svg>\n              )}\n            </div>\n            <h3 className=\"font-medium text-gray-800 mb-2\">{webinar.title}</h3>\n            <p className=\"text-sm text-gray-500 mb-3\">{webinar.description}</p>\n            <div className=\"flex items-center justify-between\">\n              {webinar.instructor && (\n                <span className=\"text-sm text-purple-600\">👨‍🏫 {webinar.instructor}</span>\n              )}\n              {webinar.duration && (\n                <span className=\"text-sm text-orange-600\">⏱️ {webinar.duration}</span>\n              )}\n            </div>\n            {webinar.eventDate && (\n              <div className=\"mt-2\">\n                <span className=\"text-sm text-blue-600\">📅 {webinar.eventDate}</span>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {filteredWebinars.length === 0 && (\n        <div className=\"text-center py-8 text-gray-500\">\n          هیچ وبیناری پیدا نشد.\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":3769},"client/src/pages/workshops-simple.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport { Calendar, Clock, MapPin, Users, User, ArrowRight } from \"lucide-react\";\nimport { AuthGuard } from \"@/components/AuthGuard\";\n\nexport default function WorkshopsPage() {\n  const [selectedWorkshop, setSelectedWorkshop] = useState<any>(null);\n  const [showRegistrationForm, setShowRegistrationForm] = useState(false);\n\n  const { data: workshops = [], isLoading, error } = useQuery<any[]>({\n    queryKey: ['/api/workshops'],\n  });\n  \n  console.log('Workshops page - data:', workshops, 'loading:', isLoading, 'error:', error);\n\n  const registerMutation = useMutation({\n    mutationFn: ({ workshopId, formData }: { workshopId: number; formData: any }) => \n      fetch(`/api/workshops/${workshopId}/register`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData)\n      }).then(res => res.json()),\n    onSuccess: () => {\n      setShowRegistrationForm(false);\n      setSelectedWorkshop(null);\n      alert('ثبت‌نام شما با موفقیت انجام شد!');\n    },\n    onError: () => {\n      alert('خطا در ثبت‌نام. لطفاً دوباره تلاش کنید.');\n    }\n  });\n\n  const handleRegister = (workshop: any) => {\n    setSelectedWorkshop(workshop);\n    setShowRegistrationForm(true);\n  };\n\n  const handleSubmitRegistration = (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const registrationData = {\n      userEmail: formData.get('userEmail') as string,\n      userName: formData.get('userName') as string,\n      userPhone: formData.get('userPhone') as string,\n      notes: formData.get('notes') as string,\n    };\n\n    registerMutation.mutate({\n      workshopId: selectedWorkshop.id,\n      formData: registrationData\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center py-12\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">در حال بارگذاری کارگاه‌ها...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <AuthGuard>\n      <div className=\"container mx-auto px-4 py-8\">\n      {/* Header */}\n      <div className=\"text-center mb-8\">\n        <button \n          onClick={() => window.postMessage({ type: 'SHOW_HOME' }, '*')}\n          className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\n        >\n          <ArrowRight className=\"h-5 w-5\" />\n          بازگشت\n        </button>\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">کارگاه‌های آموزشی</h1>\n        <p className=\"text-gray-600 max-w-2xl mx-auto\">\n          در کارگاه‌های آموزشی ما، آخرین تکنیک‌ها و روش‌های کشاورزی مدرن را یاد بگیرید\n        </p>\n      </div>\n\n      {/* Debug Info */}\n      <div className=\"mb-4 p-4 bg-gray-100 rounded text-sm\">\n        <p>تعداد کل کارگاه‌ها: {workshops?.length || 0}</p>\n        <p>تعداد فعال: {workshops?.filter((w: any) => w.isActive).length || 0}</p>\n        <p>داده‌ها: {JSON.stringify(workshops?.map(w => ({id: w.id, title: w.title, isActive: w.isActive})))}</p>\n      </div>\n\n      {/* Workshops Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n        {workshops && workshops\n          .filter((workshop: any) => workshop.isActive)\n          .map((workshop: any) => (\n          <div key={workshop.id} className=\"bg-white rounded-lg shadow-md overflow-hidden border\">\n            {workshop.posterUrl && (\n              <img\n                src={workshop.posterUrl}\n                alt={workshop.title}\n                className=\"w-full h-48 object-contain bg-gray-100\"\n              />\n            )}\n            \n            <div className=\"p-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                {workshop.title}\n              </h3>\n              \n              {workshop.description && (\n                <p className=\"text-gray-600 mb-4 line-clamp-3\">\n                  {workshop.description}\n                </p>\n              )}\n\n              <div className=\"space-y-2 mb-4\">\n                {workshop.instructor && (\n                  <div className=\"flex items-center text-sm text-gray-500\">\n                    <User className=\"h-4 w-4 ml-2\" />\n                    <span>مدرس: {workshop.instructor}</span>\n                  </div>\n                )}\n                \n                {workshop.eventDate && (\n                  <div className=\"flex items-center text-sm text-gray-500\">\n                    <Calendar className=\"h-4 w-4 ml-2\" />\n                    <span>{workshop.eventDate}</span>\n                  </div>\n                )}\n                \n                {workshop.duration && (\n                  <div className=\"flex items-center text-sm text-gray-500\">\n                    <Clock className=\"h-4 w-4 ml-2\" />\n                    <span>{workshop.duration}</span>\n                  </div>\n                )}\n                \n                {workshop.location && (\n                  <div className=\"flex items-center text-sm text-gray-500\">\n                    <MapPin className=\"h-4 w-4 ml-2\" />\n                    <span>{workshop.location}</span>\n                  </div>\n                )}\n\n                {workshop.capacity && (\n                  <div className=\"flex items-center text-sm text-gray-500\">\n                    <Users className=\"h-4 w-4 ml-2\" />\n                    <span>ظرفیت: {workshop.capacity} نفر</span>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                {workshop.level && (\n                  <span className=\"inline-block px-3 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full\">\n                    {workshop.level}\n                  </span>\n                )}\n\n                {workshop.registrationOpen ? (\n                  <button\n                    onClick={() => handleRegister(workshop)}\n                    className=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition-colors\"\n                  >\n                    ثبت‌نام\n                  </button>\n                ) : (\n                  <span className=\"px-4 py-2 bg-gray-100 text-gray-500 rounded-md\">\n                    ثبت‌نام بسته\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {(!workshops || workshops.filter((w: any) => w.isActive).length === 0) && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-400 mb-4\">\n            <Calendar className=\"h-16 w-16 mx-auto\" />\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n            هیچ کارگاهی در حال حاضر برگزار نمی‌شود\n          </h3>\n          <p className=\"text-gray-600\">\n            برای اطلاع از کارگاه‌های آینده با ما در تماس باشید\n          </p>\n          <div className=\"mt-4 text-sm text-gray-500\">\n            تعداد کارگاه‌ها: {workshops?.length || 0} | فعال: {workshops?.filter((w: any) => w.isActive).length || 0}\n          </div>\n        </div>\n      )}\n\n      {/* Registration Modal */}\n      {showRegistrationForm && selectedWorkshop && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg max-w-md w-full p-6\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                ثبت‌نام در کارگاه\n              </h3>\n              <button\n                onClick={() => {\n                  setShowRegistrationForm(false);\n                  setSelectedWorkshop(null);\n                }}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div className=\"mb-4\">\n              <h4 className=\"font-medium text-gray-900\">{selectedWorkshop.title}</h4>\n              {selectedWorkshop.eventDate && (\n                <p className=\"text-sm text-gray-600\">{selectedWorkshop.eventDate}</p>\n              )}\n            </div>\n\n            <form onSubmit={handleSubmitRegistration} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  نام و نام خانوادگی\n                </label>\n                <input\n                  name=\"userName\"\n                  type=\"text\"\n                  required\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n                  placeholder=\"نام کامل خود را وارد کنید\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  ایمیل\n                </label>\n                <input\n                  name=\"userEmail\"\n                  type=\"email\"\n                  required\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n                  placeholder=\"example@email.com\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  شماره تماس (اختیاری)\n                </label>\n                <input\n                  name=\"userPhone\"\n                  type=\"tel\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n                  placeholder=\"09123456789\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  توضیحات (اختیاری)\n                </label>\n                <textarea\n                  name=\"notes\"\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n                  placeholder=\"سوالات یا توضیحات اضافی...\"\n                />\n              </div>\n\n              <div className=\"flex gap-3 pt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowRegistrationForm(false);\n                    setSelectedWorkshop(null);\n                  }}\n                  className=\"flex-1 px-4 py-2 text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50\"\n                >\n                  انصراف\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={registerMutation.isPending}\n                  className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50\"\n                >\n                  {registerMutation.isPending ? 'در حال ثبت‌نام...' : 'ثبت‌نام'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n      </div>\n    </AuthGuard>\n  );\n}","size_bytes":11742},"ios/App/App/AppDelegate.swift":{"content":"import UIKit\nimport Capacitor\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    var window: UIWindow?\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        // Override point for customization after application launch.\n        return true\n    }\n\n    func applicationWillResignActive(_ application: UIApplication) {\n        // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.\n        // Use this method to pause ongoing tasks, disable timers, and invalidate graphics rendering callbacks. Games should use this method to pause the game.\n    }\n\n    func applicationDidEnterBackground(_ application: UIApplication) {\n        // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.\n        // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.\n    }\n\n    func applicationWillEnterForeground(_ application: UIApplication) {\n        // Called as part of the transition from the background to the active state; here you can undo many of the changes made on entering the background.\n    }\n\n    func applicationDidBecomeActive(_ application: UIApplication) {\n        // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.\n    }\n\n    func applicationWillTerminate(_ application: UIApplication) {\n        // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.\n    }\n\n    func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {\n        // Called when the app was launched with a url. Feel free to add additional processing here,\n        // but if you want the App API to support tracking app url opens, make sure to keep this call\n        return ApplicationDelegateProxy.shared.application(app, open: url, options: options)\n    }\n\n    func application(_ application: UIApplication, continue userActivity: NSUserActivity, restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void) -> Bool {\n        // Called when the app was launched with an activity, including Universal Links.\n        // Feel free to add additional processing here, but if you want the App API to support\n        // tracking app url opens, make sure to keep this call\n        return ApplicationDelegateProxy.shared.application(application, continue: userActivity, restorationHandler: restorationHandler)\n    }\n\n}\n","size_bytes":3031},"client/src/components/admin/AdminLayout.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Home,\n  BookOpen,\n  Users,\n  FileText,\n  Image,\n  Settings,\n  BarChart3,\n  Menu,\n  X,\n  LogOut,\n  User,\n  Palette,\n  Monitor,\n  Sliders\n} from \"lucide-react\";\n\ninterface AdminLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function AdminLayout({ children }: AdminLayoutProps) {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [location] = useLocation();\n\n  const menuItems = [\n    {\n      title: \"پیشخوان\",\n      icon: Home,\n      href: \"/admin\",\n      active: location === \"/admin\"\n    },\n    {\n      title: \"درس‌ها\",\n      icon: BookOpen,\n      href: \"/admin/courses\",\n      active: location.startsWith(\"/admin/courses\")\n    },\n    {\n      title: \"کارگاه‌ها\",\n      icon: Users,\n      href: \"/admin/workshops\",\n      active: location.startsWith(\"/admin/workshops\")\n    },\n    {\n      title: \"نوشته‌ها\",\n      icon: FileText,\n      href: \"/admin/posts\",\n      active: location.startsWith(\"/admin/posts\")\n    },\n    {\n      title: \"رسانه\",\n      icon: Image,\n      href: \"/admin/media\",\n      active: location.startsWith(\"/admin/media\")\n    },\n    {\n      title: \"اسلایدر\",\n      icon: Sliders,\n      href: \"/admin/slider\",\n      active: location.startsWith(\"/admin/slider\")\n    },\n    {\n      title: \"آمار\",\n      icon: BarChart3,\n      href: \"/admin/analytics\",\n      active: location.startsWith(\"/admin/analytics\")\n    },\n    {\n      title: \"ظاهر\",\n      icon: Palette,\n      href: \"/admin/appearance\",\n      active: location.startsWith(\"/admin/appearance\")\n    },\n    {\n      title: \"تنظیمات\",\n      icon: Settings,\n      href: \"/admin/settings\",\n      active: location.startsWith(\"/admin/settings\")\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 rtl\">\n      {/* Mobile sidebar overlay */}\n      {sidebarOpen && (\n        <div\n          className=\"fixed inset-0 z-40 bg-black bg-opacity-50 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <div className={`fixed inset-y-0 right-0 z-50 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0 ${\n        sidebarOpen ? 'translate-x-0' : 'translate-x-full'\n      }`}>\n        <div className=\"flex flex-col h-full\">\n          {/* Logo and close button */}\n          <div className=\"flex items-center justify-between p-4 border-b\">\n            <div className=\"flex items-center space-x-3 rtl:space-x-reverse\">\n              <div className=\"w-8 h-8 bg-green-600 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-lg\">پ</span>\n              </div>\n              <h1 className=\"text-xl font-bold text-gray-900\">پنل مدیریت</h1>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"lg:hidden\"\n              onClick={() => setSidebarOpen(false)}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n\n          {/* Navigation */}\n          <nav className=\"flex-1 p-4 space-y-2\">\n            {menuItems.map((item, index) => (\n              <Link key={index} href={item.href}>\n                <a className={`flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\n                  item.active\n                    ? 'bg-green-100 text-green-700'\n                    : 'text-gray-600 hover:bg-gray-100 hover:text-gray-900'\n                }`}>\n                  <item.icon className=\"h-5 w-5 ml-3\" />\n                  {item.title}\n                </a>\n              </Link>\n            ))}\n          </nav>\n\n          {/* User menu */}\n          <div className=\"p-4 border-t\">\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"w-full justify-start\">\n                  <Avatar className=\"h-8 w-8 ml-2\">\n                    <AvatarImage src=\"/avatars/admin.jpg\" alt=\"مدیر\" />\n                    <AvatarFallback>م</AvatarFallback>\n                  </Avatar>\n                  <div className=\"text-right\">\n                    <p className=\"text-sm font-medium\">مدیر سیستم</p>\n                    <p className=\"text-xs text-gray-500\">admin@pistach.com</p>\n                  </div>\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent className=\"w-56\" align=\"end\">\n                <DropdownMenuLabel>حساب کاربری</DropdownMenuLabel>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <User className=\"ml-2 h-4 w-4\" />\n                  <span>پروفایل</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <Monitor className=\"ml-2 h-4 w-4\" />\n                  <span>مشاهده سایت</span>\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <LogOut className=\"ml-2 h-4 w-4\" />\n                  <span>خروج</span>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        </div>\n      </div>\n\n      {/* Main content */}\n      <div className=\"lg:pr-64\">\n        {/* Top bar */}\n        <div className=\"bg-white shadow-sm border-b lg:hidden\">\n          <div className=\"flex items-center justify-between p-4\">\n            <h1 className=\"text-lg font-semibold text-gray-900\">پنل مدیریت</h1>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setSidebarOpen(true)}\n            >\n              <Menu className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        </div>\n\n        {/* Page content */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n}","size_bytes":6309},"client/src/components/admin/ProtectionSettings.tsx":{"content":"import { useState } from 'react';\nimport { Shield, Download, Eye, Copy, Printer, AlertTriangle } from 'lucide-react';\n\ninterface ProtectionSettingsProps {\n  allowDownload?: boolean;\n  allowScreenshot?: boolean;\n  allowCopy?: boolean;\n  allowPrint?: boolean;\n  watermarkText?: string;\n  protectionLevel?: 'none' | 'basic' | 'strict';\n  onChange: (settings: {\n    allowDownload: boolean;\n    allowScreenshot: boolean;\n    allowCopy: boolean;\n    allowPrint: boolean;\n    watermarkText: string;\n    protectionLevel: 'none' | 'basic' | 'strict';\n  }) => void;\n}\n\nexport default function ProtectionSettings({\n  allowDownload = true,\n  allowScreenshot = true,\n  allowCopy = true,\n  allowPrint = true,\n  watermarkText = '',\n  protectionLevel = 'none',\n  onChange\n}: ProtectionSettingsProps) {\n  const [settings, setSettings] = useState({\n    allowDownload,\n    allowScreenshot,\n    allowCopy,\n    allowPrint,\n    watermarkText,\n    protectionLevel\n  });\n\n  const handleSettingChange = (key: string, value: any) => {\n    const newSettings = { ...settings, [key]: value };\n    setSettings(newSettings);\n    onChange(newSettings);\n  };\n\n  const protectionLevels = [\n    { value: 'none', label: 'بدون حفاظت', description: 'هیچ محدودیتی اعمال نمی‌شود' },\n    { value: 'basic', label: 'حفاظت پایه', description: 'محدودیت‌های اساسی اعمال می‌شود' },\n    { value: 'strict', label: 'حفاظت سخت', description: 'بالاترین سطح حفاظت' }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg border shadow-sm\">\n      <div className=\"p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n          <Shield className=\"h-5 w-5 text-blue-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">تنظیمات حفاظت محتوا</h3>\n        </div>\n        <p className=\"text-sm text-gray-600 mt-1\">\n          کنترل دسترسی و محافظت از محتوای آموزشی\n        </p>\n      </div>\n\n      <div className=\"p-4 space-y-6\">\n        {/* سطح حفاظت */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n            سطح حفاظت کلی\n          </label>\n          <div className=\"space-y-2\">\n            {protectionLevels.map((level) => (\n              <label key={level.value} className=\"flex items-start gap-3 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"protectionLevel\"\n                  value={level.value}\n                  checked={settings.protectionLevel === level.value}\n                  onChange={(e) => handleSettingChange('protectionLevel', e.target.value)}\n                  className=\"mt-1\"\n                />\n                <div>\n                  <div className=\"font-medium text-gray-900\">{level.label}</div>\n                  <div className=\"text-sm text-gray-600\">{level.description}</div>\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n\n        {/* تنظیمات جزئی */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium text-gray-900\">تنظیمات جزئی</h4>\n          \n          {/* دانلود */}\n          <div className=\"flex items-center justify-between p-3 border rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <Download className=\"h-5 w-5 text-gray-600\" />\n              <div>\n                <div className=\"font-medium text-gray-900\">دانلود فایل</div>\n                <div className=\"text-sm text-gray-600\">امکان دانلود فایل‌های آموزشی</div>\n              </div>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={settings.allowDownload}\n                onChange={(e) => handleSettingChange('allowDownload', e.target.checked)}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n\n          {/* اسکرین‌شات */}\n          <div className=\"flex items-center justify-between p-3 border rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <Eye className=\"h-5 w-5 text-gray-600\" />\n              <div>\n                <div className=\"font-medium text-gray-900\">اسکرین‌شات</div>\n                <div className=\"text-sm text-gray-600\">امکان گرفتن اسکرین‌شات از محتوا</div>\n              </div>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={settings.allowScreenshot}\n                onChange={(e) => handleSettingChange('allowScreenshot', e.target.checked)}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n\n          {/* کپی متن */}\n          <div className=\"flex items-center justify-between p-3 border rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <Copy className=\"h-5 w-5 text-gray-600\" />\n              <div>\n                <div className=\"font-medium text-gray-900\">کپی متن</div>\n                <div className=\"text-sm text-gray-600\">امکان انتخاب و کپی کردن متن</div>\n              </div>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={settings.allowCopy}\n                onChange={(e) => handleSettingChange('allowCopy', e.target.checked)}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n\n          {/* چاپ */}\n          <div className=\"flex items-center justify-between p-3 border rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <Printer className=\"h-5 w-5 text-gray-600\" />\n              <div>\n                <div className=\"font-medium text-gray-900\">چاپ صفحه</div>\n                <div className=\"text-sm text-gray-600\">امکان چاپ کردن محتوا</div>\n              </div>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={settings.allowPrint}\n                onChange={(e) => handleSettingChange('allowPrint', e.target.checked)}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n        </div>\n\n        {/* واتر مارک */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            متن واتر مارک\n          </label>\n          <input\n            type=\"text\"\n            value={settings.watermarkText}\n            onChange={(e) => handleSettingChange('watermarkText', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"مثال: پیستاط - آموزش کشاورزی\"\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">\n            متن واتر مارک روی محتوا نمایش داده می‌شود\n          </p>\n        </div>\n\n        {/* هشدار */}\n        {settings.protectionLevel === 'strict' && (\n          <div className=\"flex items-start gap-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n            <AlertTriangle className=\"h-5 w-5 text-yellow-600 mt-0.5\" />\n            <div className=\"text-sm\">\n              <div className=\"font-medium text-yellow-800\">توجه</div>\n              <div className=\"text-yellow-700\">\n                در حالت حفاظت سخت، برخی از قابلیت‌های مرورگر محدود می‌شود که ممکن است تجربه کاربری را تحت تأثیر قرار دهد.\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":9769},"client/src/components/admin/WebinarSectionsTab.tsx":{"content":"import { useState } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { Plus, Edit, Trash2, Upload, Play, FileText } from 'lucide-react';\nimport { queryClient } from '../../lib/queryClient';\n\ninterface WebinarSection {\n  id: number;\n  webinarId: number;\n  title: string;\n  description?: string;\n  content?: string;\n  videoUrl?: string;\n  presentationUrl?: string;\n  documentUrl?: string;\n  order: number;\n  isLocked: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Webinar {\n  id: number;\n  title: string;\n}\n\nexport default function WebinarSectionsTab() {\n  const [selectedWebinarId, setSelectedWebinarId] = useState<number | null>(null);\n  const [showForm, setShowForm] = useState(false);\n  const [editingSection, setEditingSection] = useState<WebinarSection | null>(null);\n\n  // Fetch webinars list\n  const { data: webinars, isLoading: webinarsLoading } = useQuery<Webinar[]>({\n    queryKey: ['/api/webinars'],\n    select: (data) => data.map(w => ({ id: w.id, title: w.title }))\n  });\n\n  // Fetch sections for selected webinar\n  const { data: sections, isLoading: sectionsLoading } = useQuery<WebinarSection[]>({\n    queryKey: ['/api/webinars', selectedWebinarId, 'sections'],\n    enabled: !!selectedWebinarId\n  });\n\n  // Create section mutation\n  const createMutation = useMutation({\n    mutationFn: async (data: {\n      title: string;\n      description?: string;\n      content?: string;\n      videoUrl?: string;\n      presentationUrl?: string;\n      documentUrl?: string;\n      order: number;\n      isLocked: boolean;\n    }) => {\n      const response = await fetch(`/api/webinars/${selectedWebinarId}/sections`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در ایجاد بخش');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars', selectedWebinarId, 'sections'] });\n      queryClient.refetchQueries({ queryKey: ['/api/webinars', selectedWebinarId, 'sections'] });\n      setShowForm(false);\n      alert('بخش با موفقیت ایجاد شد');\n    },\n    onError: (error) => {\n      console.error('Create error:', error);\n      alert('خطا در ایجاد بخش');\n    }\n  });\n\n  // Update section mutation\n  const updateMutation = useMutation({\n    mutationFn: async (data: {\n      id: number;\n      title: string;\n      description?: string;\n      content?: string;\n      videoUrl?: string;\n      presentationUrl?: string;\n      documentUrl?: string;\n      order: number;\n      isLocked: boolean;\n    }) => {\n      const response = await fetch(`/api/webinars/${selectedWebinarId}/sections/${data.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در ویرایش بخش');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars', selectedWebinarId, 'sections'] });\n      queryClient.refetchQueries({ queryKey: ['/api/webinars', selectedWebinarId, 'sections'] });\n      setEditingSection(null);\n      setShowForm(false);\n      alert('بخش با موفقیت ویرایش شد');\n    },\n    onError: (error) => {\n      console.error('Update error:', error);\n      alert('خطا در ویرایش بخش');\n    }\n  });\n\n  // Delete section mutation\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/webinars/${selectedWebinarId}/sections/${id}`, {\n        method: 'DELETE'\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف بخش');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/webinars', selectedWebinarId, 'sections'] });\n      queryClient.refetchQueries({ queryKey: ['/api/webinars', selectedWebinarId, 'sections'] });\n      alert('بخش با موفقیت حذف شد');\n    },\n    onError: (error) => {\n      console.error('Delete error:', error);\n      alert('خطا در حذف بخش');\n    }\n  });\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    \n    const data = {\n      title: formData.get('title') as string,\n      description: formData.get('description') as string || undefined,\n      content: formData.get('content') as string || undefined,\n      videoUrl: formData.get('videoUrl') as string || undefined,\n      presentationUrl: formData.get('presentationUrl') as string || undefined,\n      documentUrl: formData.get('documentUrl') as string || undefined,\n      order: parseInt(formData.get('order') as string) || 1,\n      isLocked: formData.get('isLocked') === 'on'\n    };\n\n    if (editingSection) {\n      updateMutation.mutate({ ...data, id: editingSection.id });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  if (webinarsLoading) {\n    return (\n      <div className=\"flex justify-center items-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold\">مدیریت بخش‌های وبینار</h3>\n      </div>\n\n      {/* Webinar Selection */}\n      <div className=\"bg-white rounded-lg border p-4\">\n        <h4 className=\"font-medium mb-4\">انتخاب وبینار</h4>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {webinars?.map((webinar) => (\n            <button\n              key={webinar.id}\n              onClick={() => setSelectedWebinarId(webinar.id)}\n              className={`p-4 rounded-lg border text-right transition-colors ${\n                selectedWebinarId === webinar.id\n                  ? 'border-blue-500 bg-blue-50 text-blue-700'\n                  : 'border-gray-200 hover:border-gray-300'\n              }`}\n            >\n              <h5 className=\"font-medium\">{webinar.title}</h5>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Sections Management */}\n      {selectedWebinarId && (\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-between items-center\">\n            <h4 className=\"font-medium\">\n              بخش‌های وبینار: {webinars?.find(w => w.id === selectedWebinarId)?.title}\n            </h4>\n            <button\n              onClick={() => {\n                setEditingSection(null);\n                setShowForm(true);\n              }}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 flex items-center gap-2\"\n            >\n              <Plus className=\"h-4 w-4\" />\n              افزودن بخش جدید\n            </button>\n          </div>\n\n          {/* Section Form */}\n          {showForm && (\n            <div className=\"bg-white rounded-lg border p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h4 className=\"font-semibold\">\n                  {editingSection ? 'ویرایش بخش' : 'افزودن بخش جدید'}\n                </h4>\n                <button \n                  onClick={() => {\n                    setShowForm(false);\n                    setEditingSection(null);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  ✕\n                </button>\n              </div>\n              \n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium mb-1\">عنوان بخش *</label>\n                    <input\n                      type=\"text\"\n                      name=\"title\"\n                      required\n                      defaultValue={editingSection?.title || ''}\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium mb-1\">ترتیب</label>\n                    <input\n                      type=\"number\"\n                      name=\"order\"\n                      min=\"1\"\n                      defaultValue={editingSection?.order || (sections?.length || 0) + 1}\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">توضیحات</label>\n                  <textarea\n                    name=\"description\"\n                    rows={3}\n                    defaultValue={editingSection?.description || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">محتوای متنی</label>\n                  <textarea\n                    name=\"content\"\n                    rows={4}\n                    defaultValue={editingSection?.content || ''}\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium mb-1\">\n                      <Play className=\"inline h-4 w-4 ml-1\" />\n                      آدرس ویدئو\n                    </label>\n                    <input\n                      type=\"url\"\n                      name=\"videoUrl\"\n                      defaultValue={editingSection?.videoUrl || ''}\n                      placeholder=\"/uploads/video.mp4\"\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium mb-1\">\n                      <FileText className=\"inline h-4 w-4 ml-1\" />\n                      آدرس ارائه\n                    </label>\n                    <input\n                      type=\"url\"\n                      name=\"presentationUrl\"\n                      defaultValue={editingSection?.presentationUrl || ''}\n                      placeholder=\"/uploads/presentation.pdf\"\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium mb-1\">\n                      <Upload className=\"inline h-4 w-4 ml-1\" />\n                      آدرس سند\n                    </label>\n                    <input\n                      type=\"url\"\n                      name=\"documentUrl\"\n                      defaultValue={editingSection?.documentUrl || ''}\n                      placeholder=\"/uploads/document.pdf\"\n                      className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"isLocked\"\n                    id=\"isLocked\"\n                    defaultChecked={editingSection?.isLocked || false}\n                    className=\"rounded\"\n                  />\n                  <label htmlFor=\"isLocked\" className=\"text-sm\">قفل شده (نیاز به اشتراک)</label>\n                </div>\n\n                <div className=\"flex justify-end gap-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowForm(false);\n                      setEditingSection(null);\n                    }}\n                    className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\n                  >\n                    انصراف\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={createMutation.isPending || updateMutation.isPending}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {createMutation.isPending || updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n\n          {/* Sections List */}\n          <div className=\"bg-white rounded-lg border\">\n            <div className=\"p-4 border-b\">\n              <h4 className=\"font-semibold\">بخش‌های موجود</h4>\n            </div>\n            \n            {sectionsLoading ? (\n              <div className=\"flex justify-center py-8\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\n              </div>\n            ) : (\n              <div className=\"divide-y\">\n                {sections && sections.length > 0 ? (\n                  sections\n                    .sort((a, b) => a.order - b.order)\n                    .map((section) => (\n                    <div key={section.id} className=\"p-4 flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-2\">\n                          <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs font-medium\">\n                            {section.order}\n                          </span>\n                          <h5 className=\"font-medium\">{section.title}</h5>\n                          {section.isLocked && (\n                            <span className=\"bg-red-100 text-red-800 px-2 py-1 rounded-full text-xs\">\n                              قفل شده\n                            </span>\n                          )}\n                        </div>\n                        \n                        {section.description && (\n                          <p className=\"text-sm text-gray-600 mb-2\">{section.description}</p>\n                        )}\n                        \n                        <div className=\"flex gap-4 text-xs text-gray-500\">\n                          {section.videoUrl && (\n                            <span className=\"flex items-center gap-1\">\n                              <Play className=\"h-3 w-3\" />\n                              ویدئو\n                            </span>\n                          )}\n                          {section.presentationUrl && (\n                            <span className=\"flex items-center gap-1\">\n                              <FileText className=\"h-3 w-3\" />\n                              ارائه\n                            </span>\n                          )}\n                          {section.documentUrl && (\n                            <span className=\"flex items-center gap-1\">\n                              <Upload className=\"h-3 w-3\" />\n                              سند\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center gap-2\">\n                        <button\n                          onClick={() => {\n                            setEditingSection(section);\n                            setShowForm(true);\n                          }}\n                          className=\"text-blue-600 hover:text-blue-800\"\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </button>\n                        <button\n                          onClick={() => {\n                            if (confirm('آیا از حذف این بخش اطمینان دارید؟')) {\n                              deleteMutation.mutate(section.id);\n                            }\n                          }}\n                          disabled={deleteMutation.isPending}\n                          className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"p-8 text-center text-gray-500\">\n                    <p>هیچ بخشی برای این وبینار وجود ندارد</p>\n                    <button\n                      onClick={() => {\n                        setEditingSection(null);\n                        setShowForm(true);\n                      }}\n                      className=\"mt-2 text-blue-600 hover:text-blue-800\"\n                    >\n                      اولین بخش را اضافه کنید\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":17711},"client/src/components/admin/WorkshopsTab.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport { Plus, Edit, Trash, X, Upload } from \"lucide-react\";\n\nexport default function WorkshopsTab() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingWorkshop, setEditingWorkshop] = useState<any>(null);\n  \n  const { data: workshops = [], isLoading, error, refetch } = useQuery<any[]>({\n    queryKey: ['/api/workshops']\n  });\n  \n  console.log('Workshops data:', workshops, 'Loading:', isLoading, 'Error:', error);\n\n  const createMutation = useMutation({\n    mutationFn: (data: any) => \n      fetch('/api/workshops', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      }).then(res => res.json()),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/workshops'] });\n      refetch();\n      setShowForm(false);\n      setEditingWorkshop(null);\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: ({ id, data }: { id: number; data: any }) => \n      fetch(`/api/workshops/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      }).then(res => res.json()),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/workshops'] });\n      refetch();\n      setShowForm(false);\n      setEditingWorkshop(null);\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => \n      fetch(`/api/workshops/${id}`, {\n        method: 'DELETE'\n      }).then(res => res.json()),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/workshops'] });\n      refetch();\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const title = formData.get('title') as string;\n    \n    // Only require title - all other fields are optional\n    if (!title?.trim()) {\n      alert('عنوان کارگاه الزامی است');\n      return;\n    }\n    \n    const data = {\n      title: title.trim(),\n      description: formData.get('description') as string || '',\n      posterUrl: formData.get('posterUrl') as string || '',\n      eventDate: formData.get('eventDate') as string || '',\n      location: formData.get('location') as string || '',\n      instructor: formData.get('instructor') as string || '',\n      duration: formData.get('duration') as string || '',\n      capacity: parseInt(formData.get('capacity') as string) || 0,\n      level: formData.get('level') as string || '',\n      category: formData.get('category') as string || '',\n      isActive: formData.get('isActive') === 'on',\n      registrationOpen: formData.get('registrationOpen') === 'on',\n    };\n\n    if (editingWorkshop) {\n      updateMutation.mutate({ id: editingWorkshop.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-8\">در حال بارگذاری...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-8 text-red-600\">\n        خطا در بارگذاری کارگاه‌ها: {error.message}\n        <button \n          onClick={() => refetch()} \n          className=\"block mx-auto mt-2 px-4 py-2 bg-blue-600 text-white rounded\"\n        >\n          تلاش مجدد\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold\">کارگاه‌های آموزشی</h3>\n        <button\n          onClick={() => {\n            setEditingWorkshop(null);\n            setShowForm(true);\n          }}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          افزودن کارگاه جدید\n        </button>\n      </div>\n\n      {showForm && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h4 className=\"font-semibold\">\n              {editingWorkshop ? 'ویرایش کارگاه' : 'افزودن کارگاه جدید'}\n            </h4>\n            <button \n              onClick={() => {\n                setShowForm(false);\n                setEditingWorkshop(null);\n              }}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <X className=\"h-6 w-6\" />\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">عنوان کارگاه</label>\n                <input\n                  name=\"title\"\n                  type=\"text\"\n                  defaultValue={editingWorkshop?.title || ''}\n                  placeholder=\"عنوان کارگاه\"\n                  required\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">مدرس</label>\n                <input\n                  name=\"instructor\"\n                  type=\"text\"\n                  defaultValue={editingWorkshop?.instructor || ''}\n                  placeholder=\"نام مدرس\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">توضیحات</label>\n              <textarea\n                name=\"description\"\n                defaultValue={editingWorkshop?.description || ''}\n                placeholder=\"توضیحات کارگاه\"\n                rows={3}\n                className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">تاریخ برگزاری</label>\n                <input\n                  name=\"eventDate\"\n                  type=\"text\"\n                  defaultValue={editingWorkshop?.eventDate || ''}\n                  placeholder=\"مثال: ۱۵ اردیبهشت ۱۴۰۳\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">مکان برگزاری</label>\n                <input\n                  name=\"location\"\n                  type=\"text\"\n                  defaultValue={editingWorkshop?.location || ''}\n                  placeholder=\"مکان برگزاری\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">مدت زمان</label>\n                <input\n                  name=\"duration\"\n                  type=\"text\"\n                  defaultValue={editingWorkshop?.duration || ''}\n                  placeholder=\"مثال: ۲ ساعت\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">ظرفیت</label>\n                <input\n                  name=\"capacity\"\n                  type=\"number\"\n                  defaultValue={editingWorkshop?.capacity || ''}\n                  placeholder=\"تعداد شرکت‌کنندگان\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">سطح</label>\n                <select\n                  name=\"level\"\n                  defaultValue={editingWorkshop?.level || 'مبتدی'}\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"مبتدی\">مبتدی</option>\n                  <option value=\"متوسط\">متوسط</option>\n                  <option value=\"پیشرفته\">پیشرفته</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">دسته‌بندی</label>\n                <input\n                  name=\"category\"\n                  type=\"text\"\n                  defaultValue={editingWorkshop?.category || ''}\n                  placeholder=\"دسته‌بندی کارگاه\"\n                  className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">تصویر پوستر</label>\n                <div className=\"flex gap-2\">\n                  <input\n                    name=\"posterUrl\"\n                    type=\"text\"\n                    defaultValue={editingWorkshop?.posterUrl || ''}\n                    placeholder=\"آدرس تصویر پوستر\"\n                    className=\"flex-1 px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => window.open('/admin-simple#media', '_blank')}\n                    className=\"px-3 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors flex items-center gap-1\"\n                  >\n                    <Upload className=\"h-4 w-4\" />\n                    رسانه\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-6\">\n              <div className=\"flex items-center gap-2\">\n                <input\n                  name=\"isActive\"\n                  type=\"checkbox\"\n                  defaultChecked={editingWorkshop?.isActive ?? true}\n                  className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                />\n                <label className=\"text-sm\">فعال</label>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <input\n                  name=\"registrationOpen\"\n                  type=\"checkbox\"\n                  defaultChecked={editingWorkshop?.registrationOpen ?? true}\n                  className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                />\n                <label className=\"text-sm\">ثبت‌نام باز</label>\n              </div>\n            </div>\n\n            <div className=\"flex gap-2 justify-end\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowForm(false);\n                  setEditingWorkshop(null);\n                }}\n                className=\"px-4 py-2 text-gray-600 border rounded-md hover:bg-gray-50\"\n              >\n                انصراف\n              </button>\n              <button\n                type=\"submit\"\n                disabled={createMutation.isPending || updateMutation.isPending}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {createMutation.isPending || updateMutation.isPending ? 'در حال ذخیره...' : 'ذخیره'}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg border\">\n        <div className=\"p-4 border-b\">\n          <h4 className=\"font-semibold\">کارگاه‌های موجود</h4>\n        </div>\n        <div className=\"divide-y\">\n          {workshops && workshops.map((workshop: any) => (\n            <div key={workshop.id} className=\"p-4 flex items-center justify-between\">\n              <div className=\"flex items-center gap-4\">\n                {workshop.posterUrl && (\n                  <img\n                    src={workshop.posterUrl}\n                    alt={workshop.title}\n                    className=\"w-16 h-16 object-contain bg-gray-100 rounded-lg\"\n                  />\n                )}\n                <div>\n                  <h5 className=\"font-medium text-lg\">{workshop.title}</h5>\n                  {workshop.description && (\n                    <p className=\"text-sm text-gray-600 mt-1\">{workshop.description}</p>\n                  )}\n                  <div className=\"flex gap-4 mt-2 text-xs text-gray-500\">\n                    {workshop.instructor && <span>مدرس: {workshop.instructor}</span>}\n                    {workshop.eventDate && <span>تاریخ: {workshop.eventDate}</span>}\n                    {workshop.duration && <span>مدت: {workshop.duration}</span>}\n                    {workshop.level && <span>سطح: {workshop.level}</span>}\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className={`w-2 h-2 rounded-full ${workshop.isActive ? 'bg-green-500' : 'bg-gray-300'}`} />\n                <div className={`w-2 h-2 rounded-full ${workshop.registrationOpen ? 'bg-blue-500' : 'bg-red-300'}`} />\n                <button\n                  onClick={() => {\n                    setEditingWorkshop(workshop);\n                    setShowForm(true);\n                  }}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => deleteMutation.mutate(workshop.id)}\n                  disabled={deleteMutation.isPending}\n                  className=\"text-red-600 hover:text-red-800 disabled:opacity-50\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n          {(!workshops || workshops?.length === 0) && (\n            <div className=\"p-8 text-center text-gray-500\">\n              هیچ کارگاهی یافت نشد. اولین کارگاه را اضافه کنید.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":14922},"client/src/components/course/CourseCard.tsx":{"content":"import { Link } from \"wouter\";\nimport { type CourseCardProps } from \"@/lib/types\";\n\nexport default function CourseCard({\n  id,\n  title,\n  description,\n  thumbnailUrl,\n  progress,\n  totalModules,\n  completedModules,\n  isNew,\n  isPopular,\n  level\n}: CourseCardProps) {\n  const remainingModules = totalModules - completedModules;\n  \n  return (\n    <div className=\"bg-white rounded-xl shadow-sm overflow-hidden\" dir=\"rtl\">\n      <img src={thumbnailUrl} alt={title} className=\"w-full h-36 object-cover\" />\n      <div className=\"p-4\">\n        <div className=\"flex justify-between items-start mb-2\">\n          <h3 className=\"font-medium text-neutral-600\">{title}</h3>\n          \n          {progress > 0 && (\n            <span className=\"px-2 py-1 bg-blue-500 text-white text-xs rounded-full\">{progress}%</span>\n          )}\n          {isNew && (\n            <span className=\"px-2 py-1 bg-green-500 text-white text-xs rounded-full\">جدید</span>\n          )}\n          {isPopular && (\n            <span className=\"px-2 py-1 bg-amber-500 text-white text-xs rounded-full\">محبوب</span>\n          )}\n          {level && progress === 0 && !isNew && !isPopular && (\n            <span className={`px-2 py-1 text-white text-xs rounded-full ${level === 'Beginner' ? 'bg-blue-500' : 'bg-gray-500'}`}>\n              {level === 'Beginner' ? 'مبتدی' : level === 'Intermediate' ? 'متوسط' : 'پیشرفته'}\n            </span>\n          )}\n        </div>\n        <p className=\"text-sm text-neutral-400 mb-3\">{description}</p>\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <span className=\"material-icons text-sm text-neutral-400 ml-1\">schedule</span>\n            <span className=\"text-xs text-neutral-400\">\n              {progress > 0 ? `${remainingModules} ماژول باقیمانده` : `${totalModules} ماژول`}\n            </span>\n          </div>\n          <Link href={progress > 0 ? `/courses/${id}/continue` : `/courses/${id}`}>\n            <button className=\"px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded-md transition-colors\">\n              {progress > 0 ? 'ادامه' : 'ثبت‌نام'}\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":2281},"client/src/components/document/PDFViewer.tsx":{"content":"import { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { type DocumentViewerProps } from \"@/lib/types\";\nimport { \n  Download, Share, Printer, ChevronLeft, ChevronRight, \n  ZoomIn, ZoomOut, X \n} from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport 'react-pdf/dist/esm/Page/TextLayer.css';\n\nconst options = {\n  cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/cmaps/',\n  cMapPacked: true,\n};\n\nexport default function PDFViewer({ document }: DocumentViewerProps) {\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n  const [scale, setScale] = useState<number>(1.0);\n  \n  function onDocumentLoadSuccess({ numPages }: { numPages: number }): void {\n    setNumPages(numPages);\n  }\n\n  const zoomIn = () => setScale(prev => Math.min(prev + 0.2, 3.0));\n  const zoomOut = () => setScale(prev => Math.max(prev - 0.2, 0.5));\n  const previousPage = () => setPageNumber(prev => Math.max(prev - 1, 1));\n  const nextPage = () => setPageNumber(prev => Math.min(prev + 1, numPages));\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg w-full max-w-6xl max-h-[95vh] overflow-hidden flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">{document.title}</h2>\n            <p className=\"text-sm text-gray-600\">{document.description}</p>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            {/* Zoom Controls */}\n            <button \n              onClick={zoomOut}\n              className=\"p-2 hover:bg-gray-100 rounded-md\"\n              title=\"کوچک کردن\"\n            >\n              <ZoomOut className=\"h-4 w-4\" />\n            </button>\n            <span className=\"text-sm text-gray-600 min-w-[60px] text-center\">\n              {Math.round(scale * 100)}%\n            </span>\n            <button \n              onClick={zoomIn}\n              className=\"p-2 hover:bg-gray-100 rounded-md\"\n              title=\"بزرگ کردن\"\n            >\n              <ZoomIn className=\"h-4 w-4\" />\n            </button>\n            \n            {/* Action Buttons */}\n            <button className=\"p-2 hover:bg-gray-100 rounded-md\" title=\"دانلود\">\n              <Download className=\"h-4 w-4\" />\n            </button>\n            <button className=\"p-2 hover:bg-gray-100 rounded-md\" title=\"اشتراک‌گذاری\">\n              <Share className=\"h-4 w-4\" />\n            </button>\n            <button className=\"p-2 hover:bg-gray-100 rounded-md\" title=\"چاپ\">\n              <Printer className=\"h-4 w-4\" />\n            </button>\n            \n            <Link href=\"/library\">\n              <button className=\"p-2 hover:bg-gray-100 rounded-md\" title=\"بستن\">\n                <X className=\"h-4 w-4\" />\n              </button>\n            </Link>\n          </div>\n        </div>\n\n        {/* PDF Viewer */}\n        <div className=\"flex-1 overflow-auto bg-gray-100 flex flex-col items-center py-4\">\n          <div className=\"bg-white shadow-lg\">\n            <Document\n              file={document.fileUrl}\n              onLoadSuccess={onDocumentLoadSuccess}\n              options={options}\n              loading={\n                <div className=\"flex items-center justify-center h-96\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                </div>\n              }\n              error={\n                <div className=\"flex items-center justify-center h-96 text-red-600\">\n                  خطا در بارگذاری PDF\n                </div>\n              }\n            >\n              <Page \n                pageNumber={pageNumber} \n                scale={scale}\n                loading={\n                  <div className=\"flex items-center justify-center h-96\">\n                    <div className=\"animate-pulse bg-gray-200 w-full h-full\"></div>\n                  </div>\n                }\n              />\n            </Document>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-between p-4 border-t bg-gray-50\">\n          <div className=\"flex items-center gap-2\">\n            <button \n              onClick={previousPage}\n              disabled={pageNumber <= 1}\n              className=\"p-2 hover:bg-gray-200 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </button>\n            <span className=\"text-sm text-gray-600\">\n              صفحه {pageNumber} از {numPages}\n            </span>\n            <button \n              onClick={nextPage}\n              disabled={pageNumber >= numPages}\n              className=\"p-2 hover:bg-gray-200 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </button>\n          </div>\n          \n          <div className=\"text-sm text-gray-500\">\n            نویسنده: {document.author} • تاریخ انتشار: {document.publishedAt}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":5360},"client/src/components/editor/RichTextEditor.tsx":{"content":"import { useState } from 'react';\nimport { \n  Bold, \n  Italic, \n  Underline as UnderlineIcon, \n  List, \n  ListOrdered, \n  Quote, \n  Undo, \n  Redo,\n  AlignLeft,\n  AlignCenter,\n  AlignRight,\n  Link as LinkIcon,\n  Image as ImageIcon,\n  Type\n} from 'lucide-react';\n\ninterface RichTextEditorProps {\n  content: string;\n  onChange: (content: string) => void;\n  onImageInsert?: () => void;\n}\n\nexport default function RichTextEditor({ content, onChange, onImageInsert }: RichTextEditorProps) {\n  const [editorContent, setEditorContent] = useState(content);\n\n  const handleChange = (value: string) => {\n    setEditorContent(value);\n    onChange(value);\n  };\n\n  return (\n    <div className=\"border border-gray-300 rounded-lg overflow-hidden\">\n      {/* Toolbar */}\n      <div className=\"border-b border-gray-200 p-2 bg-gray-50\">\n        <div className=\"flex flex-wrap gap-1\">\n          {/* Text Formatting */}\n          <div className=\"flex gap-1 border-l border-gray-300 pl-2 ml-2\">\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"ضخیم\"\n            >\n              <Bold className=\"h-4 w-4\" />\n            </button>\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"کج\"\n            >\n              <Italic className=\"h-4 w-4\" />\n            </button>\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"زیرخط\"\n            >\n              <UnderlineIcon className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          {/* Lists */}\n          <div className=\"flex gap-1 border-l border-gray-300 pl-2 ml-2\">\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"لیست\"\n            >\n              <List className=\"h-4 w-4\" />\n            </button>\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"لیست شماره‌دار\"\n            >\n              <ListOrdered className=\"h-4 w-4\" />\n            </button>\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"نقل قول\"\n            >\n              <Quote className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          {/* Alignment */}\n          <div className=\"flex gap-1 border-l border-gray-300 pl-2 ml-2\">\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"راست‌چین\"\n            >\n              <AlignRight className=\"h-4 w-4\" />\n            </button>\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"وسط‌چین\"\n            >\n              <AlignCenter className=\"h-4 w-4\" />\n            </button>\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"چپ‌چین\"\n            >\n              <AlignLeft className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          {/* Media */}\n          <div className=\"flex gap-1 border-l border-gray-300 pl-2 ml-2\">\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"افزودن لینک\"\n            >\n              <LinkIcon className=\"h-4 w-4\" />\n            </button>\n            <button\n              onClick={onImageInsert}\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"افزودن تصویر\"\n            >\n              <ImageIcon className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          {/* Undo/Redo */}\n          <div className=\"flex gap-1\">\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"بازگشت\"\n            >\n              <Undo className=\"h-4 w-4\" />\n            </button>\n            <button\n              className=\"p-2 rounded hover:bg-gray-200\"\n              title=\"تکرار\"\n            >\n              <Redo className=\"h-4 w-4\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Simple Textarea Editor */}\n      <textarea\n        value={editorContent}\n        onChange={(e) => handleChange(e.target.value)}\n        className=\"w-full min-h-[300px] max-h-[500px] p-4 resize-none focus:outline-none\"\n        dir=\"rtl\"\n        placeholder=\"محتوای نوشته خود را اینجا بنویسید...\"\n      />\n    </div>\n  );\n}","size_bytes":4395},"client/src/components/layout/Header.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { User, Menu, X, Bell, Search, LogOut } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport logoImage from \"@assets/logo.png\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [logoClickCount, setLogoClickCount] = useState(0);\n  const { user, isAuthenticated, isLoading } = useAuth();\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      });\n      window.location.reload();\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  \n  return (\n    <header className=\"bg-white shadow-sm sticky top-0 z-20\" dir=\"rtl\">\n      <div className=\"container mx-auto px-4 h-16 flex items-center justify-between\">\n        {/* Logo and Hamburger Menu */}\n        <div className=\"flex items-center gap-4\">\n          <button\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            className=\"md:hidden p-2 rounded-md hover:bg-green-50 group transition-colors\"\n          >\n            {isMenuOpen ? <X className=\"h-6 w-6 text-gray-500 group-hover:text-green-600 transition-colors\" /> : <Menu className=\"h-6 w-6 text-gray-500 group-hover:text-green-600 transition-colors\" />}\n          </button>\n          <div \n            onClick={() => {\n              const newCount = logoClickCount + 1;\n              setLogoClickCount(newCount);\n              if (newCount >= 5) {\n                // Open admin panel by posting message to parent\n                window.postMessage({ type: 'OPEN_ADMIN' }, '*');\n                setLogoClickCount(0);\n              }\n              // Reset count after 3 seconds\n              setTimeout(() => setLogoClickCount(0), 3000);\n            }}\n            className=\"flex items-center cursor-pointer\"\n          >\n            <div className=\"flex items-center\">\n              <img \n                src={logoImage} \n                alt=\"پیستاط\" \n                className=\"h-12 w-auto hover:opacity-80 transition-opacity\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Right side icons */}\n        <div className=\"flex items-center gap-2\">\n          {/* Search Icon */}\n          <button \n            onClick={() => window.postMessage({ type: 'SHOW_SEARCH' }, '*')}\n            className=\"p-2 rounded-full hover:bg-green-50 group transition-colors\"\n          >\n            <Search className=\"h-6 w-6 text-gray-500 group-hover:text-green-600 transition-colors\" />\n          </button>\n          \n          {/* Notifications Icon */}\n          <button className=\"p-2 rounded-full hover:bg-green-50 group transition-colors relative\">\n            <Bell className=\"h-6 w-6 text-gray-500 group-hover:text-green-600 transition-colors\" />\n            {/* Notification badge */}\n            <span className=\"absolute -top-1 -right-1 h-4 w-4 bg-red-500 text-white rounded-full text-xs flex items-center justify-center\">\n              3\n            </span>\n          </button>\n          \n          {/* User Profile Icon */}\n          <button \n            onClick={() => window.postMessage({ type: 'SHOW_PROFILE' }, '*')}\n            className=\"p-2 rounded-full hover:bg-green-50 group transition-colors\"\n          >\n            <User className=\"h-6 w-6 text-gray-500 group-hover:text-green-600 transition-colors\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Mobile Menu Overlay */}\n      {isMenuOpen && (\n        <div className=\"fixed inset-0 z-50 md:hidden\">\n          <div className=\"fixed inset-0 bg-black bg-opacity-50\" onClick={() => setIsMenuOpen(false)}></div>\n          <div className=\"fixed top-0 right-0 h-full w-80 bg-white shadow-lg\">\n            <div className=\"p-4\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold\">منو</h2>\n                <button\n                  onClick={() => setIsMenuOpen(false)}\n                  className=\"p-2 rounded-md hover:bg-gray-100\"\n                >\n                  <X className=\"h-6 w-6\" />\n                </button>\n              </div>\n              \n              <div className=\"mt-6\">\n                {/* User Profile Section */}\n                <div className=\"bg-gray-100 rounded-lg p-4 mb-6\">\n                  {isLoading ? (\n                    <div className=\"animate-pulse\">\n                      <div className=\"flex items-center mb-3\">\n                        <div className=\"h-12 w-12 rounded-full bg-gray-300 ml-3\"></div>\n                        <div>\n                          <div className=\"h-4 w-20 bg-gray-300 rounded mb-2\"></div>\n                          <div className=\"h-3 w-16 bg-gray-300 rounded\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : isAuthenticated && user ? (\n                    <div>\n                      <div className=\"flex items-center mb-3\">\n                        <div className=\"h-12 w-12 rounded-full bg-green-600 flex items-center justify-center text-white font-medium ml-3\">\n                          {user.name ? user.name.charAt(0) : user.username?.charAt(0) || 'ک'}\n                        </div>\n                        <div>\n                          <p className=\"font-medium text-gray-700\">{user.name || user.username}</p>\n                          <p className=\"text-sm text-gray-500\">\n                            {user.role === 'admin' ? 'مدیر سیستم' : 'کاربر عادی'}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <div>\n                          <p className=\"text-xs text-gray-500\">پیشرفت</p>\n                          <p className=\"font-medium text-gray-700\">75%</p>\n                        </div>\n                        <div className=\"h-2 w-24 bg-gray-300 rounded-full overflow-hidden\">\n                          <div className=\"h-full bg-green-600 rounded-full\" style={{ width: '75%' }}></div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div>\n                      <div className=\"flex items-center mb-3\">\n                        <div className=\"h-12 w-12 rounded-full bg-gray-400 flex items-center justify-center text-white font-medium ml-3\">\n                          کا\n                        </div>\n                        <div>\n                          <p className=\"font-medium text-gray-700\">کاربر مهمان</p>\n                          <p className=\"text-sm text-gray-500\">عضویت ساده</p>\n                        </div>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <div>\n                          <p className=\"text-xs text-gray-500\">پیشرفت</p>\n                          <p className=\"font-medium text-gray-700\">0%</p>\n                        </div>\n                        <div className=\"h-2 w-24 bg-gray-300 rounded-full overflow-hidden\">\n                          <div className=\"h-full bg-gray-400 rounded-full\" style={{ width: '0%' }}></div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Main Menu */}\n                <div className=\"space-y-1 mb-6\">\n                  <h3 className=\"text-xs uppercase text-gray-500 font-medium mb-3\">منوی اصلی</h3>\n                  <Link \n                    href=\"/\" \n                    className={`flex items-center p-3 rounded-lg transition-colors ${location === \"/\" ? \"bg-blue-600 text-white\" : \"text-gray-600 hover:bg-gray-100\"}`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <span>خانه</span>\n                  </Link>\n                  <Link \n                    href=\"/courses\" \n                    className={`flex items-center p-3 rounded-lg transition-colors ${location === \"/courses\" ? \"bg-blue-600 text-white\" : \"text-gray-600 hover:bg-gray-100\"}`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <span>کارگاه‌های آموزشی</span>\n                  </Link>\n                  <Link \n                    href=\"/projects\" \n                    className={`flex items-center p-3 rounded-lg transition-colors ${location === \"/projects\" ? \"bg-blue-600 text-white\" : \"text-gray-600 hover:bg-gray-100\"}`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <span>وبینارها</span>\n                  </Link>\n                  <Link \n                    href=\"/library\" \n                    className={`flex items-center p-3 rounded-lg transition-colors ${location === \"/library\" ? \"bg-blue-600 text-white\" : \"text-gray-600 hover:bg-gray-100\"}`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <span>کتابخانه</span>\n                  </Link>\n                  <Link \n                    href=\"/magazine\" \n                    className={`flex items-center p-3 rounded-lg transition-colors ${location === \"/magazine\" ? \"bg-blue-600 text-white\" : \"text-gray-600 hover:bg-gray-100\"}`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <span>مجله</span>\n                  </Link>\n                </div>\n\n                {/* Secondary Menu */}\n                <div className=\"space-y-1\">\n                  <h3 className=\"text-xs uppercase text-gray-500 font-medium mb-3\">حساب کاربری</h3>\n                  <Link \n                    href=\"/profile\" \n                    className={`flex items-center p-3 rounded-lg transition-colors ${location === \"/profile\" ? \"bg-blue-600 text-white\" : \"text-gray-600 hover:bg-gray-100\"}`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <span>پروفایل</span>\n                  </Link>\n                  <Link \n                    href=\"/cart\" \n                    className={`flex items-center p-3 rounded-lg transition-colors ${location === \"/cart\" ? \"bg-blue-600 text-white\" : \"text-gray-600 hover:bg-gray-100\"}`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <span>سبد خرید</span>\n                  </Link>\n                  <Link \n                    href=\"/favorites\" \n                    className={`flex items-center p-3 rounded-lg transition-colors ${location === \"/favorites\" ? \"bg-blue-600 text-white\" : \"text-gray-600 hover:bg-gray-100\"}`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <span>علاقه‌مندی‌ها</span>\n                  </Link>\n                  \n                  {/* User Actions */}\n                  <div className=\"border-t pt-3 mt-3\">\n                    {isAuthenticated && user ? (\n                      <div>\n                        <h3 className=\"text-xs uppercase text-gray-500 font-medium mb-3\">عملیات کاربری</h3>\n                        \n                        {/* Admin Link - Only for admin users */}\n                        {user.role === 'admin' && (\n                          <button \n                            onClick={() => {\n                              setIsMenuOpen(false);\n                              window.postMessage({ type: 'SHOW_ADMIN_PANEL' }, '*');\n                            }}\n                            className=\"flex items-center p-3 rounded-lg transition-colors text-gray-600 hover:bg-gray-100 w-full text-right mb-2\"\n                          >\n                            <span>پنل مدیریت</span>\n                          </button>\n                        )}\n                        \n                        <button \n                          onClick={() => {\n                            setIsMenuOpen(false);\n                            handleLogout();\n                          }}\n                          className=\"flex items-center p-3 rounded-lg transition-colors text-red-600 hover:bg-red-50 w-full text-right\"\n                        >\n                          <LogOut className=\"h-4 w-4 ml-2\" />\n                          <span>خروج</span>\n                        </button>\n                      </div>\n                    ) : (\n                      <div>\n                        <h3 className=\"text-xs uppercase text-gray-500 font-medium mb-3\">احراز هویت</h3>\n                        <button \n                          onClick={() => {\n                            setIsMenuOpen(false);\n                            window.postMessage({ type: 'SWITCH_TAB', tab: 'profile' }, '*');\n                          }}\n                          className=\"flex items-center p-3 rounded-lg transition-colors text-green-600 hover:bg-green-50 w-full text-right\"\n                        >\n                          <User className=\"h-4 w-4 ml-2\" />\n                          <span>ورود / ثبت نام</span>\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n}","size_bytes":13535},"client/src/components/layout/MobileNavbar.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { Home, Grid3X3, User, ShoppingCart, Heart, Info } from \"lucide-react\";\n\nexport default function MobileNavbar() {\n  const [location] = useLocation();\n  \n  const isActive = (path: string) => location === path;\n  const isCategoryActive = () => {\n    return ['/courses', '/projects', '/library', '/magazine', '/categories'].includes(location);\n  };\n  \n  return (\n    <nav className=\"md:hidden fixed bottom-0 left-0 right-0 bg-white border-t border-neutral-200 px-2 py-3 z-20\" dir=\"rtl\">\n      <div className=\"flex justify-around items-center\">\n        {/* خانه */}\n        <Link href=\"/\" className={`relative flex flex-col items-center p-2 transition-all duration-200 ${isActive('/') ? 'text-primary' : 'text-neutral-400'}`}>\n          <Home className=\"h-5 w-5\" />\n          <span className=\"text-xs mt-1\">خانه</span>\n          {isActive('/') && (\n            <div className=\"absolute -top-1 w-2 h-2 bg-primary rounded-full\"></div>\n          )}\n        </Link>\n\n        {/* دسته‌بندی‌ها (۴ خانه) */}\n        <Link href=\"/categories\" className={`relative flex flex-col items-center p-2 transition-all duration-200 ${isCategoryActive() ? 'text-primary' : 'text-neutral-400'}`}>\n          <Grid3X3 className=\"h-5 w-5\" />\n          <span className=\"text-xs mt-1\">دسته‌بندی</span>\n          {isCategoryActive() && (\n            <div className=\"absolute -top-1 w-2 h-2 bg-primary rounded-full\"></div>\n          )}\n        </Link>\n\n        {/* درباره ما */}\n        <button \n          onClick={() => window.postMessage({ type: 'SWITCH_TAB', tab: 'about-us' }, '*')}\n          className={`relative flex flex-col items-center p-2 transition-all duration-200 ${isActive('/about-us') ? 'text-primary' : 'text-neutral-400'}`}\n        >\n          <Info className=\"h-5 w-5\" />\n          <span className=\"text-xs mt-1\">درباره ما</span>\n          {isActive('/about-us') && (\n            <div className=\"absolute -top-1 w-2 h-2 bg-primary rounded-full\"></div>\n          )}\n        </button>\n\n        {/* سبد خرید */}\n        <Link href=\"/cart\" className={`relative flex flex-col items-center p-2 transition-all duration-200 ${isActive('/cart') ? 'text-primary' : 'text-neutral-400'}`}>\n          <ShoppingCart className=\"h-5 w-5\" />\n          <span className=\"text-xs mt-1\">سبد خرید</span>\n          {isActive('/cart') && (\n            <div className=\"absolute -top-1 w-2 h-2 bg-primary rounded-full\"></div>\n          )}\n          {/* نشانگر تعداد آیتم‌ها */}\n          <div className=\"absolute -top-1 -left-1 w-4 h-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n            3\n          </div>\n        </Link>\n\n        {/* علاقه‌مندی‌ها */}\n        <Link href=\"/favorites\" className={`relative flex flex-col items-center p-2 transition-all duration-200 ${isActive('/favorites') ? 'text-primary' : 'text-neutral-400'}`}>\n          <Heart className=\"h-5 w-5\" />\n          <span className=\"text-xs mt-1\">علاقه‌مندی</span>\n          {isActive('/favorites') && (\n            <div className=\"absolute -top-1 w-2 h-2 bg-primary rounded-full\"></div>\n          )}\n        </Link>\n\n        {/* پروفایل */}\n        <Link href=\"/profile\" className={`relative flex flex-col items-center p-2 transition-all duration-200 ${isActive('/profile') ? 'text-primary' : 'text-neutral-400'}`}>\n          <User className=\"h-5 w-5\" />\n          <span className=\"text-xs mt-1\">پروفایل</span>\n          {isActive('/profile') && (\n            <div className=\"absolute -top-1 w-2 h-2 bg-primary rounded-full\"></div>\n          )}\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":3737},"client/src/components/layout/Sidebar.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { type UserProfile, type NavLink } from \"@/lib/types\";\nimport { useMemo } from \"react\";\n\ninterface SidebarProps {\n  user: UserProfile;\n}\n\nexport default function Sidebar({ user }: SidebarProps) {\n  const [location] = useLocation();\n  \n  const mainNavLinks: NavLink[] = useMemo(() => [\n    { \n      label: \"خانه\", \n      path: \"/\", \n      icon: \"home\", \n      active: location === \"/\" \n    },\n    { \n      label: \"دوره‌های من\", \n      path: \"/courses\", \n      icon: \"menu_book\", \n      active: location === \"/courses\" \n    },\n    { \n      label: \"پروژه‌ها\", \n      path: \"/projects\", \n      icon: \"assignment\", \n      active: location === \"/projects\" \n    },\n    { \n      label: \"کتابخانه\", \n      path: \"/library\", \n      icon: \"library_books\", \n      active: location === \"/library\" \n    },\n    { \n      label: \"پنل مدیریت\", \n      path: \"/admin\", \n      icon: \"dashboard\", \n      active: location === \"/admin\" \n    },\n  ], [location]);\n  \n  const accountNavLinks: NavLink[] = useMemo(() => [\n    { \n      label: \"پروفایل\", \n      path: \"/profile\", \n      icon: \"person\", \n      active: location === \"/profile\" \n    },\n    { \n      label: \"تنظیمات\", \n      path: \"/settings\", \n      icon: \"settings\", \n      active: location === \"/settings\" \n    },\n    { \n      label: \"راهنما\", \n      path: \"/help\", \n      icon: \"help\", \n      active: location === \"/help\" \n    },\n  ], [location]);\n\n  return (\n    <aside className=\"hidden md:block sidebar w-64 bg-white border-l border-neutral-200 overflow-y-auto\" dir=\"rtl\">\n      <div className=\"p-4\">\n        <div className=\"bg-neutral-100 rounded-lg p-3 mb-6\">\n          <div className=\"flex items-center mb-2\">\n            <div className=\"h-10 w-10 rounded-full bg-primary flex items-center justify-center text-white font-medium ml-3\">\n              {user.name.split(' ').map(name => name[0]).join('')}\n            </div>\n            <div>\n              <p className=\"font-medium text-neutral-500\">{user.name}</p>\n              <p className=\"text-sm text-neutral-300\">عضویت {user.membershipType}</p>\n            </div>\n          </div>\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <p className=\"text-xs text-neutral-300\">پیشرفت</p>\n              <p className=\"font-medium text-neutral-500\">{user.progress}%</p>\n            </div>\n            <div className=\"h-2 w-24 bg-neutral-200 rounded-full overflow-hidden\">\n              <div className=\"h-full bg-primary rounded-full\" style={{ width: `${user.progress}%` }}></div>\n            </div>\n          </div>\n        </div>\n        \n        <nav>\n          <p className=\"text-xs uppercase text-neutral-300 font-medium mb-2\">منوی اصلی</p>\n          <ul className=\"space-y-1 mb-6\">\n            <li>\n              <Link href=\"/\" className=\"flex items-center p-2 rounded-lg text-neutral-400 hover:bg-neutral-100\">\n                <span className=\"material-icons ml-3\">home</span>\n                <span>خانه</span>\n              </Link>\n            </li>\n            <li>\n              <Link href=\"/courses\" className=\"flex items-center p-2 rounded-lg text-neutral-400 hover:bg-neutral-100\">\n                <span className=\"material-icons ml-3\">menu_book</span>\n                <span>کارگاه‌های آموزشی</span>\n              </Link>\n            </li>\n            <li>\n              <Link href=\"/projects\" className=\"flex items-center p-2 rounded-lg text-neutral-400 hover:bg-neutral-100\">\n                <span className=\"material-icons ml-3\">assignment</span>\n                <span>وبینارها</span>\n              </Link>\n            </li>\n            <li>\n              <Link href=\"/library\" className=\"flex items-center p-2 rounded-lg text-neutral-400 hover:bg-neutral-100\">\n                <span className=\"material-icons ml-3\">library_books</span>\n                <span>کتابخانه</span>\n              </Link>\n            </li>\n            <li>\n              <Link href=\"/magazine\" className=\"flex items-center p-2 rounded-lg text-neutral-400 hover:bg-neutral-100\">\n                <span className=\"material-icons ml-3\">auto_stories</span>\n                <span>فصلنامه رویش سبز</span>\n              </Link>\n            </li>\n          </ul>\n          \n          <p className=\"text-xs uppercase text-neutral-300 font-medium mb-2\">حساب کاربری</p>\n          <ul className=\"space-y-1\">\n            <li>\n              <Link href=\"/admin\" className=\"flex items-center p-2 rounded-lg text-neutral-400 hover:bg-neutral-100\">\n                <span className=\"material-icons ml-3\">dashboard</span>\n                <span>پنل مدیریت</span>\n              </Link>\n            </li>\n            <li>\n              <Link href=\"/profile\" className=\"flex items-center p-2 rounded-lg text-neutral-400 hover:bg-neutral-100\">\n                <span className=\"material-icons ml-3\">person</span>\n                <span>پروفایل</span>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </aside>\n  );\n}\n","size_bytes":5157},"client/src/components/media/MediaPlayer.tsx":{"content":"import { useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { type MediaPlayerProps } from \"@/lib/types\";\nimport { Link } from \"wouter\";\nimport { X, Bookmark, Share } from \"lucide-react\";\n\nexport default function MediaPlayer({ media, modules }: MediaPlayerProps) {\n  const [playing, setPlaying] = useState(false);\n  \n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg w-full max-w-4xl max-h-[90vh] overflow-auto\">\n        <div className=\"flex items-center justify-between p-4 border-b\">\n          <h2 className=\"text-xl font-semibold\">پخش رسانه</h2>\n          <Link href=\"/\">\n            <button className=\"p-2 hover:bg-gray-100 rounded-full\">\n              <X className=\"h-5 w-5\" />\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-md\">\n          <div className=\"p-0\">\n            <div className=\"bg-gray-500 relative aspect-video\">\n              <ReactPlayer\n                url={media.contentUrl}\n                width=\"100%\"\n                height=\"100%\"\n                controls\n                playing={playing}\n                onPlay={() => setPlaying(true)}\n                onPause={() => setPlaying(false)}\n                config={{\n                  file: {\n                    attributes: {\n                      controlsList: 'nodownload'\n                    }\n                  }\n                }}\n              />\n            </div>\n            \n            <div className=\"p-4\">\n              <h3 className=\"font-medium text-gray-700 mb-1\">{media.title}</h3>\n              <p className=\"text-sm text-gray-500 mb-4\">{media.description}</p>\n              \n              <div className=\"flex flex-col sm:flex-row sm:items-center justify-between mb-4\">\n                <div className=\"flex items-center mb-2 sm:mb-0\">\n                  <img src={media.instructorAvatar} alt={media.instructorName} className=\"w-10 h-10 rounded-full object-cover\" />\n                  <div className=\"ml-3\">\n                    <p className=\"text-sm font-medium text-gray-700\">{media.instructorName}</p>\n                    <p className=\"text-xs text-gray-500\">{media.instructorTitle}</p>\n                  </div>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button className=\"flex items-center text-sm text-gray-600 px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-50\">\n                    <Bookmark className=\"h-4 w-4 mr-1\" />\n                    ذخیره\n                  </button>\n                  <button className=\"flex items-center text-sm text-gray-600 px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-50\">\n                    <Share className=\"h-4 w-4 mr-1\" />\n                    اشتراک\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {modules && modules.length > 0 && (\n            <div className=\"p-4 border-t bg-gray-50\">\n              <h4 className=\"text-lg font-medium mb-3\">فهرست محتوا</h4>\n              <div className=\"space-y-2\">\n                {modules.map((module, index) => (\n                  <div key={module.id} className=\"flex items-center p-2 bg-white rounded border hover:bg-gray-50\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center text-sm font-medium text-blue-600 mr-3\">\n                      {index + 1}\n                    </div>\n                    <div className=\"flex-1\">\n                      <h5 className=\"font-medium text-gray-800\">{module.title}</h5>\n                      <p className=\"text-sm text-gray-500\">{module.duration}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":3954},"client/src/components/project/ProjectCard.tsx":{"content":"import { Link } from \"wouter\";\nimport { type ProjectCardProps } from \"@/lib/types\";\n\nexport default function ProjectCard({\n  id,\n  title,\n  description,\n  thumbnailUrl,\n  type,\n  dueDate,\n  pages,\n  isLocked\n}: ProjectCardProps) {\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm overflow-hidden relative\" dir=\"rtl\">\n      {isLocked && (\n        <div className=\"locked-overlay rounded-xl absolute inset-0 bg-gray-500/70 flex items-center justify-center z-10\">\n          <div className=\"text-center\">\n            <span className=\"text-white text-3xl mb-2\">🔒</span>\n            <p className=\"text-white font-medium mb-2\">محتوای ویژه</p>\n            <button className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md\">دسترسی</button>\n          </div>\n        </div>\n      )}\n      \n      <img src={thumbnailUrl} alt={title} className=\"w-full h-36 object-cover\" />\n      <div className=\"p-4\">\n        <div className=\"flex justify-between items-start mb-2\">\n          <h3 className=\"font-medium text-gray-600\">{title}</h3>\n          <span className={`px-2 py-1 text-white text-xs rounded-full ${\n            type === \"project\" ? \"bg-blue-500\" : \"bg-gray-400\"\n          }`}>\n            {type === \"project\" ? \"پروژه\" : \"مجله\"}\n          </span>\n        </div>\n        <p className=\"text-sm text-gray-400 mb-3\">{description}</p>\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            {type === \"project\" && dueDate && (\n              <span className=\"text-xs text-gray-400\">مهلت: {dueDate}</span>\n            )}\n            {type === \"magazine\" && pages && (\n              <span className=\"text-xs text-gray-400\">{pages} صفحه</span>\n            )}\n          </div>\n          <Link href={type === \"project\" ? `/projects/${id}` : `/documents/${id}`}>\n            <button className={`px-3 py-1 text-white text-sm rounded-md transition-colors ${\n              type === \"project\" ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 hover:bg-gray-500\"\n            }`}>\n              مشاهده\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":2190},"client/src/components/protection/ContentProtection.tsx":{"content":"import { useEffect, ReactNode } from 'react';\n\ninterface ContentProtectionProps {\n  children: ReactNode;\n  allowScreenshot?: boolean;\n  allowCopy?: boolean;\n  allowPrint?: boolean;\n  watermarkText?: string;\n  protectionLevel?: 'none' | 'basic' | 'strict';\n}\n\nexport default function ContentProtection({\n  children,\n  allowScreenshot = true,\n  allowCopy = true,\n  allowPrint = true,\n  watermarkText,\n  protectionLevel = 'none'\n}: ContentProtectionProps) {\n\n  useEffect(() => {\n    if (protectionLevel === 'none') return;\n\n    const preventScreenshot = () => {\n      if (!allowScreenshot) {\n        // جلوگیری از کلیدهای اسکرین‌شات\n        const handleKeyDown = (e: KeyboardEvent) => {\n          // Print Screen\n          if (e.key === 'PrintScreen') {\n            e.preventDefault();\n            alert('اسکرین‌شات از این محتوا مجاز نیست');\n            return false;\n          }\n          \n          // Ctrl+Shift+S (Windows/Linux)\n          if (e.ctrlKey && e.shiftKey && e.key === 'S') {\n            e.preventDefault();\n            alert('اسکرین‌شات از این محتوا مجاز نیست');\n            return false;\n          }\n          \n          // Cmd+Shift+3,4,5 (Mac)\n          if (e.metaKey && e.shiftKey && ['3', '4', '5'].includes(e.key)) {\n            e.preventDefault();\n            alert('اسکرین‌شات از این محتوا مجاز نیست');\n            return false;\n          }\n\n          // F12 (Developer Tools)\n          if (e.key === 'F12') {\n            e.preventDefault();\n            alert('ابزارهای توسعه‌دهنده مجاز نیست');\n            return false;\n          }\n\n          // Ctrl+Shift+I (Developer Tools)\n          if (e.ctrlKey && e.shiftKey && e.key === 'I') {\n            e.preventDefault();\n            alert('ابزارهای توسعه‌دهنده مجاز نیست');\n            return false;\n          }\n\n          // Ctrl+U (View Source)\n          if (e.ctrlKey && e.key === 'u') {\n            e.preventDefault();\n            alert('مشاهده کد منبع مجاز نیست');\n            return false;\n          }\n        };\n\n        document.addEventListener('keydown', handleKeyDown);\n        \n        // غیرفعال کردن کلیک راست\n        const handleContextMenu = (e: MouseEvent) => {\n          e.preventDefault();\n          alert('کلیک راست در این محتوا مجاز نیست');\n          return false;\n        };\n\n        document.addEventListener('contextmenu', handleContextMenu);\n\n        return () => {\n          document.removeEventListener('keydown', handleKeyDown);\n          document.removeEventListener('contextmenu', handleContextMenu);\n        };\n      }\n    };\n\n    const preventCopy = () => {\n      if (!allowCopy) {\n        const handleCopy = (e: ClipboardEvent) => {\n          e.preventDefault();\n          alert('کپی کردن این محتوا مجاز نیست');\n          return false;\n        };\n\n        const handleSelectStart = (e: Event) => {\n          e.preventDefault();\n          return false;\n        };\n\n        document.addEventListener('copy', handleCopy);\n        document.addEventListener('selectstart', handleSelectStart);\n\n        // جلوگیری از Ctrl+A, Ctrl+C, Ctrl+V\n        const handleKeyDown = (e: KeyboardEvent) => {\n          if (e.ctrlKey && ['a', 'c', 'v', 'x'].includes(e.key.toLowerCase())) {\n            e.preventDefault();\n            alert('این عملیات مجاز نیست');\n            return false;\n          }\n        };\n\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n          document.removeEventListener('copy', handleCopy);\n          document.removeEventListener('selectstart', handleSelectStart);\n          document.removeEventListener('keydown', handleKeyDown);\n        };\n      }\n    };\n\n    const preventPrint = () => {\n      if (!allowPrint) {\n        const handlePrint = (e: Event) => {\n          e.preventDefault();\n          alert('چاپ این محتوا مجاز نیست');\n          return false;\n        };\n\n        const handleKeyDown = (e: KeyboardEvent) => {\n          if (e.ctrlKey && e.key === 'p') {\n            e.preventDefault();\n            alert('چاپ این محتوا مجاز نیست');\n            return false;\n          }\n        };\n\n        window.addEventListener('beforeprint', handlePrint);\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n          window.removeEventListener('beforeprint', handlePrint);\n          document.removeEventListener('keydown', handleKeyDown);\n        };\n      }\n    };\n\n    // اعمال حفاظت‌ها\n    const cleanupFunctions: (() => void)[] = [];\n    \n    const screenshotCleanup = preventScreenshot();\n    if (screenshotCleanup) cleanupFunctions.push(screenshotCleanup);\n    \n    const copyCleanup = preventCopy();\n    if (copyCleanup) cleanupFunctions.push(copyCleanup);\n    \n    const printCleanup = preventPrint();\n    if (printCleanup) cleanupFunctions.push(printCleanup);\n\n    // تشخیص ابزارهای توسعه‌دهنده\n    if (protectionLevel === 'strict') {\n      let devtools = false;\n      const threshold = 160;\n\n      const detectDevTools = () => {\n        if (\n          window.outerHeight - window.innerHeight > threshold ||\n          window.outerWidth - window.innerWidth > threshold\n        ) {\n          if (!devtools) {\n            devtools = true;\n            alert('لطفا ابزارهای توسعه‌دهنده را ببندید');\n            // می‌توانید کاربر را به صفحه دیگری هدایت کنید\n          }\n        } else {\n          devtools = false;\n        }\n      };\n\n      const interval = setInterval(detectDevTools, 500);\n      cleanupFunctions.push(() => clearInterval(interval));\n    }\n\n    // تمیز کردن در زمان unmount\n    return () => {\n      cleanupFunctions.forEach(cleanup => cleanup());\n    };\n  }, [allowScreenshot, allowCopy, allowPrint, protectionLevel]);\n\n  // اضافه کردن واتر مارک\n  const containerStyle = watermarkText ? {\n    position: 'relative' as const,\n    '::before': {\n      content: `\"${watermarkText}\"`,\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%) rotate(-45deg)',\n      fontSize: '2rem',\n      color: 'rgba(0, 0, 0, 0.1)',\n      pointerEvents: 'none',\n      zIndex: 1000,\n      userSelect: 'none'\n    }\n  } : {};\n\n  return (\n    <div \n      className={`content-protection ${protectionLevel !== 'none' ? 'protected' : ''}`}\n      style={{\n        userSelect: allowCopy ? 'auto' : 'none',\n        WebkitUserSelect: allowCopy ? 'auto' : 'none',\n        MozUserSelect: allowCopy ? 'auto' : 'none',\n        ...containerStyle\n      } as React.CSSProperties}\n    >\n      {watermarkText && (\n        <div className=\"absolute inset-0 pointer-events-none z-10 overflow-hidden\">\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div \n              className=\"text-6xl font-bold text-gray-200 opacity-10 rotate-45 select-none\"\n              style={{ \n                userSelect: 'none',\n                WebkitUserSelect: 'none',\n                MozUserSelect: 'none',\n                msUserSelect: 'none'\n              }}\n            >\n              {watermarkText}\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"relative z-0\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\n// Hook برای کنترل دانلود\nexport function useDownloadControl(allowDownload: boolean = true) {\n  const downloadFile = (url: string, filename: string) => {\n    if (!allowDownload) {\n      alert('دانلود این فایل مجاز نیست');\n      return;\n    }\n\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return { downloadFile, allowDownload };\n}","size_bytes":8070},"client/src/components/ui/simple-card.tsx":{"content":"interface CardProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\ninterface CardHeaderProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\ninterface CardContentProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\ninterface CardTitleProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\ninterface CardDescriptionProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Card = ({ children, className = \"\" }: CardProps) => (\n  <div className={`bg-white rounded-lg border shadow-sm ${className}`}>\n    {children}\n  </div>\n);\n\nexport const CardHeader = ({ children, className = \"\" }: CardHeaderProps) => (\n  <div className={`p-6 pb-4 ${className}`}>\n    {children}\n  </div>\n);\n\nexport const CardContent = ({ children, className = \"\" }: CardContentProps) => (\n  <div className={`p-6 pt-0 ${className}`}>\n    {children}\n  </div>\n);\n\nexport const CardTitle = ({ children, className = \"\" }: CardTitleProps) => (\n  <h3 className={`text-lg font-semibold ${className}`}>\n    {children}\n  </h3>\n);\n\nexport const CardDescription = ({ children, className = \"\" }: CardDescriptionProps) => (\n  <p className={`text-sm text-gray-600 mt-1 ${className}`}>\n    {children}\n  </p>\n);","size_bytes":1213},"client/src/pages/admin/appearance.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ColorPicker } from \"@/components/ui/color-picker\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Palette, Eye, Upload, Save } from \"lucide-react\";\n\nexport default function AppearancePage() {\n  const [colors, setColors] = useState({\n    primary: \"#578057\",\n    secondary: \"#9CB891\",\n    accent: \"#B8E6B8\",\n    background: \"#FAFAFA\",\n    text: \"#1F2937\"\n  });\n\n  const [logo, setLogo] = useState(\"\");\n  const [siteName, setSiteName] = useState(\"پیستاط\");\n  const [showBranding, setShowBranding] = useState(true);\n\n  const handleColorChange = (colorKey: string, value: string) => {\n    setColors(prev => ({\n      ...prev,\n      [colorKey]: value\n    }));\n  };\n\n  const handleSave = () => {\n    // Save appearance settings\n    console.log(\"Saving appearance settings:\", { colors, logo, siteName, showBranding });\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">ظاهر سایت</h1>\n          <p className=\"text-gray-600 mt-1\">تنظیمات ظاهری و برندینگ سایت</p>\n        </div>\n        <Button onClick={handleSave} className=\"bg-green-600 hover:bg-green-700\">\n          <Save className=\"w-4 h-4 ml-2\" />\n          ذخیره تغییرات\n        </Button>\n      </div>\n\n      <Tabs defaultValue=\"colors\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"colors\">رنگ‌ها</TabsTrigger>\n          <TabsTrigger value=\"branding\">برندینگ</TabsTrigger>\n          <TabsTrigger value=\"layout\">طرح‌بندی</TabsTrigger>\n          <TabsTrigger value=\"preview\">پیش‌نمایش</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"colors\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Palette className=\"w-5 h-5 ml-2\" />\n                تنظیمات رنگ\n              </CardTitle>\n              <CardDescription>\n                رنگ‌های اصلی سایت و آیکون‌ها را تنظیم کنید\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"primary-color\">رنگ اصلی (آیکون‌ها)</Label>\n                    <div className=\"flex items-center space-x-3 rtl:space-x-reverse mt-2\">\n                      <Input\n                        id=\"primary-color\"\n                        type=\"color\"\n                        value={colors.primary}\n                        onChange={(e) => handleColorChange('primary', e.target.value)}\n                        className=\"w-16 h-10 p-1 border rounded\"\n                      />\n                      <Input\n                        value={colors.primary}\n                        onChange={(e) => handleColorChange('primary', e.target.value)}\n                        placeholder=\"#578057\"\n                        className=\"flex-1\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"secondary-color\">رنگ فرعی</Label>\n                    <div className=\"flex items-center space-x-3 rtl:space-x-reverse mt-2\">\n                      <Input\n                        id=\"secondary-color\"\n                        type=\"color\"\n                        value={colors.secondary}\n                        onChange={(e) => handleColorChange('secondary', e.target.value)}\n                        className=\"w-16 h-10 p-1 border rounded\"\n                      />\n                      <Input\n                        value={colors.secondary}\n                        onChange={(e) => handleColorChange('secondary', e.target.value)}\n                        placeholder=\"#9CB891\"\n                        className=\"flex-1\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"accent-color\">رنگ تاکید</Label>\n                    <div className=\"flex items-center space-x-3 rtl:space-x-reverse mt-2\">\n                      <Input\n                        id=\"accent-color\"\n                        type=\"color\"\n                        value={colors.accent}\n                        onChange={(e) => handleColorChange('accent', e.target.value)}\n                        className=\"w-16 h-10 p-1 border rounded\"\n                      />\n                      <Input\n                        value={colors.accent}\n                        onChange={(e) => handleColorChange('accent', e.target.value)}\n                        placeholder=\"#B8E6B8\"\n                        className=\"flex-1\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"background-color\">رنگ پس‌زمینه</Label>\n                    <div className=\"flex items-center space-x-3 rtl:space-x-reverse mt-2\">\n                      <Input\n                        id=\"background-color\"\n                        type=\"color\"\n                        value={colors.background}\n                        onChange={(e) => handleColorChange('background', e.target.value)}\n                        className=\"w-16 h-10 p-1 border rounded\"\n                      />\n                      <Input\n                        value={colors.background}\n                        onChange={(e) => handleColorChange('background', e.target.value)}\n                        placeholder=\"#FAFAFA\"\n                        className=\"flex-1\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"text-color\">رنگ متن</Label>\n                    <div className=\"flex items-center space-x-3 rtl:space-x-reverse mt-2\">\n                      <Input\n                        id=\"text-color\"\n                        type=\"color\"\n                        value={colors.text}\n                        onChange={(e) => handleColorChange('text', e.target.value)}\n                        className=\"w-16 h-10 p-1 border rounded\"\n                      />\n                      <Input\n                        value={colors.text}\n                        onChange={(e) => handleColorChange('text', e.target.value)}\n                        placeholder=\"#1F2937\"\n                        className=\"flex-1\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-t pt-6\">\n                <h3 className=\"text-lg font-medium mb-4\">پیش‌نمایش رنگ‌ها</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                  {Object.entries(colors).map(([key, value]) => (\n                    <div key={key} className=\"text-center\">\n                      <div\n                        className=\"w-16 h-16 rounded-lg mx-auto mb-2 border\"\n                        style={{ backgroundColor: value }}\n                      ></div>\n                      <p className=\"text-sm text-gray-600 capitalize\">{key}</p>\n                      <p className=\"text-xs text-gray-400\">{value}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"branding\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>تنظیمات برند</CardTitle>\n              <CardDescription>\n                لوگو، نام سایت و تنظیمات برندینگ\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div>\n                <Label htmlFor=\"site-name\">نام سایت</Label>\n                <Input\n                  id=\"site-name\"\n                  value={siteName}\n                  onChange={(e) => setSiteName(e.target.value)}\n                  placeholder=\"پیستاط\"\n                  className=\"mt-2\"\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"logo-upload\">لوگوی سایت</Label>\n                <div className=\"mt-2 space-y-4\">\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n                    {logo ? (\n                      <img src={logo} alt=\"لوگو\" className=\"mx-auto h-20 object-contain\" />\n                    ) : (\n                      <div>\n                        <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n                        <p className=\"mt-2 text-sm text-gray-600\">فایل لوگو را انتخاب کنید</p>\n                      </div>\n                    )}\n                  </div>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => {\n                      const file = e.target.files?.[0];\n                      if (file) {\n                        const reader = new FileReader();\n                        reader.onload = (e) => setLogo(e.target?.result as string);\n                        reader.readAsDataURL(file);\n                      }\n                    }}\n                    className=\"block w-full text-sm text-gray-500 file:ml-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label htmlFor=\"show-branding\">نمایش برندینگ</Label>\n                  <div className=\"text-sm text-gray-500\">\n                    نمایش نام و لوگوی سایت در هدر\n                  </div>\n                </div>\n                <Switch\n                  id=\"show-branding\"\n                  checked={showBranding}\n                  onCheckedChange={setShowBranding}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"layout\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>تنظیمات طرح‌بندی</CardTitle>\n              <CardDescription>\n                طرح‌بندی صفحات و چیدمان عناصر\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"text-center py-12 text-gray-500\">\n                <div className=\"w-16 h-16 bg-gray-200 rounded-lg mx-auto mb-4\"></div>\n                <p>تنظیمات طرح‌بندی به زودی اضافه می‌شود</p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"preview\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Eye className=\"w-5 h-5 ml-2\" />\n                پیش‌نمایش تغییرات\n              </CardTitle>\n              <CardDescription>\n                مشاهده تأثیر تغییرات روی ظاهر سایت\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"border rounded-lg p-6\" style={{ backgroundColor: colors.background }}>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <h2 className=\"text-xl font-bold\" style={{ color: colors.text }}>\n                      {siteName}\n                    </h2>\n                    <div className=\"flex space-x-2 rtl:space-x-reverse\">\n                      <div \n                        className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n                        style={{ backgroundColor: colors.primary }}\n                      >\n                        <span className=\"text-white text-sm\">🎓</span>\n                      </div>\n                      <div \n                        className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n                        style={{ backgroundColor: colors.primary }}\n                      >\n                        <span className=\"text-white text-sm\">📚</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-white rounded-lg p-4 border\">\n                    <h3 className=\"font-medium mb-2\" style={{ color: colors.text }}>\n                      نمونه کارت محتوا\n                    </h3>\n                    <p className=\"text-sm text-gray-600 mb-3\">\n                      این یک نمونه از محتوای سایت است که با رنگ‌های جدید نمایش داده می‌شود.\n                    </p>\n                    <button \n                      className=\"px-4 py-2 rounded text-white text-sm\"\n                      style={{ backgroundColor: colors.primary }}\n                    >\n                      دکمه نمونه\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}","size_bytes":14046},"client/src/pages/admin/dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Users, BookOpen, FileText, Image, Settings, BarChart3 } from \"lucide-react\";\n\nexport default function AdminDashboard() {\n  const { data: stats, isLoading } = useQuery({\n    queryKey: [\"/api/admin/stats\"],\n  });\n\n  const quickActions = [\n    {\n      title: \"ایجاد درس جدید\",\n      description: \"درس جدید اضافه کنید\",\n      icon: BookOpen,\n      href: \"/admin/courses/new\",\n      color: \"bg-blue-500\"\n    },\n    {\n      title: \"ایجاد کارگاه\",\n      description: \"کارگاه آموزشی جدید\",\n      icon: Users,\n      href: \"/admin/workshops/new\",\n      color: \"bg-green-500\"\n    },\n    {\n      title: \"ایجاد نوشته\",\n      description: \"مقاله یا نوشته جدید\",\n      icon: FileText,\n      href: \"/admin/posts/new\",\n      color: \"bg-purple-500\"\n    },\n    {\n      title: \"مدیریت رسانه\",\n      description: \"آپلود تصاویر و فایل‌ها\",\n      icon: Image,\n      href: \"/admin/media\",\n      color: \"bg-orange-500\"\n    }\n  ];\n\n  const recentActivities = [\n    { action: \"درس جدید ایجاد شد\", user: \"مدیر\", time: \"۲ ساعت پیش\" },\n    { action: \"کارگاه به‌روزرسانی شد\", user: \"مدیر\", time: \"۵ ساعت پیش\" },\n    { action: \"تصویر جدید آپلود شد\", user: \"مدیر\", time: \"۱ روز پیش\" },\n    { action: \"تنظیمات تغییر کرد\", user: \"مدیر\", time: \"۲ روز پیش\" }\n  ];\n\n  if (isLoading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"animate-pulse space-y-4\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n            {[...Array(4)].map((_, i) => (\n              <div key={i} className=\"h-32 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">پیشخوان</h1>\n          <p className=\"text-gray-600 mt-1\">مدیریت سیستم آموزشی پیستاط</p>\n        </div>\n        <Button className=\"bg-green-600 hover:bg-green-700\">\n          <Settings className=\"w-4 h-4 ml-2\" />\n          تنظیمات\n        </Button>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">کل درس‌ها</CardTitle>\n            <BookOpen className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats?.totalCourses || 12}</div>\n            <p className=\"text-xs text-muted-foreground\">+2 از ماه گذشته</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">کارگاه‌ها</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats?.totalWorkshops || 8}</div>\n            <p className=\"text-xs text-muted-foreground\">+1 از ماه گذشته</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">نوشته‌ها</CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats?.totalPosts || 24}</div>\n            <p className=\"text-xs text-muted-foreground\">+5 از ماه گذشته</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">فایل‌های رسانه</CardTitle>\n            <Image className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats?.totalMedia || 156}</div>\n            <p className=\"text-xs text-muted-foreground\">+12 از ماه گذشته</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Quick Actions */}\n        <div className=\"lg:col-span-2\">\n          <Card>\n            <CardHeader>\n              <CardTitle>اقدامات سریع</CardTitle>\n              <CardDescription>\n                دسترسی سریع به عملیات مهم\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 gap-4\">\n                {quickActions.map((action, index) => (\n                  <div\n                    key={index}\n                    className=\"flex items-center p-4 border rounded-lg hover:bg-gray-50 cursor-pointer transition-colors\"\n                  >\n                    <div className={`${action.color} p-3 rounded-lg ml-4`}>\n                      <action.icon className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">{action.title}</h3>\n                      <p className=\"text-sm text-gray-500\">{action.description}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Recent Activity */}\n        <Card>\n          <CardHeader>\n            <CardTitle>فعالیت‌های اخیر</CardTitle>\n            <CardDescription>\n              آخرین تغییرات سیستم\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {recentActivities.map((activity, index) => (\n                <div key={index} className=\"flex items-start space-x-3 rtl:space-x-reverse\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2\"></div>\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      {activity.action}\n                    </p>\n                    <p className=\"text-sm text-gray-500\">\n                      توسط {activity.user} • {activity.time}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Charts Section */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>آمار بازدید</CardTitle>\n            <CardDescription>\n              بازدید از محتوا در ۳۰ روز گذشته\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-64 flex items-center justify-center bg-gray-50 rounded\">\n              <div className=\"text-center\">\n                <BarChart3 className=\"w-12 h-12 text-gray-400 mx-auto mb-2\" />\n                <p className=\"text-gray-500\">نمودار آمار</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>پربازدیدترین محتوا</CardTitle>\n            <CardDescription>\n              محتوای محبوب در این ماه\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {[\n                { title: \"کشاورزی هوشمند\", views: \"1,234\", type: \"درس\" },\n                { title: \"مدیریت مزرعه\", views: \"987\", type: \"کارگاه\" },\n                { title: \"سیستم آبیاری\", views: \"756\", type: \"درس\" },\n                { title: \"کودهای ارگانیک\", views: \"543\", type: \"مقاله\" }\n              ].map((item, index) => (\n                <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded\">\n                  <div>\n                    <p className=\"font-medium text-gray-900\">{item.title}</p>\n                    <p className=\"text-sm text-gray-500\">{item.type}</p>\n                  </div>\n                  <div className=\"text-sm font-medium text-green-600\">\n                    {item.views} بازدید\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":9084},"client/src/pages/admin/media.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Upload, Search, Image, FileText, Film, Music, Trash2, Copy, Download, Eye } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface MediaFile {\n  id: number;\n  filename: string;\n  originalName: string;\n  size: number;\n  type: string;\n  url: string;\n  uploadedAt: string;\n}\n\nexport default function MediaPage() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState<MediaFile | null>(null);\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const { data: mediaFiles, isLoading } = useQuery({\n    queryKey: [\"/api/admin/media\", searchQuery],\n  });\n\n  const uploadMutation = useMutation({\n    mutationFn: async (file: File) => {\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      const response = await fetch('/api/admin/media/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در آپلود فایل');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/media\"] });\n      setUploadDialogOpen(false);\n      toast({\n        title: \"موفقیت\",\n        description: \"فایل با موفقیت آپلود شد\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"خطا\",\n        description: \"خطا در آپلود فایل\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/admin/media/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف فایل');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/media\"] });\n      toast({\n        title: \"موفقیت\",\n        description: \"فایل با موفقیت حذف شد\",\n      });\n    },\n  });\n\n  const handleFileUpload = (file: File) => {\n    uploadMutation.mutate(file);\n  };\n\n  const handleCopyUrl = (url: string) => {\n    navigator.clipboard.writeText(url);\n    toast({\n      title: \"کپی شد\",\n      description: \"آدرس فایل در کلیپ‌بورد کپی شد\",\n    });\n  };\n\n  const getFileIcon = (type: string) => {\n    if (type.startsWith('image/')) return <Image className=\"w-4 h-4\" />;\n    if (type.startsWith('video/')) return <Film className=\"w-4 h-4\" />;\n    if (type.startsWith('audio/')) return <Music className=\"w-4 h-4\" />;\n    return <FileText className=\"w-4 h-4\" />;\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 بایت';\n    const k = 1024;\n    const sizes = ['بایت', 'کیلوبایت', 'مگابایت', 'گیگابایت'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Sample data for demonstration\n  const sampleMediaFiles: MediaFile[] = [\n    {\n      id: 1,\n      filename: \"logo-pistach.png\",\n      originalName: \"لوگو پیستاط.png\",\n      size: 45632,\n      type: \"image/png\",\n      url: \"/uploads/logo-pistach.png\",\n      uploadedAt: \"2024-01-15T10:30:00Z\"\n    },\n    {\n      id: 2,\n      filename: \"course-agriculture.jpg\",\n      originalName: \"دوره کشاورزی.jpg\",\n      size: 234567,\n      type: \"image/jpeg\",\n      url: \"/uploads/course-agriculture.jpg\",\n      uploadedAt: \"2024-01-14T15:45:00Z\"\n    },\n    {\n      id: 3,\n      filename: \"video-irrigation.mp4\",\n      originalName: \"آموزش آبیاری.mp4\",\n      size: 15678901,\n      type: \"video/mp4\",\n      url: \"/uploads/video-irrigation.mp4\",\n      uploadedAt: \"2024-01-13T09:20:00Z\"\n    }\n  ];\n\n  const displayFiles = mediaFiles || sampleMediaFiles;\n  const filteredFiles = displayFiles.filter(file => \n    file.originalName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    file.filename.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">مدیریت رسانه</h1>\n          <p className=\"text-gray-600 mt-1\">آپلود و مدیریت تصاویر، ویدیو و فایل‌ها</p>\n        </div>\n        \n        <Dialog open={uploadDialogOpen} onOpenChange={setUploadDialogOpen}>\n          <DialogTrigger asChild>\n            <Button className=\"bg-green-600 hover:bg-green-700\">\n              <Upload className=\"w-4 h-4 ml-2\" />\n              آپلود فایل\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>آپلود فایل جدید</DialogTitle>\n              <DialogDescription>\n                تصاویر، ویدیو، صوت یا اسناد خود را آپلود کنید\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                <Upload className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                <p className=\"text-lg font-medium text-gray-900 mb-2\">فایل را انتخاب کنید</p>\n                <p className=\"text-sm text-gray-500 mb-4\">یا فایل را اینجا بکشید</p>\n                <input\n                  type=\"file\"\n                  multiple\n                  accept=\"image/*,video/*,audio/*,.pdf,.doc,.docx\"\n                  onChange={(e) => {\n                    const files = Array.from(e.target.files || []);\n                    files.forEach(file => handleFileUpload(file));\n                  }}\n                  className=\"block w-full text-sm text-gray-500 file:ml-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-green-50 file:text-green-700 hover:file:bg-green-100\"\n                />\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <div className=\"flex items-center space-x-4 rtl:space-x-reverse\">\n        <div className=\"flex-1\">\n          <div className=\"relative\">\n            <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <Input\n              placeholder=\"جستجو در فایل‌ها...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"pr-10\"\n            />\n          </div>\n        </div>\n        <div className=\"text-sm text-gray-500\">\n          {filteredFiles.length} فایل\n        </div>\n      </div>\n\n      {isLoading ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {[...Array(8)].map((_, i) => (\n            <div key={i} className=\"animate-pulse\">\n              <div className=\"bg-gray-200 aspect-square rounded-lg mb-2\"></div>\n              <div className=\"bg-gray-200 h-4 rounded mb-1\"></div>\n              <div className=\"bg-gray-200 h-3 rounded w-2/3\"></div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {filteredFiles.map((file) => (\n            <Card key={file.id} className=\"group hover:shadow-md transition-shadow\">\n              <CardContent className=\"p-4\">\n                <div className=\"aspect-square bg-gray-100 rounded-lg mb-3 flex items-center justify-center overflow-hidden\">\n                  {file.type.startsWith('image/') ? (\n                    <img\n                      src={file.url}\n                      alt={file.originalName}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  ) : (\n                    <div className=\"text-gray-400\">\n                      {getFileIcon(file.type)}\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <h3 className=\"font-medium text-sm text-gray-900 truncate\" title={file.originalName}>\n                    {file.originalName}\n                  </h3>\n                  \n                  <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                    <span>{formatFileSize(file.size)}</span>\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {file.type.split('/')[0]}\n                    </Badge>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2 rtl:space-x-reverse opacity-0 group-hover:opacity-100 transition-opacity\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => handleCopyUrl(file.url)}\n                      className=\"flex-1 text-xs\"\n                    >\n                      <Copy className=\"w-3 h-3 ml-1\" />\n                      کپی\n                    </Button>\n                    \n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => setSelectedFile(file)}\n                      className=\"flex-1 text-xs\"\n                    >\n                      <Eye className=\"w-3 h-3 ml-1\" />\n                      مشاهده\n                    </Button>\n                    \n                    <Button\n                      size=\"sm\"\n                      variant=\"destructive\"\n                      onClick={() => deleteMutation.mutate(file.id)}\n                      className=\"text-xs\"\n                    >\n                      <Trash2 className=\"w-3 h-3\" />\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {selectedFile && (\n        <Dialog open={!!selectedFile} onOpenChange={() => setSelectedFile(null)}>\n          <DialogContent className=\"max-w-4xl\">\n            <DialogHeader>\n              <DialogTitle>{selectedFile.originalName}</DialogTitle>\n              <DialogDescription>\n                جزئیات فایل و پیش‌نمایش\n              </DialogDescription>\n            </DialogHeader>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                {selectedFile.type.startsWith('image/') ? (\n                  <img\n                    src={selectedFile.url}\n                    alt={selectedFile.originalName}\n                    className=\"w-full rounded-lg border\"\n                  />\n                ) : (\n                  <div className=\"aspect-video bg-gray-100 rounded-lg flex items-center justify-center\">\n                    {getFileIcon(selectedFile.type)}\n                    <span className=\"mr-2 text-gray-600\">پیش‌نمایش در دسترس نیست</span>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <Label>نام فایل</Label>\n                  <p className=\"text-sm text-gray-600\">{selectedFile.filename}</p>\n                </div>\n                \n                <div>\n                  <Label>نام اصلی</Label>\n                  <p className=\"text-sm text-gray-600\">{selectedFile.originalName}</p>\n                </div>\n                \n                <div>\n                  <Label>نوع فایل</Label>\n                  <p className=\"text-sm text-gray-600\">{selectedFile.type}</p>\n                </div>\n                \n                <div>\n                  <Label>حجم فایل</Label>\n                  <p className=\"text-sm text-gray-600\">{formatFileSize(selectedFile.size)}</p>\n                </div>\n                \n                <div>\n                  <Label>آدرس فایل</Label>\n                  <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n                    <Input value={selectedFile.url} readOnly className=\"text-sm\" />\n                    <Button size=\"sm\" onClick={() => handleCopyUrl(selectedFile.url)}>\n                      <Copy className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n                \n                <div className=\"flex space-x-2 rtl:space-x-reverse\">\n                  <Button asChild>\n                    <a href={selectedFile.url} download>\n                      <Download className=\"w-4 h-4 ml-2\" />\n                      دانلود\n                    </a>\n                  </Button>\n                  \n                  <Button \n                    variant=\"destructive\"\n                    onClick={() => {\n                      deleteMutation.mutate(selectedFile.id);\n                      setSelectedFile(null);\n                    }}\n                  >\n                    <Trash2 className=\"w-4 h-4 ml-2\" />\n                    حذف فایل\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  );\n}","size_bytes":13924},"client/src/pages/admin/posts.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { Plus, Search, MoreHorizontal, Edit, Trash2, Eye, Calendar, User } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface Post {\n  id: number;\n  title: string;\n  slug: string;\n  excerpt: string;\n  content: string;\n  status: 'published' | 'draft' | 'pending';\n  category: string;\n  author: string;\n  publishedAt: string;\n  updatedAt: string;\n  views: number;\n}\n\nexport default function PostsPage() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState<string>(\"all\");\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const { data: posts, isLoading } = useQuery({\n    queryKey: [\"/api/admin/posts\", searchQuery, statusFilter],\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/admin/posts/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error('خطا در حذف نوشته');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/posts\"] });\n      toast({\n        title: \"موفقیت\",\n        description: \"نوشته با موفقیت حذف شد\",\n      });\n    },\n  });\n\n  // Sample data\n  const samplePosts: Post[] = [\n    {\n      id: 1,\n      title: \"راهنمای کامل کشاورزی ارگانیک\",\n      slug: \"organic-farming-guide\",\n      excerpt: \"آموزش جامع کشاورزی ارگانیک برای مبتدیان و حرفه‌ای‌ها\",\n      content: \"\",\n      status: \"published\",\n      category: \"آموزش\",\n      author: \"مدیر سیستم\",\n      publishedAt: \"2024-01-15T10:30:00Z\",\n      updatedAt: \"2024-01-15T10:30:00Z\",\n      views: 1250\n    },\n    {\n      id: 2,\n      title: \"تکنیک‌های نوین آبیاری قطره‌ای\",\n      slug: \"drip-irrigation-techniques\",\n      excerpt: \"بررسی روش‌های مدرن آبیاری و مزایای آن\",\n      content: \"\",\n      status: \"published\",\n      category: \"فناوری\",\n      author: \"مدیر سیستم\",\n      publishedAt: \"2024-01-14T15:45:00Z\",\n      updatedAt: \"2024-01-14T15:45:00Z\",\n      views: 987\n    },\n    {\n      id: 3,\n      title: \"مدیریت آفات به روش طبیعی\",\n      slug: \"natural-pest-management\",\n      excerpt: \"روش‌های طبیعی و سازگار با محیط زیست برای کنترل آفات\",\n      content: \"\",\n      status: \"draft\",\n      category: \"آموزش\",\n      author: \"مدیر سیستم\",\n      publishedAt: \"\",\n      updatedAt: \"2024-01-13T09:20:00Z\",\n      views: 0\n    }\n  ];\n\n  const displayPosts = posts || samplePosts;\n  const filteredPosts = displayPosts.filter(post => {\n    const matchesSearch = post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         post.content.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesStatus = statusFilter === \"all\" || post.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      published: { label: \"منتشر شده\", variant: \"default\" as const },\n      draft: { label: \"پیش‌نویس\", variant: \"secondary\" as const },\n      pending: { label: \"در انتظار\", variant: \"outline\" as const }\n    };\n    \n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.draft;\n    return <Badge variant={config.variant}>{config.label}</Badge>;\n  };\n\n  const formatDate = (dateString: string) => {\n    if (!dateString) return \"—\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString('fa-IR');\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">نوشته‌ها</h1>\n          <p className=\"text-gray-600 mt-1\">مدیریت مقالات و محتوای سایت</p>\n        </div>\n        \n        <Link href=\"/admin/posts/new\">\n          <Button className=\"bg-green-600 hover:bg-green-700\">\n            <Plus className=\"w-4 h-4 ml-2\" />\n            نوشته جدید\n          </Button>\n        </Link>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>همه نوشته‌ها</CardTitle>\n              <CardDescription>\n                مدیریت و ویرایش نوشته‌های سایت\n              </CardDescription>\n            </div>\n            \n            <div className=\"flex items-center space-x-4 rtl:space-x-reverse\">\n              <div className=\"relative\">\n                <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                <Input\n                  placeholder=\"جستجو در نوشته‌ها...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pr-10 w-64\"\n                />\n              </div>\n              \n              <select\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm\"\n              >\n                <option value=\"all\">همه وضعیت‌ها</option>\n                <option value=\"published\">منتشر شده</option>\n                <option value=\"draft\">پیش‌نویس</option>\n                <option value=\"pending\">در انتظار</option>\n              </select>\n            </div>\n          </div>\n        </CardHeader>\n        \n        <CardContent>\n          {isLoading ? (\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"animate-pulse flex items-center space-x-4 rtl:space-x-reverse\">\n                  <div className=\"bg-gray-200 h-4 w-2/5 rounded\"></div>\n                  <div className=\"bg-gray-200 h-4 w-24 rounded\"></div>\n                  <div className=\"bg-gray-200 h-4 w-20 rounded\"></div>\n                  <div className=\"bg-gray-200 h-4 w-16 rounded\"></div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>عنوان</TableHead>\n                  <TableHead>دسته‌بندی</TableHead>\n                  <TableHead>وضعیت</TableHead>\n                  <TableHead>نویسنده</TableHead>\n                  <TableHead>تاریخ انتشار</TableHead>\n                  <TableHead>بازدید</TableHead>\n                  <TableHead className=\"text-left\">عملیات</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredPosts.map((post) => (\n                  <TableRow key={post.id}>\n                    <TableCell>\n                      <div>\n                        <div className=\"font-medium text-gray-900\">{post.title}</div>\n                        <div className=\"text-sm text-gray-500 mt-1\">{post.excerpt}</div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\">{post.category}</Badge>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusBadge(post.status)}\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center\">\n                        <User className=\"w-4 h-4 ml-2 text-gray-400\" />\n                        <span className=\"text-sm\">{post.author}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center text-sm text-gray-600\">\n                        <Calendar className=\"w-4 h-4 ml-2\" />\n                        {formatDate(post.publishedAt)}\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center text-sm text-gray-600\">\n                        <Eye className=\"w-4 h-4 ml-2\" />\n                        {post.views.toLocaleString()}\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuItem asChild>\n                            <Link href={`/admin/posts/${post.id}/edit`}>\n                              <Edit className=\"w-4 h-4 ml-2\" />\n                              ویرایش\n                            </Link>\n                          </DropdownMenuItem>\n                          <DropdownMenuItem asChild>\n                            <Link href={`/posts/${post.slug}`}>\n                              <Eye className=\"w-4 h-4 ml-2\" />\n                              مشاهده\n                            </Link>\n                          </DropdownMenuItem>\n                          <DropdownMenuItem\n                            onClick={() => deleteMutation.mutate(post.id)}\n                            className=\"text-red-600\"\n                          >\n                            <Trash2 className=\"w-4 h-4 ml-2\" />\n                            حذف\n                          </DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n\n      {filteredPosts.length === 0 && !isLoading && (\n        <div className=\"text-center py-12\">\n          <div className=\"w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <FileText className=\"w-12 h-12 text-gray-400\" />\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">هیچ نوشته‌ای یافت نشد</h3>\n          <p className=\"text-gray-500 mb-4\">\n            {searchQuery ? \"جستجوی شما نتیجه‌ای نداشت\" : \"هنوز نوشته‌ای ایجاد نشده است\"}\n          </p>\n          <Link href=\"/admin/posts/new\">\n            <Button>\n              <Plus className=\"w-4 h-4 ml-2\" />\n              ایجاد اولین نوشته\n            </Button>\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":11517},"android/app/src/androidTest/java/com/getcapacitor/myapp/ExampleInstrumentedTest.java":{"content":"package com.getcapacitor.myapp;\n\nimport static org.junit.Assert.*;\n\nimport android.content.Context;\nimport androidx.test.ext.junit.runners.AndroidJUnit4;\nimport androidx.test.platform.app.InstrumentationRegistry;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\n/**\n * Instrumented test, which will execute on an Android device.\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\n@RunWith(AndroidJUnit4.class)\npublic class ExampleInstrumentedTest {\n\n    @Test\n    public void useAppContext() throws Exception {\n        // Context of the app under test.\n        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n\n        assertEquals(\"com.getcapacitor.app\", appContext.getPackageName());\n    }\n}\n","size_bytes":774},"android/app/src/main/java/com/pistac/app/MainActivity.java":{"content":"package com.pistac.app;\n\nimport com.getcapacitor.BridgeActivity;\n\npublic class MainActivity extends BridgeActivity {}\n","size_bytes":118},"android/app/src/test/java/com/getcapacitor/myapp/ExampleUnitTest.java":{"content":"package com.getcapacitor.myapp;\n\nimport static org.junit.Assert.*;\n\nimport org.junit.Test;\n\n/**\n * Example local unit test, which will execute on the development machine (host).\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\npublic class ExampleUnitTest {\n\n    @Test\n    public void addition_isCorrect() throws Exception {\n        assertEquals(4, 2 + 2);\n    }\n}\n","size_bytes":402},"download-guide.md":{"content":"# 📥 راهنمای دانلود و اجرای پروژه Pistac\n\n## 🎯 معرفی پروژه\n\nPistac یک پلتفرم آموزشی مدرن برای حوزه کشاورزی است که شامل:\n\n- 🌐 **وب اپلیکیشن**: پلتفرم کامل با React و TypeScript\n- 📱 **اپلیکیشن موبایل**: اپ Android و iOS با Capacitor\n- 🎛️ **پنل ادمین**: مدیریت کامل محتوا\n- 📊 **پایگاه داده**: SQLite برای ذخیره‌سازی\n- 🎥 **مدیریت رسانه**: آپلود و مدیریت فایل‌های مختلف\n\n---\n\n## 🔧 پیش‌نیازها\n\nقبل از دانلود و اجرا، مطمئن شوید این موارد روی سیستم شما نصب است:\n\n### ✅ نرم‌افزارهای ضروری:\n- **Node.js** (نسخه 18 یا بالاتر) - [دانلود](https://nodejs.org/)\n- **npm** (همراه با Node.js نصب می‌شود)\n- **Git** (اختیاری) - [دانلود](https://git-scm.com/)\n\n### 📱 برای توسعه موبایل (اختیاری):\n- **Android Studio** (برای Android) - [دانلود](https://developer.android.com/studio)\n- **Xcode** (برای iOS - فقط macOS) - [دانلود](https://apps.apple.com/app/xcode/id497799835)\n\n---\n\n## 📥 روش‌های دانلود\n\n### 🥇 روش اول: دانلود از Replit (پیشنهادی)\n\n1. در صفحه Replit، روی **Files** در سمت چپ کلیک کنید\n2. روی آیکون **\"...\"** (منوی بیشتر) در بالای لیست فایل‌ها کلیک کنید\n3. گزینه **\"Download as ZIP\"** را انتخاب کنید\n4. فایل زیپ روی کامپیوتر شما دانلود می‌شود\n\n### 🥈 روش دوم: استفاده از Git (برای توسعه‌دهندگان)\n\n```bash\n# کلون کردن پروژه\ngit clone [URL-پروژه-شما]\ncd [نام-پروژه]\n```\n\n---\n\n## ⚙️ راه‌اندازی پروژه\n\n### 1️⃣ استخراج و باز کردن پروژه\n\n```bash\n# اگر فایل زیپ دانلود کرده‌اید، آن را استخراج کنید\n# سپس وارد پوشه پروژه شوید\ncd pistac-project\n```\n\n### 2️⃣ نصب وابستگی‌ها\n\n```bash\n# نصب همه پکیج‌های مورد نیاز\nnpm install\n```\n\n### 3️⃣ راه‌اندازی پایگاه داده\n\n```bash\n# اجرای migration های پایگاه داده\nnpm run db:push\n```\n\n### 4️⃣ اجرای پروژه\n\n```bash\n# اجرای پروژه در حالت development\nnpm run dev\n```\n\nپس از اجرا، پروژه روی آدرس **http://localhost:5000** در دسترس خواهد بود.\n\n---\n\n## 🌐 دسترسی به پنل ادمین\n\n- **آدرس پنل ادمین**: `http://localhost:5000/admin-simple`\n- **نام کاربری**: `admin`\n- **رمز عبور**: `730895015`\n\n---\n\n## 📱 ساخت اپلیکیشن موبایل\n\n### 🤖 برای Android:\n\n```bash\n# راه‌اندازی اولیه Capacitor\nnpm run mobile:init\n\n# ساخت و باز کردن پروژه Android\nnpm run mobile:android\n```\n\n### 🍎 برای iOS:\n\n```bash\n# راه‌اندازی اولیه Capacitor\nnpm run mobile:init\n\n# ساخت و باز کردن پروژه iOS\nnpm run mobile:ios\n```\n\n---\n\n## 🏗️ ساخت نسخه نهایی (Production)\n\n### وب اپلیکیشن:\n\n```bash\n# ساخت نسخه بهینه‌شده\nnpm run build\n\n# اجرای نسخه production\nnpm run start\n```\n\n### فایل‌های ساخته شده در پوشه `dist/` قرار می‌گیرند.\n\n---\n\n## 📁 ساختار پروژه\n\n```\n📁 pistac-project/\n├── 📁 client/              # فرانت‌اند React\n│   ├── 📁 src/\n│   │   ├── 📁 components/   # کامپوننت‌های UI\n│   │   ├── 📁 pages/        # صفحات اپلیکیشن\n│   │   ├── 📁 hooks/        # React Hooks\n│   │   └── 📁 lib/          # توابع کمکی\n├── 📁 server/              # بک‌اند Express.js\n├── 📁 shared/              # اسکیمای پایگاه داده\n├── 📁 android/             # پروژه Android\n├── 📁 ios/                 # پروژه iOS\n├── 📁 public/              # فایل‌های استاتیک\n│   └── 📁 uploads/         # فایل‌های آپلود شده\n├── 📄 package.json         # تنظیمات پروژه\n├── 📄 pistac.db           # فایل پایگاه داده SQLite\n└── 📄 README.md           # مستندات پروژه\n```\n\n---\n\n## 🛠️ اسکریپت‌های مفید\n\n```bash\n# توسعه\nnpm run dev              # اجرای حالت development\n\n# ساخت\nnpm run build            # ساخت نسخه production\nnpm run start            # اجرای نسخه production\n\n# پایگاه داده\nnpm run db:push          # اعمال تغییرات schema\n\n# بررسی کد\nnpm run check            # بررسی TypeScript\n\n# موبایل\nnpm run mobile:init      # راه‌اندازی اولیه Capacitor\nnpm run mobile:build     # ساخت و همگام‌سازی با موبایل\nnpm run mobile:android   # باز کردن Android Studio\nnpm run mobile:ios       # باز کردن Xcode\n```\n\n---\n\n## 🔧 تنظیمات مهم\n\n### 📡 تنظیمات سرور\n\nپروژه به صورت پیش‌فرض روی پورت **5000** اجرا می‌شود. برای تغییر پورت:\n\n```bash\n# ویرایش فایل server/index.ts\nconst PORT = process.env.PORT || 5000;\n```\n\n### 💾 تنظیمات پایگاه داده\n\nپروژه از SQLite استفاده می‌کند و فایل پایگاه داده در `pistac.db` ذخیره می‌شود.\n\n### 📂 مدیریت فایل‌ها\n\nفایل‌های آپلود شده در پوشه `public/uploads/` ذخیره می‌شوند.\n\n---\n\n## 🚀 استقرار (Deployment)\n\n### 🌐 Vercel:\n1. اکانت Vercel ایجاد کنید\n2. پروژه را به GitHub آپلود کنید\n3. از Vercel به مخزن GitHub متصل شوید\n\n### 🖥️ سرور شخصی:\n```bash\n# ساخت پروژه\nnpm run build\n\n# کپی فایل‌ها روی سرور\n# اجرای دستور start\nnpm run start\n```\n\n---\n\n## ❓ رفع مشکلات متداول\n\n### 🔴 خطای نصب پکیج‌ها:\n```bash\n# پاک کردن cache و نصب مجدد\nrm -rf node_modules package-lock.json\nnpm install\n```\n\n### 🔴 مشکل پورت اشغال:\n```bash\n# پیدا کردن و بستن پروسه\nnpx kill-port 5000\n```\n\n### 🔴 مشکل پایگاه داده:\n```bash\n# ری‌ست کردن پایگاه داده\nrm pistac.db\nnpm run db:push\n```\n\n---\n\n## 📞 پشتیبانی\n\nاگر با مشکلی مواجه شدید:\n\n1. ✅ ابتدا مطمئن شوید همه پیش‌نیازها نصب شده‌اند\n2. 🔄 دستور `npm install` را مجدداً اجرا کنید\n3. 📖 لاگ‌های خطا را بررسی کنید\n4. 🔍 در بخش Issues مشکل مشابه جستجو کنید\n\n---\n\n## 🎉 تبریک!\n\nحالا پروژه Pistac روی سیستم شما به درستی نصب و اجرا شده است. می‌توانید شروع به توسعه و سفارشی‌سازی کنید!\n\n**نکات مهم:**\n- ✨ برای هر تغییری که در کد ایجاد می‌کنید، سرور به صورت خودکار restart می‌شود\n- 💾 تغییرات پایگاه داده با `npm run db:push` اعمال می‌شوند\n- 📱 برای تست روی موبایل از دستورات `mobile:android` یا `mobile:ios` استفاده کنید\n\nموفق باشید! 🚀","size_bytes":7604},"vscode-setup-guide.md":{"content":"# 🚀 راهنمای کامل راه‌اندازی پروژه Pistac در VS Code\n\n## ✅ وضعیت کامل پروژه\n\n### 🎯 پروژه شما **کاملاً آماده** برای استفاده در VS Code است!\n\n**✅ تایید شده:**\n- دیتابیس SQLite کامل و عملکردی\n- سیستم آپلود/دانلود فایل‌ها تست شده\n- پنل ادمین کامل و کاربردی\n- تمام کدها بررسی و بهینه شده\n- تنظیمات VS Code پیش‌تنظیم شده\n\n---\n\n## 📥 مراحل دانلود و راه‌اندازی\n\n### 1️⃣ دانلود پروژه\n\n**روش پیشنهادی در Replit:**\n```bash\nFiles → منوی (...) → \"Download as ZIP\"\n```\n\n### 2️⃣ استخراج و آماده‌سازی\n```bash\n# استخراج فایل ZIP\n# نام پوشه: pistac-project (یا نام انتخابی شما)\ncd pistac-project\n\n# نصب dependencies\nnpm install\n```\n\n### 3️⃣ تنظیمات محیطی\n\nفایل `.env` ایجاد کنید:\n```env\nNODE_ENV=development\nPORT=5000\nSESSION_SECRET=your-secure-session-secret-here\nDEBUG=true\n```\n\n### 4️⃣ راه‌اندازی دیتابیس\n```bash\n# اعمال schema دیتابیس (اختیاری - قبلاً انجام شده)\nnpm run db:push\n```\n\n### 5️⃣ اجرای پروژه\n```bash\n# اجرای حالت development\nnpm run dev\n```\n\n---\n\n## 🎛️ VS Code - راه‌اندازی و دیباگ\n\n### 📁 فایل‌های پیش‌تنظیم شده\n\nپروژه شامل تنظیمات کاملی برای VS Code است:\n\n**📄 `.vscode/launch.json`** - تنظیمات دیباگ\n**📄 `.vscode/tasks.json`** - وظایف خودکار\n\n### 🔍 راه‌اندازی دیباگ\n\n1. **باز کردن در VS Code**:\n   ```bash\n   code pistac-project\n   ```\n\n2. **اجرای دیباگ**:\n   - `F5` یا `Run and Debug` → `🚀 Launch Pistac (Development)`\n   - برای Attach: `🔍 Attach to Server`\n\n3. **Tasks دستی**:\n   - `Ctrl+Shift+P` → `Tasks: Run Task`\n   - انتخاب از: `🏃 Start Dev Server`, `🗄️ Setup Database`, `🔨 Build Project`\n\n### 🌐 دسترسی به اپلیکیشن\n\n- **وب‌سایت**: `http://localhost:5000`\n- **پنل ادمین**: `http://localhost:5000/admin-simple`\n\n**اطلاعات ورود ادمین:**\n- نام کاربری: `admin`  \n- رمز عبور: `730895015`\n\n---\n\n## 📊 امکانات کاملاً تست شده\n\n### ✅ مدیریت کاربران\n- ثبت‌نام و ورود کاربران\n- سطوح دسترسی (admin, user, premium)\n- مدیریت پروفایل\n\n### ✅ مدیریت محتوا\n- دوره‌های آموزشی\n- پروژه‌ها و تمرین‌ها\n- مجلات و مقالات\n- ویدیوهای آموزشی\n- کارگاه‌ها و وبینارها\n\n### ✅ سیستم فایل\n- آپلود تصاویر و PDF (حد اکثر 10MB)\n- مدیریت رسانه در `public/uploads/`\n- دسترسی مستقیم از `/uploads/filename`\n\n### ✅ پنل ادمین کامل\n- مدیریت کامل محتوا\n- آپلود و مدیریت فایل‌ها\n- ایجاد و ویرایش صفحات\n- تنظیمات سایت\n\n---\n\n## 🏗️ معماری پروژه\n\n```\n📁 pistac-project/\n├── 🖥️ client/           # React Frontend\n│   ├── src/components/   # UI Components\n│   ├── src/pages/        # صفحات اپلیکیشن\n│   ├── src/hooks/        # React Hooks\n│   └── src/lib/         # توابع کمکی\n├── ⚙️ server/           # Express.js Backend\n│   ├── index.ts         # سرور اصلی\n│   ├── routes.ts        # API Routes\n│   ├── db.ts           # اتصال دیتابیس\n│   └── storage.ts       # عملیات دیتابیس\n├── 🗄️ shared/          # Drizzle Schema\n├── 📱 android/         # Android App\n├── 🍎 ios/            # iOS App\n├── 🎯 .vscode/         # VS Code Settings\n├── 📄 pistac.db        # SQLite Database\n└── 🌐 public/uploads/   # فایل‌های آپلود شده\n```\n\n---\n\n## 🚀 دستورات مفید\n\n### 📦 Development\n```bash\nnpm run dev              # اجرای development server\nnpm run build            # ساخت نسخه production\nnpm run start            # اجرای production server\n```\n\n### 🗄️ Database\n```bash\nnpm run db:push          # اعمال schema changes\n```\n\n### 📱 Mobile\n```bash\nnpm run mobile:init      # راه‌اندازی Capacitor\nnpm run mobile:android   # باز کردن Android Studio\nnpm run mobile:ios       # باز کردن Xcode\n```\n\n### 🔧 Utilities\n```bash\nnpm run check            # بررسی TypeScript\nnpm install              # نصب dependencies\n```\n\n---\n\n## 🛠️ رفع مشکلات\n\n### 🔴 پورت اشغال\n```bash\n# بستن پروسه روی پورت 5000\nnpx kill-port 5000\n```\n\n### 🔴 مشکل Dependencies\n```bash\n# نصب مجدد\nrm -rf node_modules package-lock.json\nnpm install\n```\n\n### 🔴 مشکل Database\n```bash\n# ریست دیتابیس (اختیاری)\nrm pistac.db\nnpm run db:push\n```\n\n### 🔴 خطاهای TypeScript\n```bash\n# بررسی کدها\nnpm run check\n```\n\n---\n\n## 🎨 سفارشی‌سازی\n\n### 🌈 تغییر تم و رنگ‌ها\nفایل: `client/src/index.css`\n\n### 📝 تغییر محتوا\n- اسلایدرها: پنل ادمین → `slides`\n- دوره‌ها: پنل ادمین → `courses`\n- مجلات: پنل ادمین → `magazines`\n\n### 🔧 تنظیمات سرور\nفایل: `server/index.ts`\n\n---\n\n## 🔒 امنیت\n\n### ⚠️ نکات مهم:\n- حتماً `SESSION_SECRET` را در production تغییر دهید\n- فایل‌های حساس را در `.env` نگه دارید\n- از HTTPS در production استفاده کنید\n\n---\n\n## 📈 عملکرد\n\n### ✅ بهینه‌سازی‌های انجام شده:\n- TanStack Query برای cache داده‌ها\n- SQLite برای سرعت بالا\n- Vite برای hot reload سریع\n- TypeScript برای توسعه ایمن\n\n---\n\n## 📞 پشتیبانی\n\nاگر مشکلی داشتید:\n\n1. ✅ مطمئن شوید Node.js نصب شده\n2. 🔄 دستور `npm install` را اجرا کنید  \n3. 📖 لاگ‌های console را بررسی کنید\n4. 🌐 مطمئن شوید پورت 5000 آزاد است\n\n---\n\n## 🎉 تبریک!\n\nپروژه Pistac آماده استفاده در VS Code است! \n\n**امکانات کامل:**\n- ✅ وب‌سایت کامل\n- ✅ اپلیکیشن موبایل  \n- ✅ پنل ادمین\n- ✅ سیستم فایل\n- ✅ دیتابیس قدرتمند\n\n**موفق باشید! 🚀**","size_bytes":6633}},"version":1}